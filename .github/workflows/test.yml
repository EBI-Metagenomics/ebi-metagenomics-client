name: Testing

on: [push, pull_request]
env:
    EMG_CONFIG: ${{ github.workspace }}/ci/config.yaml
    API_URL: http://localhost:9000/metagenomics/api/v1/
    SEARCH_URL: https://www.ebi.ac.uk/ebisearch/ws/rest/metagenomics_
    DEPLOYMENT_SUBFOLDER: /metagenomics
jobs:
    build:
        runs-on: ubuntu-latest
        # strategy:
        #   matrix:
        #     python-version: [3.6, 3.7.1, 3.8.6]

        steps:
            - uses: actions/checkout@v2
            - name: 🌎 - Setup NginX
              run: |
                  sudo chmod 777 /var/log/nginx/*
                  sudo chmod 777 /var/run/*
                  sudo chmod 777 /var/run
                  sed -i s#{GITHUB_WORKSPACE}#$GITHUB_WORKSPACE#g ci/nginx.conf
                  nginx -c "$(pwd)/ci/nginx.conf"
                  curl --silent http://localhost:9000/
            - name: 🐍 - Set up Python 3.6
              uses: actions/setup-python@v2
              with:
                  python-version: 3.6
            - name: 📜 - Set up JS Node 10
              uses: actions/setup-node@v1
              with:
                  node-version: '10'
            - name: 💾 Start MongoDB
              uses: supercharge/mongodb-github-action@1.3.0
              with:
                  mongodb-version: 4.0.6
            - name: 🔧🔬 - Install EMG API
              run: |
                  python -V
                  pip -V
                  pip install "git+git://github.com/EBI-Metagenomics/django-rest-framework-json-api@develop#egg=djangorestframework-jsonapi"
                  pip install "git+git://github.com/EBI-metagenomics/emgapi@develop#egg=emgcli"
                  ls -l

            - name: 💾 - Setting MySQL
              run: |
                  sudo systemctl start mysql
                  mysql --version
                  mysql -uroot -proot -e 'CREATE DATABASE emg;'
                  mysql -uroot -proot -e 'CREATE DATABASE ena;'
                  mysql -uroot -proot -e "SET GLOBAL sql_mode = 'STRICT_TRANS_TABLES'"
                  emgcli migrate
                  mysql -uroot -proot --database=emg -e "SET FOREIGN_KEY_CHECKS = 0;"
                  for SQL_FIXTURE in ci/emg_sql_fixtures/*.sql; do echo "SQL >>>> $SQL_FIXTURE"; mysql -uroot -proot --database=emg < "$SQL_FIXTURE"; done
                  mysql -uroot -proot --database=emg -e "SET FOREIGN_KEY_CHECKS = 1;"
            - name: 🪜 - Setting up Fixtures
              run: |
                  source ci/create_download_files.sh
                  ls -lh ~/results
            - name: 🔬 - Start EMG API
              continue-on-error: true
              run: |
                  emgcli collectstatic --noinput
                  emgcli check --deploy
                  cd emgapi
                  export GUNICORN_CMD_ARGS="--bind 127.0.0.1:8000 --workers=1 --daemon -p emg.pid --error-logfile error.log --access-logfile access.log" 
                  emgdeploy emgcli.wsgi:application
                  ps aux | grep emgdeploy
                  cd ..
                  echo "nginx"
                  curl --silent http://localhost:9000/metagenomics/api/v1/
                  echo "gunicorn v1/"
                  curl --silent http://localhost:8000/v1/
                  echo "gunicorn meta/v1/"
                  curl --silent http://localhost:8000/metagenomics/api/v1/
            # - name: 🔧 - Install
            #   run: |
            #       npm ci
            #       npm run build
            #       ls dist/
            #       mv dist/metagenomics/* /usr/share/nginx/html/
            #       ls /usr/share/nginx/html/
            # - name: 🧪 - Testing
            #   uses: cypress-io/github-action@v2
            # - name: 📊 - Coverage
            #   run: |
            #       npm run coverage
            # - name: Upload coverage to Codecov
            #   uses: codecov/codecov-action@v1
            - name: 🐞 - Error log
              run: |
                  echo "API error log"
                  cat emgapi/error.log
                  echo "API access log"
                  cat emgapi/access.log
                  echo "NGINX error log"
                  cat /var/log/nginx/error.log
                  echo "NGINX access log"
                  cat /var/log/nginx/access.log
            - name: 📮 - Slack Notification
              uses: rtCamp/action-slack-notify@v2
              continue-on-error: true
              if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'|| github.ref == 'refs/heads/compatible_with_django3_api'
              env:
                  SLACK_COLOR: "${{ job.status == 'success' && 'good' || 'danger' }}"
                  SLACK_USERNAME: 'Github Actions API'
                  SLACK_ICON_EMOJI: ':octocat:'
                  SLACK_TITLE: 'webkit results in GitHub Actions'
                  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
                  SLACK_CHANNEL: '#metagenomics-notify'
                  MSG_MINIMAL: Actions URL
