name: Testing

on: [push, pull_request]
env:
    EMG_CONFIG: ${{ github.workspace }}/ci/config.yaml
    API_URL: http://localhost:9000/metagenomics/api/v1/
    SEARCH_URL: https://www.ebi.ac.uk/ebisearch/ws/rest/metagenomics_
    DEPLOYMENT_SUBFOLDER: /metagenomics
    BASE_URL: http://localhost:9000/metagenomics/
    INTERPRO_URL: http://www.ebi.ac.uk/interpro/
    SEQUENCE_SEARCH_URL: https://wwwdev.ebi.ac.uk/metagenomics/sequence-search/search/phmmer
    ENA_URL: https://www.ebi.ac.uk/ena/browser/view/
    CYPRESS_WEBIN_USERNAME: Webin-000
    CYPRESS_WEBIN_PASSWORD: secret

jobs:
    build:
        runs-on: ubuntu-latest
        # strategy:
        #   matrix:
        #     python-version: [3.6, 3.7.1, 3.8.6]

        steps:
            - name: 🌱 - Get git branch name
              id: git-branch-name
              uses: EthanSK/git-branch-name-action@v1
            - uses: actions/checkout@v2
            - name: 📣 - Announce git branch name
              run: |
                  echo ${GIT_BRANCH_NAME}
            - name: 🐍 - Set up Python 3.8.6
              uses: actions/setup-python@v2
              with:
                  python-version: 3.8.6
            - name: 📜 - Set up JS Node 14
              uses: actions/setup-node@v1
              with:
                  node-version: '14'
            - name: 💾 Start MongoDB
              uses: supercharge/mongodb-github-action@1.3.0
              with:
                  mongodb-version: 4.0.6
            - name: 🔧🔬 - Install EMG API
              run: |
                  python -V
                  pip -V
                  pip install "git+https://github.com/EBI-metagenomics/emgapi@develop#egg=emgcli"
                  ls -l

            - name: 💾 - Setting MySQL
              run: |
                  sudo systemctl start mysql
                  mysql --version
                  mysql -uroot -proot -e 'DROP DATABASE IF EXISTS emg;'
                  mysql -uroot -proot -e 'DROP DATABASE IF EXISTS ena;'
                  mysql -uroot -proot -e 'CREATE DATABASE emg;'
                  mysql -uroot -proot -e 'CREATE DATABASE ena;'
                  mysql -uroot -proot -e "SET GLOBAL sql_mode = 'STRICT_TRANS_TABLES'"
                  emgcli migrate
                  mysql -uroot -proot --database=emg -e "SET FOREIGN_KEY_CHECKS = 0;"
                  for SQL_FIXTURE in ci/emg_sql_fixtures/*.sql; do echo "SQL >>>> $SQL_FIXTURE"; mysql -uroot -proot --database=emg < "$SQL_FIXTURE"; done
                  mysql -uroot -proot --database=emg -e "SET FOREIGN_KEY_CHECKS = 1;"
            - name: 🌎 - Setup NginX
              run: |
                  sudo chown runner /var/log/nginx/*
                  sudo chown runner /var/run/*
                  sudo chown runner /var/run
                  sed -i s#{GITHUB_WORKSPACE}#$GITHUB_WORKSPACE#g ci/nginx.conf
                  nginx -c "$(pwd)/ci/nginx.conf"
            - name: 🪜 - Setting up Fixtures
              run: |
                  source ci/create_download_files.sh
                  ls -lh ~/results

                  emgcli import_taxonomy ERR1022502 ~/results --pipeline 4.0
                  emgcli import_qc ERR1022502 ~/results --pipeline 4.0
                  emgcli import_summary ERR1022502 ~/results .ipr --pipeline 4.0
                  emgcli import_summary ERR1022502 ~/results .go_slim --pipeline 4.0
                  emgcli import_summary ERR1022502 ~/results .go --pipeline 4.0

                  emgcli import_taxonomy ERR1022502 ~/results --pipeline 2.0
                  emgcli import_qc ERR1022502 ~/results --pipeline 2.0
                  emgcli import_summary ERR1022502 ~/results .ipr --pipeline 2.0
                  emgcli import_summary ERR1022502 ~/results .go_slim --pipeline 2.0
                  emgcli import_summary ERR1022502 ~/results .go --pipeline 2.0

                  emgcli import_taxonomy ERR867655 ~/results --pipeline 4.0
                  emgcli import_qc ERR867655 ~/results --pipeline 4.0
                  emgcli import_summary ERR867655 ~/results .ipr --pipeline 4.0
                  emgcli import_summary ERR867655 ~/results .go_slim --pipeline 4.0
                  emgcli import_summary ERR867655 ~/results .go --pipeline 4.0

                  emgcli import_taxonomy ERP104236 ~/results --pipeline 4.0
                  emgcli import_qc ERP104236 ~/results --pipeline 4.0
                  emgcli import_summary ERP104236 ~/results .ipr --pipeline 4.0
                  emgcli import_summary ERP104236 ~/results .go_slim --pipeline 4.0
                  emgcli import_summary ERP104236 ~/results .go --pipeline 4.0

                  emgcli import_taxonomy ERZ477576 ~/results --pipeline 5.0
                  emgcli import_qc ERZ477576 ~/results --pipeline 5.0
                  emgcli import_contigs ERZ477576 ~/results --pipeline 5.0
                  emgcli import_summary ERZ477576 ~/results .ipr --pipeline 5.0
                  emgcli import_summary ERZ477576 ~/results .go --pipeline 5.0

                  emgcli import_summary ERZ477576 ~/results .go_slim --pipeline 5.0
                  emgcli import_summary ERZ477576 ~/results .pfam --pipeline 5.0
                  emgcli import_summary ERZ477576 ~/results .gprops --pipeline 5.0
                  emgcli import_summary ERZ477576 ~/results .antismash --pipeline 5.0

                  emgcli import_kegg_modules ${{ github.workspace }}/ci/fixtures/kegg_module_orthology.json
                  emgcli import_kegg_classes ${{ github.workspace }}/ci/fixtures/kegg_class_orthology.json
                  emgcli import_cog_descriptions ${{ github.workspace }}/ci/fixtures/cog.csv
                  emgcli import_genomes ~/results/ genomes/uhgg/2.0/ Human\ Gut 2.0 root:Host-Associated:Human:Digestive\ System:Large\ intestine

                  git clone --single-branch --branch develop https://github.com/EBI-Metagenomics/emgapi.git

                  mysql -uroot -proot --database=ena < ${{ github.workspace }}/ci/ena_db.sql
            - name: 🔬 - Start EMG API
              run: |
                  export PYTHONPATH="$PYTHONPATH:${{ github.workspace }}/emgapi/tests/"
                  echo $PYTHONPATH  
                  emgcli collectstatic --noinput
                  emgcli check --deploy
                  cd emgapi
                  export GUNICORN_CMD_ARGS="--bind 127.0.0.1:8000 --workers=1 --daemon -p emg.pid --error-logfile error.log --access-logfile access.log" 
                  emgdeploy emgcli.wsgi:application
                  ps aux | grep emgdeploy
                  cd ..
                  echo "nginx"
                  curl --silent http://localhost:9000/metagenomics/api/v1/
                  echo "\ngunicorn v1/"
                  curl --silent http://localhost:8000/v1/
            - name: 🔧 - Install
              run: |
                  npm ci
                  npm install "https://github.com/EBI-Metagenomics/ebi-metagenomics-webkit#${GIT_BRANCH_NAME}" || npm install "https://github.com/EBI-Metagenomics/ebi-metagenomics-webkit"
                  npm run build
                  ls dist/
                  mv dist/metagenomics /usr/share/nginx/html/metagenomics
                  ls /usr/share/nginx/html/
                  echo "\nweb index"
                  curl --silent http://localhost:9000/metagenomics/
            - name: 🧪 - Testing
              uses: cypress-io/github-action@v2
            - name: 📉 - Get Coverage
              run: |
                  npm run coverage
            - name: 📉 -Upload coverage to Codecov
              uses: codecov/codecov-action@v1
            - name: 📸 - Failed tests snapshots
              uses: actions/upload-artifact@v2
              if: failure()
              with:
                name: tests-snapshots
                path: /home/runner/work/ebi-metagenomics-client/ebi-metagenomics-client/cypress/screenshots/           # - name: 📊 - Coverage
            - name: 🐞 - Error log
              if: failure()
              run: |
                  echo "API error log"
                  cat emgapi/error.log || echo "No API log"
                  echo "API access log"
                  cat emgapi/access.log || echo "No access log"
                  echo "NGINX error log"
                  cat /var/log/nginx/error.log || echo "No nginx error log"
                  echo "NGINX access log"
                  cat /var/log/nginx/access.log || echo "No nginx access log"
            - name: 📮 - Slack Notification
              uses: rtCamp/action-slack-notify@v2
              continue-on-error: true
              if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
              env:
                  SLACK_COLOR: "${{ job.status == 'success' && 'good' || 'danger' }}"
                  SLACK_USERNAME: 'Github Actions API'
                  SLACK_ICON_EMOJI: ':octocat:'
                  SLACK_TITLE: 'webkit results in GitHub Actions'
                  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
                  SLACK_CHANNEL: '#metagenomics-notify'
                  MSG_MINIMAL: Actions URL
