name: Testing

on: [ push, pull_request ]
env:
  EMG_CONFIG: ${{ github.workspace }}/client-repo/ci/config.yaml
  API_URL: http://localhost:9000/metagenomics/api/v1/
  SEARCH_URL: https://www.ebi.ac.uk/ebisearch/ws/rest/metagenomics_
  DEPLOYMENT_SUBFOLDER: /metagenomics
  BASE_URL: http://localhost:9000/metagenomics/
  INTERPRO_URL: http://www.ebi.ac.uk/interpro/
  SEQUENCE_SEARCH_URL: https://wwwdev.ebi.ac.uk/metagenomics/sequence-search/search/phmmer
  ENA_URL: https://www.ebi.ac.uk/ena/browser/view/
  CYPRESS_WEBIN_USERNAME: Webin-000
  CYPRESS_WEBIN_PASSWORD: secret

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:4.0.6
        ports:
          - 27017:27017
        options: --health-cmd="mongo" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v3
        with:
          path: client-repo

      - name: üêç - Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: üîßüî¨ - Install EMG API
        run: |
          pip install --user --upgrade pip setuptools
          python -V
          pip -V
          pip install "git+https://github.com/EBI-metagenomics/emgapi@improve-local-dev#egg=emgcli"
          ls -l

      - name: Set up db files for API
        working-directory: client-repo
        run: |
          sed -i s#{GITHUB_WORKSPACE}#$GITHUB_WORKSPACE#g ci/config.yaml
          cat ci/config.yaml
#          sudo chmod 777 ci/testdbs
#          sudo chmod 777 ci/testdbs/*.sqlite

      - name: ü™ú - Setting up Fixtures
        working-directory: client-repo
        run: |
          mongorestore --gzip --archive < ci/testdbs/emg-testdb.mongoarchive
          emgcli migrate
#          source ci/create_download_files.sh
#          ls -lh ~/results

      - name: ‚öôÔ∏è - Settings
        working-directory: client-repo
        env: # Or as an environment variable
          MAPS_KEY: ${{ secrets.GOOGLE_MAPS_DEV_KEY }}
        run: |
          echo "{\"googleMapsKey\": \"$MAPS_KEY\", \"api\": \"$API_URL\"}" > "$(pwd)/config.private.json"

      - uses: actions/checkout@v3
        name: üî¨ - Checkout EMG API
        with:
          repository: 'EBI-Metagenomics/emgapi'
          ref: 'improve-local-dev'
          path: emgapi

      - name: üî¨ - Start EMG API
        run: |
          export PYTHONPATH="$PYTHONPATH:${{ github.workspace }}/emgapi/tests/"
          echo $PYTHONPATH
          emgcli collectstatic --noinput
          emgcli check --deploy
          cd emgapi
          export GUNICORN_CMD_ARGS="--bind 127.0.0.1:8000 --workers=1 --daemon -p emg.pid --error-logfile error.log --access-logfile access.log"
          emgdeploy emgcli.wsgi:application
          ps aux | grep emgdeploy
          cd ..
          echo "\ngunicorn v1/"
          curl --silent http://localhost:8000/v1/

      - name: üåé - Setup NginX
        working-directory: client-repo
        run: |
          sudo chmod 777 /var/log/nginx/*
          sudo chmod 777 /var/run/*
          sudo chmod 777 /var/run
          sed -i s#{GITHUB_WORKSPACE}#$GITHUB_WORKSPACE#g ci/nginx.conf
          nginx -c "$(pwd)/ci/nginx.conf"

      - name: üìú - Set up JS Node 14
        uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'npm'
          cache-dependency-path: client-repo/package-lock.json

#       TODO: ‚ö†Ô∏è the json generated is not understood by codecov
#       TODO: fix 404s for nested URLs ‚Äì nginx config problem?
      - name: üîß - Install
        working-directory: client-repo
        run: |
          npm ci
          npm run build
          npm run coverage:instrument 
          cp -r dist metagenomics
          mv metagenomics /usr/share/nginx/html/metagenomics
          cp -r coverage/instrumented/* /usr/share/nginx/html/metagenomics/
          ls /usr/share/nginx/html/metagenomics
          echo "=== web index ==="
          curl --silent http://localhost:9000/metagenomics/
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

      - name: üßπ - ESlint
        working-directory: client-repo
        run: |
          npm run eslint

      - name: üß™ - Testing
        uses: cypress-io/github-action@v4
        with:
          working-directory: client-repo
          browser: chrome
          spec: |
            cypress/e2e/index.js
            cypress/e2e/about.js
            cypress/e2e/help.js
            cypress/e2e/search.js
            cypress/e2e/sample.js
            cypress/e2e/analysis_v5.js
            cypress/e2e/genome.js
            cypress/e2e/genome_catalogue.js

      - name: üìâ - Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ${{ github.workspace }}/client-repo/coverage/

      - name: ‚öôÔ∏è - Rebuild for deployment
        working-directory: client-repo
        if: github.ref == 'refs/heads/new-client'
        run: |
          echo "{\"googleMapsKey\": \"$MAPS_KEY\", \"basename\": \"\/ebi-metagenomics-client\"}" > "$(pwd)/config.private.json"
          npm run clean
          npm run build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

#      TODO: enable sentry when https://github.com/getsentry/action-release/issues/83 is resolved
#      - name: Sentry Release
#        uses: getsentry/action-release@v1.1.6
#        working-directory: 'client-repo'
#        env:
#          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
#          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
#          SENTRY_LOG_LEVEL: 'info'
#        with:
#          environment: dev
#          sourcemaps: './dist/js'
#          version: ${{ github.sha }}


      - name: üöÄ - Deploy Site
        if: github.ref == 'refs/heads/new-client'
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: client-repo/dist # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch

      - name: üì∏ - Failed tests snapshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: tests-snapshots
          path: /home/runner/work/ebi-metagenomics-client/ebi-metagenomics-client/client-repo/cypress/screenshots/ # - name: üìä - Coverage

      - name: üêû - Error log
        if: failure()
        run: |
          echo "NGINX error log"
          cat /var/log/nginx/error.log
          echo "NGINX access log"
          cat /var/log/nginx/access.log

      - name: üìÆ - Slack Notification
        uses: rtCamp/action-slack-notify@v2
        continue-on-error: true
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
        env:
          SLACK_COLOR: "${{ job.status == 'success' && 'good' || 'danger' }}"
          SLACK_USERNAME: 'Github Actions API'
          SLACK_ICON_EMOJI: ':octocat:'
          SLACK_TITLE: 'webkit results in GitHub Actions'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: '#metagenomics-notify'
          MSG_MINIMAL: Actions URL
