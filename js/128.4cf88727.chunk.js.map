{"version":3,"file":"js/128.4cf88727.chunk.js","mappings":"gJAOA,MAoBA,EApB0C,EACxCA,KAAAA,EACAC,UAAAA,GAAY,EACZC,SAAAA,MAEA,MAAMC,GAAW,UACXC,GAAW,UAOjB,OANA,IAAAC,YAAU,KACc,KAAlBF,EAASH,MAAwB,KAATA,GAAeC,GACzCG,EAASJ,EAAM,CAAEM,SAAS,OAI1BH,EAASH,OAASA,EAEb,gCAAGE,GAEL,O,wDCrBT,MAAMK,EAAc,KAClBC,OAAOL,SAASM,UAqClB,EAlCwD,EAAGC,MAAAA,KACpDA,GAASA,EAAMC,OAAS,aAE3B,uBACEC,UAAU,4CACVC,MAAO,CACLC,gBAAiB,iBAGnB,sBAAIF,UAAU,mBACZ,wBAAMA,UAAU,+C,wBAGlB,qBAAGA,UAAU,iBACVF,MAAAA,OAAK,EAALA,EAAOC,QAAS,iBACf,0CAA0CD,EAAMA,UACjDA,MAAAA,OAAK,EAALA,EAAOC,QAAS,YACf,oDAAoDD,EAAMK,YAC3DL,MAAAA,OAAK,EAALA,EAAOC,QAAS,gBACf,6DAA6DD,EAAMA,WAEvE,uBAAKE,UAAU,YACb,0BACED,KAAK,SACLC,UAAU,+CACVI,QAAST,GAAW,aAxB4B,M,8CCF1D,MAiBA,EAjB8C,EAAGU,KAAAA,KAC/C,uBACEL,UAAU,yBACVC,MAAO,CACLK,oBAAqB,UACrBC,OAAQ,WAGTF,EAAKG,KAAI,EAAGC,IAAAA,EAAKC,MAAOC,KACvB,gBAAC,WAAc,CAACF,IAAKA,GACnB,uBAAKR,MAAO,CAAEW,UAAW,UAAYH,E,KACrC,2BAAuB,iBAAVE,EAAqBA,EAAQ,gBAACA,EAAK,Y,kECdjD,MAkCP,EA1BkC,EAAGE,KAAAA,MACnC,MAAMtB,GAAW,UACjB,OACE,uBAAKS,UAAU,0BACb,sBAAIA,UAAU,iBACXa,EAAKL,KAAI,EAAGM,MAAOC,EAAOC,GAAAA,KACzB,sBAAIhB,UAAU,gBAAgBS,IAAKO,GACjC,gBAAC,KAAI,CACHhB,UAAW,kBACTgB,IAAOzB,EAAS0B,UACfD,EAAGE,WAAW,MAAQF,IAAOzB,EAASH,MAC/B,MAAP4B,GAAgC,KAAlBzB,EAASH,KACpB,YACA,IAEN4B,GAAIA,GAEc,iBAAVD,EAAqBA,EAAQ,gBAACA,EAAK,c,6CC1BzD,MAQA,EARwB,KACtB,MAAMxB,GAAW,UACjB,IAAI,SAAE0B,GAAa1B,EACf0B,EAASE,OAAOC,SAAS,OAAMH,EAAWA,EAASE,OAAOE,MAAM,GAAI,IACxE,MAAMC,EAAQL,EAASM,MAAM,KAC7B,OAAOD,MAAAA,OAAK,EAALA,EAAQA,EAAME,OAAS,K,+HCQhC,MA+FA,EA/FwD,EAAGC,KAAAA,M,8BANvCC,EAOlB,OACE,+BACE,uBAAK1B,UAAU,YACb,2BAAS2B,MAAI,GACX,+BACE,yCAGF,gBAACC,EAAA,EAAY,CACXvB,KAAM,CACJ,CACEI,IAAK,QACLC,OACiC,QAA/B,EAAyB,QAAzB,EAAkB,QAAlB,EAAAe,EAAKI,qBAAa,eAAEC,aAAK,eAAEL,YAAI,eAAEM,KACjC,KACE,gBAAC,KAAI,CAACf,GAAI,YAAYS,EAAKI,cAAcC,MAAML,KAAKM,MACjDN,EAAKI,cAAcC,MAAML,KAAKM,MAIvC,CACEtB,IAAK,SACLC,OACkC,QAAhC,EAA0B,QAA1B,EAAkB,QAAlB,EAAAe,EAAKI,qBAAa,eAAEG,cAAM,eAAEP,YAAI,eAAEM,KAClC,KACE,gBAAC,KAAI,CAACf,GAAI,YAAYS,EAAKI,cAAcG,OAAOP,KAAKM,MAClDN,EAAKI,cAAcG,OAAOP,KAAKM,MAIxC,CACEtB,IAAK,WACLC,OACoC,QAAlC,EAA4B,QAA5B,EAAkB,QAAlB,EAAAe,EAAKI,qBAAa,eAAEI,gBAAQ,eAAER,YAAI,eAAEM,MAxClCL,EAyCSD,EAAKS,WAAW,mBAxCpC,CAAC,WAAY,kBAAmB,uBAAuBC,SAC5DT,KAwCc,KACE,gBAAC,KAAI,CACHV,GAAI,eAAeS,EAAKI,cAAcI,SAASR,KAAKM,MAEnDN,EAAKI,cAAcI,SAASR,KAAKM,MAI1C,CACEtB,IAAK,MACLC,OAC+B,QAA7B,EAAuB,QAAvB,EAAkB,QAAlB,EAAAe,EAAKI,qBAAa,eAAEO,WAAG,eAAEX,YAAI,eAAEM,KAC/B,KACE,gBAAC,KAAI,CAACf,GAAI,SAASS,EAAKI,cAAcO,IAAIX,KAAKM,MAC5CN,EAAKI,cAAcO,IAAIX,KAAKM,MAIrC,CACEtB,IAAK,mBACLC,OACiB,QAAf,EAAAe,EAAKS,kBAAU,eAAG,sBAClB,KACE,gBAAC,KAAI,CACHlB,GAAI,cAAcS,EAAKS,WAAW,uBAEjCT,EAAKS,WAAW,wBAIzBG,QAAO,EAAG3B,MAAAA,OAAcA,OAG9B,2BAASiB,MAAI,GACX,+BACE,gDAEF,gBAACC,EAAA,EAAY,CACXvB,KAAM,CAEJ,CACEI,IAAK,kBACLC,MAAOe,EAAKS,WAAW,oBAEzB,CACEzB,IAAK,mBACLC,MAAOe,EAAKS,WAAW,qBAEzB,CACEzB,IAAK,sBACLC,MAAOe,EAAKS,WAAW,yBAEzBG,QAAO,EAAG3B,MAAAA,OAAcA,U,2CC1FtC,MA4GA,EA5G2D,EACzD4B,aAAAA,M,MAEA,MAAMC,GAAoB,IAAAC,QAAkC,MACtDC,GAAY,EAAAC,EAAA,MACZ,KAAEjB,EAAI,QAAEkB,EAAO,MAAE7C,IAAU,EAAA8C,EAAA,GAC/B,YAAYH,YACZ,GACA,GACA,UAEII,EAA4D,aAA/CP,EAAaJ,WAAW,mBAE3C,GAAIS,EAAS,OAAO,gBAACG,EAAA,EAAO,CAACC,KAAK,UAClC,GAAIjD,EAAO,OAAO,gBAACkD,EAAA,EAAU,CAAClD,MAAOA,IACrC,IAAK2B,EAAM,OAAO,gBAACqB,EAAA,EAAO,MAC1B,MAAMG,EAAOJ,EAAa,UAAY,QAChCK,EAAUL,EAAa,UAAY,QACnCM,EAAcC,OAAOC,YACzB5B,GAEI6B,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GACzBC,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,GACxBC,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,GAE1BC,EAAkB,KAEE,QAAvB,EAAAnB,EAAaJ,kBAAU,eAAG,sBAGnB,IACRwB,SAAQ,EAAGjD,IAAAA,EAAKC,MAAAA,MAChB+C,EAAgBhD,GAAOC,KAGzB8C,EAAW,GAAKG,OAAOR,EAAYS,gBACnCN,EAAU,GAAKK,OAAOF,EAAgB,mCACtCH,EAAU,GAAKK,OACbF,EAAgB,yDAElBH,EAAU,GAAKK,OACbF,EAAgB,gDAElBH,EAAU,GAAKK,OACbF,EAAgB,4DAElBF,EAAS,GAAKD,EAAU,GAAKA,EAAU,GACvCC,EAAS,GAAKD,EAAU,GAAKA,EAAU,GACvCC,EAAS,GAAKD,EAAU,GAAKA,EAAU,GAAKE,EAAW,GAEvD,MAAMK,EAAU,CACdC,MAAO,CACL/D,KAAM,MACNgE,OAAQ,KAEVC,MAAO,CACLC,KAAM,sBAAsBhB,iBAE9BiB,MAAO,CACLC,IAAK,EACLH,MAAO,CACLC,KAAM,UAGVG,MAAO,CACLC,WAAY,CACV,WAAWpB,IACX,WACA,mBACA,2BACA,GAAGC,iCAGPoB,YAAa,CACXC,OAAQ,CACNC,SAAU,WAGdC,QAAS,CACPC,SAAS,GAEXH,OAAQ,CACN,CACEI,KAAM,GAAGzB,iBACTzB,KAAM8B,EACNqB,MAAO,WAET,CACED,KAAM,GAAGzB,cACTzB,KAAM6B,EACNsB,MAAO,WAET,CACED,KAAM,GAAGzB,mBACTzB,KAAM+B,EACNoB,MAAO,aAIb,OACE,gBAAC,IAAe,CACdC,WAAY,EACZhB,QAASA,EACTiB,IAAKvC,KCzFX,EAjBsD,EAAGd,KAAAA,MACvD,MAAMoB,EAAoD,aAAvCpB,EAAKS,WAAW,mBAEnC,OACE,uBAAKlC,UAAU,0BACb,yB,uCACuC6C,EAAa,UAAY,QAAS,I,uIAEH,IACnEA,EAAa,UAAY,Q,6CAG5B,gBAAC,EAAmB,CAACP,aAAcb,M,cCTzC,MAQM,EAAcA,GACqB,aAAvCA,EAAKS,WAAW,mBACZ6C,EAAqBtD,GACzBkC,OAAOlC,EAAKS,WAAW,sBAAwB,EAC3C8C,EAAiBvD,GACkB,aAAvCA,EAAKS,WAAW,mBA4DlB,EA1D+B,KAC7B,MAAMO,GAAY,EAAAC,EAAA,MACZ,KAAEjB,EAAI,QAAEkB,EAAO,MAAE7C,IAAU,EAAA8C,EAAA,GAAc,YAAYH,IAAa,CACtEwC,QAAS,cAEX,GAAItC,EAAS,OAAO,gBAACG,EAAA,EAAO,CAACC,KAAK,UAClC,GAAIjD,EAAO,OAAO,gBAACkD,EAAA,EAAU,CAAClD,MAAOA,IACrC,IAAK2B,EAAM,OAAO,gBAACqB,EAAA,EAAO,MAC1B,MAAQrB,KAAMa,EAAY,SAAE4C,GAAazD,EAEnCZ,EAAO,CACX,CAAEC,MAAO,WAAYE,GAAI,aACzB,CAAEF,MAAO,kBAAmBE,GAAI,OAChC,CAAEF,MAAO,qBAAsBE,GAAI,cACnCgE,EAAc1C,GACV,CAAExB,MAAO,sBAAuBE,GAAI,eACpC,MA9BNmB,EA+Be+C,EA7BR/C,EAASgD,MACbD,IAAY,MAAC,MAAyC,gBAArB,QAApB,EAAAA,MAAAA,OAAQ,EAARA,EAAUhD,kBAAU,eAAG,kBA6BjC,CAAEpB,MAAO,2BAA4BE,GAAI,cACzC,MACJ,EAAWsB,IAAiByC,EAAkBzC,GAC1C,CAAExB,MAAO,mBAAoBE,GAAI,iBACjC,KACJ,EAAWsB,IAAiByC,EAAkBzC,GAC1C,CAAExB,MAAO,gBAAiBE,GAAI,mBAC9B,KACJ,CAAEF,MAAO,WAAYE,GAAI,cACzBqB,OAAO+C,SA1CU,IACnBjD,EA2CA,OACE,2BAASnC,UAAU,cACjB,0B,YAAcyC,GACd,0BACE,gBAAC,KAAI,CACHzB,GACE,EAAWsB,GACP,eAAeA,EAAaT,cAAcI,SAASR,KAAKM,KACxD,SAASO,EAAaT,cAAcO,IAAIX,KAAKM,MAAI,mBAM3D,gBAACsD,EAAA,EAAI,CAACxE,KAAMA,IACZ,2BAASb,UAAU,WACjB,uBAAKA,UAAU,0BACb,gBAACsF,EAAA,EAAY,CAAClG,KAAK,YAAYC,WAAS,GACtC,gBAACkG,EAAQ,CAAC9D,KAAMa,KAElB,gBAACgD,EAAA,EAAY,CAAClG,KAAK,OACjB,gBAAC,EAAc,CAACqC,KAAMa","sources":["webpack://mgportalv2/./src/components/Nav/RouteForHash/index.tsx","webpack://mgportalv2/./src/components/UI/FetchError/index.tsx","webpack://mgportalv2/./src/components/UI/KeyValueList/index.tsx","webpack://mgportalv2/./src/components/UI/Tabs/index.tsx","webpack://mgportalv2/./src/hooks/useURLAccession/index.tsx","webpack://mgportalv2/./src/components/Analysis/Overview/index.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/QCChart.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/index.tsx","webpack://mgportalv2/./src/pages/Analysis/index.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\ntype PropsType = {\n  hash: string;\n  isDefault?: boolean;\n};\nconst RouteForHash: React.FC<PropsType> = ({\n  hash,\n  isDefault = false,\n  children,\n}) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (location.hash === '' && hash !== '' && isDefault) {\n      navigate(hash, { replace: true });\n    }\n  });\n\n  if (location.hash === hash) {\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport default RouteForHash;\n","import React from 'react';\nimport { ErrorFromFetch, ErrorTypes } from 'hooks/data/useData';\n\nconst refreshPage = (): void => {\n  window.location.reload();\n};\n\nconst FetchError: React.FC<{ error: ErrorFromFetch }> = ({ error }) => {\n  if (!error || error.type === ErrorTypes.NullURL) return null;\n  return (\n    <div\n      className=\"vf-box vf-box-theme--primary vf-box--easy\"\n      style={{\n        backgroundColor: 'lemonchiffon',\n      }}\n    >\n      <h3 className=\"vf-box__heading\">\n        <span className=\"icon icon-common icon-exclamation-triangle\" /> Error\n        Fetching Data\n      </h3>\n      <p className=\"vf-box__text\">\n        {error?.type === ErrorTypes.FetchError &&\n          `There were problems with the request. [${error.error}]`}\n        {error?.type === ErrorTypes.NotOK &&\n          `The response from the server was not OK [Status: ${error.status}].`}\n        {error?.type === ErrorTypes.JSONError &&\n          `The recovered resource didn't follow the expected format [${error.error}].`}\n      </p>\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--tertiary vf-button--sm \"\n          onClick={refreshPage}\n        >\n          Refresh\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FetchError;\n","import React from 'react';\n\ntype KeyValueProps = {\n  list: { key: string; value: string | React.ElementType }[];\n};\n\nconst KeyValueList: React.FC<KeyValueProps> = ({ list }) => (\n  <div\n    className=\"vf-grid vf-grid__col-2\"\n    style={{\n      gridTemplateColumns: '1fr 2fr',\n      rowGap: '0.5rem',\n    }}\n  >\n    {list.map(({ key, value: Value }) => (\n      <React.Fragment key={key}>\n        <div style={{ textAlign: 'right' }}>{key}:</div>\n        <div>{typeof Value === 'string' ? Value : <Value />}</div>\n      </React.Fragment>\n    ))}\n  </div>\n);\n\nexport default KeyValueList;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Tab: React.FC = () => null;\n\ntype TabsProps = {\n  tabs: Array<{\n    label: string | React.ElementType;\n    to: string;\n  }>;\n};\nconst Tabs: React.FC<TabsProps> = ({ tabs }) => {\n  const location = useLocation();\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label: Label, to }) => (\n          <li className=\"vf-tabs__item\" key={to}>\n            <Link\n              className={`vf-tabs__link ${\n                to === location.pathname ||\n                (to.startsWith('#') && to === location.hash) ||\n                (to === '#' && location.hash === '')\n                  ? 'is-active'\n                  : ''\n              }`}\n              to={to}\n            >\n              {typeof Label === 'string' ? Label : <Label />}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import { useLocation } from 'react-router-dom';\n\nconst useURLAccession = (): string | undefined => {\n  const location = useLocation();\n  let { pathname } = location;\n  if (pathname.trim().endsWith('/')) pathname = pathname.trim().slice(0, -1);\n  const parts = pathname.split('/');\n  return parts?.[parts.length - 1];\n};\n\nexport default useURLAccession;\n","import React from 'react';\nimport KeyValueList from 'components/UI/KeyValueList';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport { Link } from 'react-router-dom';\n\ntype GenomeOverviewProps = {\n  data: MGnifyDatum;\n};\n\nfunction isAssembly(experimentType: string): boolean {\n  return ['assembly', 'hybrid_assembly', 'long_reads_assembly'].includes(\n    experimentType\n  );\n}\n\nconst AnalysisOverview: React.FC<GenomeOverviewProps> = ({ data }) => {\n  return (\n    <section>\n      <div className=\"vf-stack\">\n        <details open>\n          <summary>\n            <b>Description</b>\n          </summary>\n\n          <KeyValueList\n            list={[\n              {\n                key: 'Study',\n                value:\n                  data.relationships?.study?.data?.id &&\n                  (() => (\n                    <Link to={`/studies/${data.relationships.study.data.id}`}>\n                      {data.relationships.study.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Sample',\n                value:\n                  data.relationships?.sample?.data?.id &&\n                  (() => (\n                    <Link to={`/samples/${data.relationships.sample.data.id}`}>\n                      {data.relationships.sample.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Assembly',\n                value:\n                  data.relationships?.assembly?.data?.id &&\n                  isAssembly(data.attributes['experiment-type'] as string) &&\n                  (() => (\n                    <Link\n                      to={`/assemblies/${data.relationships.assembly.data.id}`}\n                    >\n                      {data.relationships.assembly.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Run',\n                value:\n                  data.relationships?.run?.data?.id &&\n                  (() => (\n                    <Link to={`/runs/${data.relationships.run.data.id}`}>\n                      {data.relationships.run.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Pipeline version',\n                value:\n                  data.attributes?.['pipeline-version'] &&\n                  (() => (\n                    <Link\n                      to={`/pipelines/${data.attributes['pipeline-version']}`}\n                    >\n                      {data.attributes['pipeline-version']}\n                    </Link>\n                  )),\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Experiment details</b>\n          </summary>\n          <KeyValueList\n            list={[\n              // TODO: the lists should obtained from runs for hybrid_assembly\n              {\n                key: 'Experiment type',\n                value: data.attributes['experiment-type'] as string,\n              },\n              {\n                key: 'Instrument model',\n                value: data.attributes['instrument-model'] as string,\n              },\n              {\n                key: 'Instrument platform',\n                value: data.attributes['instrument-platform'] as string,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n      </div>\n    </section>\n  );\n};\nexport default AnalysisOverview;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, ResponseFormat } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\n\ntype QualityControlProps = {\n  analysisData: MGnifyDatum;\n};\nconst QualityControlChart: React.FC<QualityControlProps> = ({\n  analysisData,\n}) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/summary`,\n    {},\n    {},\n    ResponseFormat.TSV\n  );\n  const isAssembly = analysisData.attributes['experiment-type'] === 'assembly';\n\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const unit = isAssembly ? 'contigs' : 'reads';\n  const capUnit = isAssembly ? 'Contigs' : 'Reads';\n  const summaryData = Object.fromEntries(\n    data as unknown as Array<[k: string, v: string]>\n  );\n  const remaining = [0, 0, 0, 0, 0];\n  const filtered = [0, 0, 0, 0, 0];\n  const subsampled = [0, 0, 0, 0, 0];\n\n  const analysisSummary = {};\n  (\n    (analysisData.attributes?.['analysis-summary'] as {\n      key: string;\n      value: string;\n    }[]) || []\n  ).forEach(({ key, value }) => {\n    analysisSummary[key] = value;\n  });\n\n  subsampled[4] = Number(summaryData.sequence_count);\n  remaining[0] = Number(analysisSummary['Submitted nucleotide sequences']);\n  remaining[1] = Number(\n    analysisSummary['Nucleotide sequences after format-specific filtering']\n  );\n  remaining[2] = Number(\n    analysisSummary['Nucleotide sequences after length filtering']\n  );\n  remaining[3] = Number(\n    analysisSummary['Nucleotide sequences after undetermined bases filtering']\n  );\n  filtered[2] = remaining[1] - remaining[2];\n  filtered[1] = remaining[0] - remaining[1];\n  filtered[4] = remaining[3] - remaining[4] - subsampled[4];\n\n  const options = {\n    chart: {\n      type: 'bar',\n      height: 240,\n    },\n    title: {\n      text: `Number of sequence ${unit} per QC step`,\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Count',\n      },\n    },\n    xAxis: {\n      categories: [\n        `Initial ${unit}`,\n        'Trimming',\n        'Length filtering',\n        'Ambiguous base filtering',\n        `${capUnit} subsampled for QC analysis`,\n      ],\n    },\n    plotOptions: {\n      series: {\n        stacking: 'normal',\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: `${capUnit} filtered out`,\n        data: filtered,\n        color: '#CCCCD3',\n      },\n      {\n        name: `${capUnit} remaining`,\n        data: remaining,\n        color: '#058DC7',\n      },\n      {\n        name: `${capUnit} after sampling`,\n        data: subsampled,\n        color: '#8dc7c7',\n      },\n    ],\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default QualityControlChart;\n","import React from 'react';\n\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport QualityControlChart from './QCChart';\n\nimport './style.css';\n\ntype QualityControlProps = {\n  data: MGnifyDatum;\n};\nconst QualityControl: React.FC<QualityControlProps> = ({ data }) => {\n  const isAssembly = data.attributes['experiment-type'] === 'assembly';\n\n  return (\n    <div className=\"vf-stack vf-stack--200\">\n      <p>\n        The chart below shows the number of {isAssembly ? 'contigs' : 'reads'}{' '}\n        which pass the quality control steps in the pipeline. Paired-end\n        sequences may have been merged, in which case the initial number of{' '}\n        {isAssembly ? 'contigs' : 'reads'} may differ from the number given by\n        ENA.\n      </p>\n      <QualityControlChart analysisData={data} />\n    </div>\n  );\n};\n\nexport default QualityControl;\n","import React from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Tabs from 'components/UI/Tabs';\nimport Overview from 'components/Analysis/Overview';\nimport QualityControl from 'components/Analysis/QualityControl';\nimport RouteForHash from 'components/Nav/RouteForHash';\nimport { Link } from 'react-router-dom';\n\nconst hasAbundance = (\n  includes: { attributes?: { 'group-type'?: string } }[]\n): boolean => {\n  return includes.some(\n    (included) => included?.attributes?.['group-type'] === 'Statistics'\n  );\n};\n\nconst isAssembly = (data: MGnifyDatum): boolean =>\n  data.attributes['experiment-type'] === 'assembly';\nconst isAtleastVersion5 = (data: MGnifyDatum): boolean =>\n  Number(data.attributes['pipeline-version']) >= 5;\nconst isNotAmplicon = (data: MGnifyDatum): boolean =>\n  data.attributes['experiment-type'] !== 'amplicon';\n\nconst AnalysisPage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`analyses/${accession}`, {\n    include: 'downloads',\n  });\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: analysisData, included } = data as MGnifyResponseObj;\n\n  const tabs = [\n    { label: 'Overview', to: '#overview' },\n    { label: 'Quality control', to: '#qc' },\n    { label: 'Taxonomic analysis', to: '#taxonomic' },\n    isNotAmplicon(analysisData)\n      ? { label: 'Functional analysis', to: '#functional' }\n      : null,\n    hasAbundance(included)\n      ? { label: 'Abundance and comparison', to: '#abundance' }\n      : null,\n    isAssembly(analysisData) && isAtleastVersion5(analysisData)\n      ? { label: 'Pathways/Systems', to: '#path-systems' }\n      : null,\n    isAssembly(analysisData) && isAtleastVersion5(analysisData)\n      ? { label: 'Contig Viewer', to: '#contigs-viewer' }\n      : null,\n    { label: 'Download', to: '#download' },\n  ].filter(Boolean);\n\n  return (\n    <section className=\"vf-content\">\n      <h2>Analysis {accession}</h2>\n      <h4>\n        <Link\n          to={\n            isAssembly(analysisData)\n              ? `/assemblies/${analysisData.relationships.assembly.data.id}`\n              : `/runs/${analysisData.relationships.run.data.id}`\n          }\n        >\n          Other Analyses\n        </Link>\n      </h4>\n      <Tabs tabs={tabs} />\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <RouteForHash hash=\"#overview\" isDefault>\n            <Overview data={analysisData} />\n          </RouteForHash>\n          <RouteForHash hash=\"#qc\">\n            <QualityControl data={analysisData} />\n          </RouteForHash>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default AnalysisPage;\n"],"names":["hash","isDefault","children","location","navigate","useEffect","replace","refreshPage","window","reload","error","type","className","style","backgroundColor","status","onClick","list","gridTemplateColumns","rowGap","map","key","value","Value","textAlign","tabs","label","Label","to","pathname","startsWith","trim","endsWith","slice","parts","split","length","data","experimentType","open","KeyValueList","relationships","study","id","sample","assembly","attributes","includes","run","filter","analysisData","chartComponentRef","useRef","accession","useURLAccession","loading","useMGnifyData","isAssembly","Loading","size","FetchError","unit","capUnit","summaryData","Object","fromEntries","remaining","filtered","subsampled","analysisSummary","forEach","Number","sequence_count","options","chart","height","title","text","yAxis","min","xAxis","categories","plotOptions","series","stacking","credits","enabled","name","color","highcharts","ref","isAtleastVersion5","isNotAmplicon","include","included","some","Boolean","Tabs","RouteForHash","Overview"],"sourceRoot":""}