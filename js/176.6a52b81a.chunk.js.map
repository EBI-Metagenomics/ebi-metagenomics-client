{"version":3,"file":"js/176.6a52b81a.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/Genomes/Browser/Popup/index.tsx","webpack://mgportalv2/./src/components/Nav/RouteForHash/index.tsx","webpack://mgportalv2/./src/components/UI/ArrowForLink/index.tsx","webpack://mgportalv2/./src/components/UI/EMGTable/PaginationButton/index.tsx","webpack://mgportalv2/./src/components/UI/TextInputDebounced/index.tsx","webpack://mgportalv2/./src/components/UI/EMGTable/index.tsx","webpack://mgportalv2/./src/components/UI/ExtLink/index.tsx","webpack://mgportalv2/./src/components/UI/FetchError/index.tsx","webpack://mgportalv2/./src/components/UI/KeyValueList/index.tsx","webpack://mgportalv2/./src/components/UI/Tabs/index.tsx","webpack://mgportalv2/./src/components/UI/Tooltip/index.tsx","webpack://mgportalv2/./src/hooks/useQueryParamState/index.tsx","webpack://mgportalv2/./src/hooks/useURLAccession/index.tsx","webpack://mgportalv2/./src/components/Analysis/Overview/index.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/QCChart.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/ContigsHistogram.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/NucleotidesHistogram.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/ContigsDistribution.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/SeqLengthChart.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/GCContentChart.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/index.tsx","webpack://mgportalv2/./src/components/Analysis/ContigViewer/ContigsQueryContext.tsx","webpack://mgportalv2/./src/components/UI/EMGTable/CursorPagination/index.tsx","webpack://mgportalv2/./src/components/Analysis/ContigViewer/Table/index.tsx","webpack://mgportalv2/./src/components/Analysis/ContigViewer/GFFCompare/gff_db.ts","webpack://mgportalv2/./src/components/UI/PlainTable/index.tsx","webpack://mgportalv2/./src/components/Analysis/ContigViewer/GFFCompare/index.tsx","webpack://mgportalv2/./src/components/Analysis/ContigViewer/index.tsx","webpack://mgportalv2/./src/pages/Analysis/index.tsx"],"sourcesContent":["import React from 'react';\nimport ExtLink from 'components/UI/ExtLink';\n\ntype PropertyDataType = { name: string; value: string | number };\ntype GenomeBrowserPopupProps = {\n  data: PropertyDataType[];\n};\ntype FormattedData = {\n  name?: string;\n  gene?: string;\n  product?: string;\n  properties: {\n    title: string;\n    data: {\n      name?: string;\n      Value?: string | React.ElementType;\n    }[];\n  }[];\n};\n\nconst antiSMASHLabels = {\n  biosynthetic: 'Core biosynthetic gene',\n  'biosynthetic-additional': 'Additional biosynthetic gene',\n  regulatory: 'Regulatory genes',\n  transport: 'Transport-related gene',\n  resistance: 'Resistance genes',\n};\n\nconst MultipleField: React.FC<{\n  value: string;\n  url?: string;\n  decodeValue?: boolean;\n}> = ({ value, url, decodeValue }) => {\n  if (!value) return null;\n  const parts = value.split(',');\n  return (\n    <ul className=\"vf-list\">\n      {parts.map((part) => {\n        const text = decodeValue ? decodeURIComponent(part) : part;\n        return (\n          <li key={part}>\n            {url ? <ExtLink href={`${url}${part}`}>{text}</ExtLink> : text}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\n/**\n * Calculate the property length.\n * @return {int} the length or undefined\n */\nconst getProtLength = (attributes: {\n  start?: string | number | null;\n  end?: string | number | null;\n}): number => {\n  const start =\n    typeof attributes.start === 'string'\n      ? parseInt(attributes.start, 10)\n      : attributes.start;\n  const end =\n    typeof attributes.end === 'string'\n      ? parseInt(attributes.end, 10)\n      : attributes.end;\n  if (\n    Number.isNaN(start) ||\n    Number.isNaN(end) ||\n    start === null ||\n    end === null\n  ) {\n    return undefined;\n  }\n  return Math.ceil((end - start) / 3);\n};\nconst formatData = (rawData: PropertyDataType[]): FormattedData => {\n  const attributes: {\n    [name: string]: string | null;\n  } = rawData.reduce((memo, el) => {\n    // eslint-disable-next-line no-param-reassign\n    if (el.name) memo[el.name.toLowerCase()] = el.value;\n    return memo;\n  }, {});\n\n  const functionalData = {\n    title: 'Functional annotation',\n    data: [\n      {\n        name: 'E.C Number',\n        Value:\n          attributes.ecnumber &&\n          (() => (\n            <MultipleField\n              value={attributes.ecnumber}\n              url=\"https://enzyme.expasy.org/EC/\"\n            />\n          )),\n      },\n      {\n        name: 'Pfam',\n        Value:\n          attributes.pfam &&\n          (() => (\n            <MultipleField\n              value={attributes.pfam}\n              url=\"https://pfam.xfam.org/family/\"\n            />\n          )),\n      },\n      {\n        name: 'KEGG',\n        Value:\n          attributes.kegg &&\n          (() => (\n            <MultipleField\n              value={attributes.kegg}\n              url=\"https://www.genome.jp/dbget-bin/www_bget?\"\n            />\n          )),\n      },\n      {\n        name: 'eggNOG',\n        Value: attributes.eggnog && decodeURIComponent(attributes.eggnog),\n      },\n      {\n        name: 'COG',\n        Value:\n          attributes.cog && (() => <MultipleField value={attributes.cog} />),\n      },\n      {\n        name: 'GO',\n        Value:\n          attributes.go &&\n          (() => (\n            <MultipleField\n              value={attributes.go}\n              url=\"https://www.ebi.ac.uk/ols/search?q=\"\n            />\n          )),\n      },\n      {\n        name: 'InterPro',\n        Value:\n          attributes.interpro &&\n          (() => (\n            <MultipleField\n              value={attributes.interpro}\n              url=\"https://www.ebi.ac.uk/interpro/entry/InterPro/'\"\n            />\n          )),\n      },\n      {\n        // antiSMASH\n        name: 'Gene type',\n        Value:\n          attributes.as_type &&\n          (antiSMASHLabels[attributes.as_type] || attributes.as_type),\n      },\n      {\n        // Notes are URL encoded during the GFF generation\n        name: 'Notes',\n        Value:\n          attributes.as_notes &&\n          (() => (\n            <MultipleField value={decodeURIComponent(attributes.as_notes)} />\n          )),\n      },\n      {\n        name: 'Cluster',\n        Value:\n          attributes.as_gene_clusters &&\n          (() => <MultipleField value={attributes.as_gene_clusters} />),\n      },\n    ],\n  };\n  const otherData = {\n    title: 'Feature details',\n    data: [\n      {\n        name: 'Type',\n        Value: attributes.type,\n      },\n      {\n        name: 'Inference',\n        Value: attributes.inference,\n      },\n      {\n        name: 'Start / End',\n        Value: `${attributes.start}/${attributes.end}`,\n      },\n      {\n        name: 'Protein length',\n        Value: String(getProtLength(attributes)),\n      },\n    ],\n  };\n\n  const metaproteomicData = {\n    title: 'Metaproteomics',\n    data: [\n      {\n        name: 'Peptide sequences',\n        Value:\n          attributes.peptide_sequences &&\n          (() => (\n            <MultipleField value={attributes.peptide_sequences} decodeValue />\n          )),\n      },\n      {\n        name: 'Pride ID',\n        Value:\n          attributes.pride_id &&\n          (() => (\n            <ExtLink\n              href={`https://www.ebi.ac.uk/pride/archive/projects/${attributes.pride_id}`}\n            >\n              {attributes.pride_id}\n            </ExtLink>\n          )),\n      },\n    ],\n  };\n\n  return {\n    name: attributes.id,\n    gene: attributes.gene,\n    product: attributes.product,\n    properties: [functionalData, otherData, metaproteomicData],\n  };\n};\n\nconst GenomeBrowserPopup: React.FC<GenomeBrowserPopupProps> = ({ data }) => {\n  const { name, gene, product, properties } = formatData(data);\n  return (\n    <>\n      <table className=\"stack hover igv-popover-table\">\n        <caption className=\"igv-popover-section-header\">Feature</caption>\n        <tbody>\n          {name && (\n            <tr>\n              <td className=\"igv-popover-table-td-name\">ID</td>\n              <td>{name}</td>\n            </tr>\n          )}\n          {gene && (\n            <tr>\n              <td className=\"igv-popover-table-td-name\">Gene</td>\n              <td>\n                <em>{gene}</em>\n              </td>\n            </tr>\n          )}\n          {product && (\n            <tr>\n              <td className=\"igv-popover-table-td-name\">Product</td>\n              <td>{product}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      {properties.map((property) => (\n        <table className=\"stack hover igv-popover-table\" key={property.title}>\n          {property.data.filter((d) => !!d.Value).length > 0 && (\n            <caption className=\"igv-popover-section-header\">\n              {property.title}\n            </caption>\n          )}\n          <tbody>\n            {property.data\n              .map(\n                ({ name: pName, Value }) =>\n                  Value && (\n                    <tr key={pName}>\n                      <td className=\"igv-popover-table-td-name\">{pName}</td>\n                      <td>{typeof Value === 'string' ? Value : <Value />}</td>\n                    </tr>\n                  )\n              )\n              .filter(Boolean)}\n          </tbody>\n        </table>\n      ))}\n    </>\n  );\n};\n\nexport default GenomeBrowserPopup;\n","import React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\ntype PropsType = {\n  hash: string;\n  isDefault?: boolean;\n};\nconst RouteForHash: React.FC<PropsType> = ({\n  hash,\n  isDefault = false,\n  children,\n}) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (location.hash === '' && hash !== '' && isDefault) {\n      navigate(hash, { replace: true });\n    }\n  });\n\n  if (location.hash === hash) {\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport default RouteForHash;\n","/* eslint-disable max-len */\nimport React from 'react';\n\nconst ArrowForLink: React.FC = () => (\n  <svg\n    aria-hidden=\"true\"\n    className=\"vf-card__heading__icon | vf-icon vf-icon-arrow--inline-end\"\n    width=\"1em\"\n    height=\"1em\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    preserveAspectRatio=\"none\"\n  >\n    <path\n      d=\"M0 12c0 6.627 5.373 12 12 12s12-5.373 12-12S18.627 0 12 0C5.376.008.008 5.376 0 12zm13.707-5.209l4.5 4.5a1 1 0 010 1.414l-4.5 4.5a1 1 0 01-1.414-1.414l2.366-2.367a.25.25 0 00-.177-.424H6a1 1 0 010-2h8.482a.25.25 0 00.177-.427l-2.366-2.368a1 1 0 011.414-1.414z\"\n      fill=\"currentColor\"\n      fillRule=\"nonzero\"\n    />\n  </svg>\n);\n\nexport default ArrowForLink;\n","import React, { MouseEventHandler } from 'react';\n\ntype PaginationButtonProps = {\n  currentPageIndex: number;\n  pageIndex: number;\n  gotoPage: (pageIndex: number) => MouseEventHandler;\n};\n\nconst PaginationButton: React.FC<PaginationButtonProps> = ({\n  currentPageIndex,\n  pageIndex,\n  gotoPage,\n}) => {\n  if (currentPageIndex === pageIndex) {\n    return (\n      <li className=\"vf-pagination__item vf-pagination__item--is-active\">\n        <span className=\"vf-pagination__label\" aria-current=\"page\">\n          <span className=\"vf-u-sr-only\">Page </span>\n          {currentPageIndex + 1}\n        </span>\n      </li>\n    );\n  }\n  return (\n    <li className=\"vf-pagination__item\">\n      <button\n        type=\"button\"\n        onClick={() => gotoPage(pageIndex)}\n        className=\"vf-button vf-button--link vf-pagination__link\"\n      >\n        <span className=\"vf-u-sr-only\"> page</span>\n        {pageIndex + 1}\n      </button>\n    </li>\n  );\n};\n\nexport default PaginationButton;\n","import React, { useState, useCallback } from 'react';\nimport { debounce } from 'lodash-es';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport './style.css';\n\ntype TextInputDebouncedProps = {\n  namespace: string;\n};\nconst TextInputDebounced: React.FC<TextInputDebouncedProps> = ({\n  namespace,\n}) => {\n  const [queryParameters, setQueryParameters] = useQueryParametersState({\n    [`${namespace}search`]: '',\n  });\n  const [value, setValue] = useState(\n    (queryParameters[`${namespace}search`] as string) || ''\n  );\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounced = useCallback(\n    debounce((v: string): void => {\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}search`]: v,\n      });\n    }, 300),\n    []\n  );\n  const handleOnChange = (event): void => {\n    const v = event.target.value;\n    setValue(v);\n    debounced(v);\n  };\n  return (\n    <div className=\"vf-form__item mg-textsearch\">\n      <label className=\"vf-form__label vf-search__label\" htmlFor=\"searchitem\">\n        Filter\n      </label>\n      <input\n        type=\"search\"\n        placeholder=\"Enter your search terms\"\n        id=\"searchitem\"\n        className=\"vf-form__input\"\n        onChange={handleOnChange}\n        value={value}\n      />\n    </div>\n  );\n};\n\nexport default TextInputDebounced;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n  useRef,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEventHandler,\n} from 'react';\nimport { Column, usePagination, useSortBy, useTable } from 'react-table';\n\nimport Loading from 'components/UI/Loading';\nimport { MGnifyResponse, MGnifyDatum } from 'src/hooks/data/useData';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport PaginationButton from './PaginationButton';\n\nimport './style.css';\nimport TextInputDebounced from '../TextInputDebounced';\n\ntype PaginationRanges = {\n  startingPages: number[];\n  endingPages: number[];\n  adjacentPages: number[];\n  hasJumpFromStart: boolean;\n  hasJumpToEnd: boolean;\n};\n\nfunction getPaginationRanges(\n  pageIndex: number,\n  pageCount: number\n): PaginationRanges {\n  const startingPages = pageCount > 1 ? [0, 1] : [0];\n\n  const adjacentPages = pageCount > 2 ? [Math.max(2, pageIndex - 2)] : [];\n  for (\n    let page = adjacentPages[0] + 1;\n    page < pageCount - 2 && adjacentPages.length < 5;\n    page += 1\n  ) {\n    adjacentPages.push(page);\n  }\n\n  let endingPages = [];\n  if (pageCount > 7) {\n    endingPages = [pageCount - 2, pageCount - 1];\n  } else if (pageCount > 6) {\n    endingPages = [pageCount - 1];\n  }\n\n  return {\n    startingPages,\n    endingPages,\n    adjacentPages,\n    hasJumpFromStart:\n      !!adjacentPages.length &&\n      adjacentPages[0] > startingPages[startingPages.length - 1] + 1,\n    hasJumpToEnd:\n      !!endingPages.length &&\n      !!adjacentPages.length &&\n      endingPages[0] > adjacentPages[adjacentPages.length - 1] + 1,\n  };\n}\n\nfunction getOrderingQueryParamFromSortedColumn(\n  tableSortBy: Array<{ id: string; desc: boolean }>\n): string {\n  if (!tableSortBy.length) return '';\n  const col = tableSortBy[0];\n  return `${col.desc ? '-' : ''}${col.id\n    .replace(/attributes./g, '')\n    .replace(/-/g, '_')}`;\n}\n\ntype EMGTableProps = {\n  cols: Column[];\n  data: MGnifyResponse | Array<MGnifyDatum> | Record<string, unknown>[];\n  title?: string | React.ElementType;\n  showPagination?: boolean;\n  showTextFilter?: boolean;\n  initialPage?: number;\n  initialPageSize?: number;\n  className?: string;\n  namespace?: string;\n  sortable?: boolean;\n  loading?: boolean;\n  isStale?: boolean;\n  downloadURL?: string;\n};\n\nconst EMGTable: React.FC<EMGTableProps> = ({\n  cols,\n  data,\n  title: Title,\n  initialPage = 0,\n  initialPageSize = 25,\n  className = '',\n  namespace = '',\n  showPagination = true,\n  showTextFilter = false,\n  sortable = false,\n  loading = false,\n  isStale = false,\n  downloadURL = null,\n}) => {\n  const [queryParameters, setQueryParameters] = useQueryParametersState(\n    {\n      [`${namespace}page`]: 1,\n      [`${namespace}order`]: '',\n      [`${namespace}page_size`]: initialPageSize,\n      [`${namespace}search`]: initialPageSize,\n    },\n    {\n      [`${namespace}page`]: Number,\n      [`${namespace}page_size`]: Number,\n    }\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    setPageSize,\n    nextPage,\n    previousPage,\n    state: { pageIndex, pageSize, sortBy },\n  } = useTable(\n    {\n      columns: cols,\n      data: (data as MGnifyResponse)?.data || data,\n      initialState: {\n        pageIndex: initialPage,\n        pageSize: queryParameters[`${namespace}page_size`],\n      },\n      pageCount: (data as MGnifyResponse)?.meta?.pagination?.pages || 1,\n      manualPagination: true,\n      manualSortBy: true,\n    },\n    useSortBy,\n    usePagination\n  );\n  const tableRef = useRef(null);\n  const [isChangingPage, setChangingPage] = useState(false);\n\n  useEffect(() => {\n    if (\n      showPagination &&\n      queryParameters[`${namespace}page`] !== pageIndex + 1\n    ) {\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}page`]: pageIndex + 1,\n      });\n      if (tableRef.current && isChangingPage) {\n        tableRef.current.scrollIntoView();\n        setChangingPage(false);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showPagination, setQueryParameters, pageIndex]);\n\n  useEffect(() => {\n    if (\n      showPagination &&\n      queryParameters[`${namespace}page_size`] !== pageSize\n    ) {\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}page_size`]: pageSize,\n      });\n      if (tableRef.current && isChangingPage) {\n        tableRef.current.scrollIntoView();\n        setChangingPage(false);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showPagination, setQueryParameters, pageSize]);\n\n  useEffect(() => {\n    if (sortable) {\n      const order = getOrderingQueryParamFromSortedColumn(sortBy);\n      if (order === queryParameters[`${namespace}order`]) return;\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}order`]: order,\n        [`${namespace}page`]: 1,\n      });\n      if (tableRef.current && isChangingPage) {\n        tableRef.current.scrollIntoView();\n        setChangingPage(false);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showPagination, setQueryParameters, sortBy, sortable]);\n\n  const paginationRanges = useMemo(\n    () => getPaginationRanges(pageIndex, pageCount),\n    [pageIndex, pageCount]\n  );\n  const goToPageAndScroll = (pageNumber): MouseEventHandler => {\n    setChangingPage(true);\n    return gotoPage(pageNumber);\n  };\n  const changeSizeAndScroll = (evt): void => {\n    setChangingPage(true);\n    return setPageSize(+evt.target.value);\n  };\n\n  if (loading && !isStale) return <Loading size=\"small\" />;\n\n  return (\n    <section>\n      <div className=\"mg-table-overlay-container\">\n        <div className={loading && isStale ? 'mg-table-overlay' : undefined} />\n        <table\n          {...getTableProps}\n          className={`vf-table--striped mg-table ${className}`}\n          ref={tableRef}\n        >\n          {(Title || showTextFilter || downloadURL) && (\n            <caption className=\"vf-table__caption mg-table-caption\">\n              <div>\n                <div>\n                  {showTextFilter && (\n                    <TextInputDebounced namespace={namespace} />\n                  )}\n                  {downloadURL && (\n                    <>\n                      {' '}\n                      <a\n                        href={downloadURL}\n                        className=\"vf-button vf-button--secondary vf-button--sm\"\n                        style={{ whiteSpace: 'nowrap' }}\n                        download\n                      >\n                        <span className=\"icon icon-common icon-download\" />{' '}\n                        Download\n                      </a>\n                    </>\n                  )}\n                </div>\n                {Title && (typeof Title === 'string' ? Title : <Title />)}\n              </div>\n            </caption>\n          )}\n          <thead className=\"vf-table__header\">\n            {headerGroups.map((headerGroup) => (\n              <tr\n                {...headerGroup.getHeaderGroupProps()}\n                className=\"vf-table__row\"\n              >\n                {headerGroup.headers.map((column) => (\n                  <th\n                    {...(sortable && column.canSort\n                      ? column.getHeaderProps(column.getSortByToggleProps())\n                      : { key: column.id })}\n                    className=\"vf-table__heading\"\n                  >\n                    {column.render('Header')}\n                    {sortable && column.canSort && (\n                      <>\n                        &nbsp;\n                        <span>\n                          {/* eslint-disable-next-line no-nested-ternary */}\n                          {column.isSorted ? (\n                            column.isSortedDesc ? (\n                              <i className=\"icon icon-common icon-sort-down\" />\n                            ) : (\n                              <i className=\"icon icon-common icon-sort-up\" />\n                            )\n                          ) : (\n                            <i className=\"icon icon-common icon-sort\" />\n                          )}\n                        </span>\n                      </>\n                    )}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"vf-table__body\">\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()} className=\"vf-table__row\">\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()} className=\"vf-table__cell\">\n                        {cell.render('Cell')}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      {showPagination && (\n        <section className=\"mg-table-footer\">\n          <label className=\"vf-form__label\">\n            Page Size:\n            <select\n              className=\"vf-form__select\"\n              value={queryParameters[`${namespace}page_size`] as number}\n              onBlur={changeSizeAndScroll}\n              onChange={changeSizeAndScroll}\n            >\n              {[10, 25, 50].map((pg) => (\n                <option key={pg} value={pg}>\n                  Show {pg}\n                </option>\n              ))}\n            </select>\n          </label>\n          <nav className=\"vf-pagination\" aria-label=\"Pagination\">\n            <ul className=\"vf-pagination__list\">\n              <li className=\"vf-pagination__item vf-pagination__item--previous-page\">\n                <button\n                  disabled={!canPreviousPage}\n                  type=\"button\"\n                  onClick={previousPage}\n                  className=\"vf-button vf-button--link vf-pagination__link\"\n                >\n                  Previous<span className=\"vf-u-sr-only\"> page</span>\n                </button>\n              </li>\n\n              {paginationRanges.startingPages.map((paginationIndex) => (\n                <PaginationButton\n                  key={paginationIndex}\n                  currentPageIndex={pageIndex}\n                  pageIndex={paginationIndex}\n                  gotoPage={goToPageAndScroll}\n                />\n              ))}\n\n              {paginationRanges.hasJumpFromStart && (\n                <li className=\"vf-pagination__item\">\n                  <span className=\"vf-pagination__label\">...</span>\n                </li>\n              )}\n\n              {paginationRanges.adjacentPages.map((paginationIndex) => (\n                <PaginationButton\n                  key={paginationIndex}\n                  currentPageIndex={pageIndex}\n                  pageIndex={paginationIndex}\n                  gotoPage={goToPageAndScroll}\n                />\n              ))}\n\n              {paginationRanges.hasJumpToEnd && (\n                <li className=\"vf-pagination__item\">\n                  <span className=\"vf-pagination__label\">...</span>\n                </li>\n              )}\n\n              {paginationRanges.endingPages.map((paginationIndex) => (\n                <PaginationButton\n                  key={paginationIndex}\n                  currentPageIndex={pageIndex}\n                  pageIndex={paginationIndex}\n                  gotoPage={goToPageAndScroll}\n                />\n              ))}\n\n              <li className=\"vf-pagination__item vf-pagination__item--next-page\">\n                <button\n                  disabled={!canNextPage}\n                  type=\"button\"\n                  onClick={nextPage}\n                  className=\"vf-button vf-button--link vf-pagination__link\"\n                >\n                  Next<span className=\"vf-u-sr-only\"> page</span>\n                </button>\n              </li>\n            </ul>\n          </nav>\n        </section>\n      )}\n    </section>\n  );\n};\n\nexport default EMGTable;\n","import React from 'react';\n\nimport './style.css';\n\ntype ExtLinkProps = {\n  href: string;\n  title?: string;\n  id?: string;\n};\nconst ExtLink: React.FC<ExtLinkProps> = ({ href, id, title, children }) => (\n  <a\n    href={href}\n    title={title}\n    id={id}\n    target=\"_blank\"\n    rel=\"noreferrer noopener\"\n    className=\"mg-ext\"\n  >\n    <span className=\"icon icon-common icon-external-link-alt\" /> {children}\n  </a>\n);\n\nexport default ExtLink;\n","import React from 'react';\nimport { ErrorFromFetch, ErrorTypes } from 'hooks/data/useData';\n\nconst refreshPage = (): void => {\n  window.location.reload();\n};\n\nconst FetchError: React.FC<{ error: ErrorFromFetch }> = ({ error }) => {\n  if (!error || error.type === ErrorTypes.NullURL) return null;\n  return (\n    <div\n      className=\"vf-box vf-box-theme--primary vf-box--easy\"\n      style={{\n        backgroundColor: 'lemonchiffon',\n      }}\n    >\n      <h3 className=\"vf-box__heading\">\n        <span className=\"icon icon-common icon-exclamation-triangle\" /> Error\n        Fetching Data\n      </h3>\n      <p className=\"vf-box__text\">\n        {error?.type === ErrorTypes.FetchError &&\n          `There were problems with the request. [${error.error}]`}\n        {error?.type === ErrorTypes.NotOK &&\n          `The response from the server was not OK [Status: ${error.status}].`}\n        {error?.type === ErrorTypes.JSONError &&\n          `The recovered resource didn't follow the expected format [${error.error}].`}\n      </p>\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--tertiary vf-button--sm \"\n          onClick={refreshPage}\n        >\n          Refresh\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FetchError;\n","import React from 'react';\n\ntype KeyValueProps = {\n  list: { key: string; value: string | React.ElementType }[];\n};\n\nconst KeyValueList: React.FC<KeyValueProps> = ({ list }) => (\n  <div\n    className=\"vf-grid vf-grid__col-2\"\n    style={{\n      gridTemplateColumns: '1fr 2fr',\n      rowGap: '0.5rem',\n    }}\n  >\n    {list.map(({ key, value: Value }) => (\n      <React.Fragment key={key}>\n        <div style={{ textAlign: 'right' }}>{key}:</div>\n        <div>{typeof Value === 'string' ? Value : <Value />}</div>\n      </React.Fragment>\n    ))}\n  </div>\n);\n\nexport default KeyValueList;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Tab: React.FC = () => null;\n\ntype TabsProps = {\n  tabs: Array<{\n    label: string | React.ElementType;\n    to: string;\n  }>;\n};\nconst Tabs: React.FC<TabsProps> = ({ tabs }) => {\n  const location = useLocation();\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label: Label, to }) => (\n          <li className=\"vf-tabs__item\" key={to}>\n            <Link\n              className={`vf-tabs__link ${\n                to === location.pathname ||\n                (to.startsWith('#') && to === location.hash) ||\n                (to === '#' && location.hash === '')\n                  ? 'is-active'\n                  : ''\n              }`}\n              to={to}\n            >\n              {typeof Label === 'string' ? Label : <Label />}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React from 'react';\nimport Tippy from '@tippyjs/react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'tippy.js/dist/tippy.css';\n\ntype TooltipProps = {\n  content: React.ReactNode;\n  children?: React.ReactNode;\n};\n\nconst Tooltip: React.FC<TooltipProps> = ({ content, children }) => (\n  <Tippy content={content}>{children as React.ReactElement}</Tippy>\n);\nexport default Tooltip;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst useQueryParamState: <S>(\n  parameter: string,\n  defaultValue: S\n) => [string | S, (s: S) => void] = (parameter, defaultValue) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const parameters = new URLSearchParams(location.search);\n  const [value, setValue] = useState(parameters.get(parameter) || defaultValue);\n\n  // The Query parameters have changed, so we need to update the value if needed.\n  useEffect(() => {\n    const changedParameters = new URLSearchParams(location.search);\n    if (changedParameters.get(parameter) === value) return;\n    setValue(changedParameters.get(parameter) || defaultValue);\n  }, [location.search, defaultValue, parameter, value]);\n\n  // Pushes the new URL(including the new parameter value) into history\n  const setParameterInURL: (newValue: unknown) => void = (newValue) => {\n    if (String(newValue) === String(value)) return;\n    const parametersToChange = new URLSearchParams(location.search);\n    parametersToChange.set(parameter, String(newValue));\n    // The default value is not displayed in the URL\n    if (newValue === defaultValue) {\n      parametersToChange.delete(parameter);\n    }\n    location.search = parametersToChange.toString();\n    navigate(location);\n  };\n\n  return [value, setParameterInURL];\n};\n\nexport type QueryState = {\n  [parameter: string]: unknown;\n};\ntype SerializersType = {\n  [parameter: string]: (str: string) => unknown;\n};\n\nconst getQueryStateFromURL = (\n  state: QueryState,\n  searchStr: string,\n  serializers: SerializersType\n): QueryState => {\n  const innerState = {};\n  const parametersFromURL = new URLSearchParams(searchStr);\n  Object.entries(state).forEach(([parameter, value]) => {\n    const serializer = serializers[parameter] || String;\n    innerState[parameter] = serializer(\n      parametersFromURL.get(parameter) || (value as string)\n    );\n  });\n  return innerState;\n};\nexport const useQueryParametersState: (\n  initialState: QueryState,\n  serializers?: SerializersType\n) => [QueryState, (s: QueryState) => void] = (\n  initialState,\n  serializers = {}\n) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const stateWithURL = useMemo(\n    () => getQueryStateFromURL(initialState, location.search, serializers),\n    [initialState, location.search, serializers]\n  );\n  const [currentState, setCurrentState] = useState(stateWithURL);\n\n  // The Query parameters have changed, so we need to update the value if needed.\n  useEffect(() => {\n    const newState = getQueryStateFromURL(\n      initialState,\n      location.search,\n      serializers\n    );\n    if (JSON.stringify(newState) === JSON.stringify(currentState)) return;\n    setCurrentState(newState);\n  }, [location.search, currentState, initialState, serializers]);\n\n  // Pushes the new URL(including the new parameter value) into history\n  const setParametersInURL: (newState: QueryState) => void = (newState) => {\n    if (JSON.stringify(newState) === JSON.stringify(currentState)) return;\n    const parametersToChange = new URLSearchParams(location.search);\n\n    let changed = false;\n    Object.entries(initialState).forEach(([parameter, defaultValue]) => {\n      const newValue =\n        parameter in newState ? newState[parameter] : defaultValue;\n      if (newState[parameter] !== currentState[parameter]) {\n        parametersToChange.set(parameter, String(newValue));\n        if (newValue === defaultValue) {\n          parametersToChange.delete(parameter);\n        }\n        changed = true;\n      }\n    });\n\n    // The default value is not displayed in the URL\n    if (changed) {\n      location.search = parametersToChange.toString();\n      navigate(location);\n    }\n  };\n\n  return [currentState, setParametersInURL];\n};\n\nexport default useQueryParamState;\n","import { useLocation } from 'react-router-dom';\n\nconst useURLAccession = (): string | undefined => {\n  const location = useLocation();\n  let { pathname } = location;\n  if (pathname.trim().endsWith('/')) pathname = pathname.trim().slice(0, -1);\n  const parts = pathname.split('/');\n  return parts?.[parts.length - 1];\n};\n\nexport default useURLAccession;\n","import React from 'react';\nimport KeyValueList from 'components/UI/KeyValueList';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport { Link } from 'react-router-dom';\n\ntype GenomeOverviewProps = {\n  data: MGnifyDatum;\n};\n\nfunction isAssembly(experimentType: string): boolean {\n  return ['assembly', 'hybrid_assembly', 'long_reads_assembly'].includes(\n    experimentType\n  );\n}\n\nconst AnalysisOverview: React.FC<GenomeOverviewProps> = ({ data }) => {\n  return (\n    <section>\n      <div className=\"vf-stack\">\n        <details open>\n          <summary>\n            <b>Description</b>\n          </summary>\n\n          <KeyValueList\n            list={[\n              {\n                key: 'Study',\n                value:\n                  data.relationships?.study?.data?.id &&\n                  (() => (\n                    <Link to={`/studies/${data.relationships.study.data.id}`}>\n                      {data.relationships.study.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Sample',\n                value:\n                  data.relationships?.sample?.data?.id &&\n                  (() => (\n                    <Link to={`/samples/${data.relationships.sample.data.id}`}>\n                      {data.relationships.sample.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Assembly',\n                value:\n                  data.relationships?.assembly?.data?.id &&\n                  isAssembly(data.attributes['experiment-type'] as string) &&\n                  (() => (\n                    <Link\n                      to={`/assemblies/${data.relationships.assembly.data.id}`}\n                    >\n                      {data.relationships.assembly.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Run',\n                value:\n                  data.relationships?.run?.data?.id &&\n                  (() => (\n                    <Link to={`/runs/${data.relationships.run.data.id}`}>\n                      {data.relationships.run.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Pipeline version',\n                value:\n                  data.attributes?.['pipeline-version'] &&\n                  (() => (\n                    <Link\n                      to={`/pipelines/${data.attributes['pipeline-version']}`}\n                    >\n                      {data.attributes['pipeline-version']}\n                    </Link>\n                  )),\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Experiment details</b>\n          </summary>\n          <KeyValueList\n            list={[\n              // TODO: the lists should obtained from runs for hybrid_assembly\n              {\n                key: 'Experiment type',\n                value: data.attributes['experiment-type'] as string,\n              },\n              {\n                key: 'Instrument model',\n                value: data.attributes['instrument-model'] as string,\n              },\n              {\n                key: 'Instrument platform',\n                value: data.attributes['instrument-platform'] as string,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n      </div>\n    </section>\n  );\n};\nexport default AnalysisOverview;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport { MGnifyDatum } from 'hooks/data/useData';\n\ntype QualityControlProps = {\n  analysisData: MGnifyDatum;\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst QualityControlChart: React.FC<QualityControlProps> = ({\n  analysisData,\n  summaryData,\n}) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const isAssembly = analysisData.attributes['experiment-type'] === 'assembly';\n\n  const unit = isAssembly ? 'contigs' : 'reads';\n  const capUnit = isAssembly ? 'Contigs' : 'Reads';\n\n  const remaining = [0, 0, 0, 0, 0];\n  const filtered = [0, 0, 0, 0, 0];\n  const subsampled = [0, 0, 0, 0, 0];\n\n  const analysisSummary = {};\n  (\n    (analysisData.attributes?.['analysis-summary'] as {\n      key: string;\n      value: string;\n    }[]) || []\n  ).forEach(({ key, value }) => {\n    analysisSummary[key] = value;\n  });\n\n  subsampled[4] = Number(summaryData.sequence_count);\n  remaining[0] = Number(analysisSummary['Submitted nucleotide sequences']);\n  remaining[1] = Number(\n    analysisSummary['Nucleotide sequences after format-specific filtering']\n  );\n  remaining[2] = Number(\n    analysisSummary['Nucleotide sequences after length filtering']\n  );\n  remaining[3] = Number(\n    analysisSummary['Nucleotide sequences after undetermined bases filtering']\n  );\n  filtered[2] = remaining[1] - remaining[2];\n  filtered[1] = remaining[0] - remaining[1];\n  filtered[4] = remaining[3] - remaining[4] - subsampled[4];\n\n  const options = {\n    chart: {\n      type: 'bar',\n      height: 240,\n    },\n    title: {\n      text: `Number of sequence ${unit} per QC step`,\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Count',\n      },\n    },\n    xAxis: {\n      categories: [\n        `Initial ${unit}`,\n        'Trimming',\n        'Length filtering',\n        'Ambiguous base filtering',\n        `${capUnit} subsampled for QC analysis`,\n      ],\n    },\n    plotOptions: {\n      series: {\n        stacking: 'normal',\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: `${capUnit} filtered out`,\n        data: filtered,\n        color: '#CCCCD3',\n      },\n      {\n        name: `${capUnit} remaining`,\n        data: remaining,\n        color: '#058DC7',\n      },\n      {\n        name: `${capUnit} after sampling`,\n        data: subsampled,\n        color: '#8dc7c7',\n      },\n    ],\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default QualityControlChart;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, ResponseFormat, TSVResponse } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\n\ntype ContigsHistogramProps = {\n  analysisData: MGnifyDatum;\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst ContigsHistogram: React.FC<ContigsHistogramProps> = ({\n  analysisData,\n  summaryData,\n}) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/seq-length`,\n    {},\n    {},\n    ResponseFormat.TSV\n  );\n\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const histData = (data as unknown as TSVResponse).map(([x, y]) => [\n    Number(x),\n    Number(y),\n  ]);\n  const lengthMax = Math.max(...histData.map(([x]) => x));\n\n  const isAssembly = analysisData.attributes['experiment-type'] === 'assembly';\n  const unit = isAssembly ? 'contigs' : 'reads';\n  const capUnit = isAssembly ? 'Contigs' : 'Reads';\n\n  const options = {\n    chart: {\n      marginLeft: 78,\n      style: {\n        fontFamily: 'Helvetica',\n      },\n      zoomType: 'x',\n    },\n    title: {\n      text: `${capUnit} length histogram`,\n      style: {\n        fontSize: 16,\n        fontWeight: 'bold',\n      },\n    },\n    // TODO: Form wha I can see isFromSubset is not in use anymore.\n    // Remove this code if after confirming\n    // subtitle: {\n    //     text: ((chartOptions['isFromSubset'])\n    //         ? 'A subset of the sequences was used to generate this chart -'\n    //         : '') + 'Click and drag in the plot area to zoom in'\n    // },\n    yAxis: {\n      title: { text: `Number of ${unit}` },\n    },\n    xAxis: {\n      min: 0,\n      max: 100 * (Math.floor(lengthMax / 100) + 1),\n      plotBands:\n        summaryData === null\n          ? []\n          : [\n              {\n                // visualize the standard deviation\n                from:\n                  Number(summaryData.average_length) -\n                  Number(summaryData.standard_deviation_length),\n                to:\n                  Number(summaryData.average_length) +\n                  Number(summaryData.standard_deviation_length),\n                color: 'rgba(128, 128, 128, .2)',\n                label: {\n                  text: `Standard Deviation<br/>\\u00B1${Number(\n                    summaryData.standard_deviation_length\n                  ).toFixed(2)}`,\n                  style: {\n                    color: '#666666',\n                    fontSize: '0.8em',\n                  },\n                },\n              },\n            ],\n    },\n    series: [\n      {\n        name: capUnit,\n        data: histData,\n        color: '#058dc7', // (chartOptions['isFromSubset']) ? '#8dc7c7' : '#058dc7'\n      },\n    ],\n    legend: { enabled: false },\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    // exporting: util.getExportingStructure(urlToFile)\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default ContigsHistogram;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { ResponseFormat, TSVResponse } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\n\nconst NucleotidesHistogram: React.FC = () => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/nucleotide-distribution`,\n    {},\n    {},\n    ResponseFormat.TSV\n  );\n\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const dataHist = { pos: [], A: [], G: [], T: [], C: [], N: [] };\n  const colors = {\n    A: 'rgb(16, 150, 24)',\n    G: 'rgb(255, 153, 0)',\n    C: 'rgb(51, 102, 204)',\n    T: 'rgb(220, 57, 18)',\n    N: 'rgb(138, 65, 23)',\n  };\n  const headers = (data as unknown as TSVResponse)[0];\n  (data as unknown as TSVResponse).slice(1).forEach((line) => {\n    line.forEach((v, i) => {\n      dataHist[headers[i]].push(Number(v));\n    });\n  });\n\n  const options = {\n    chart: {\n      type: 'area',\n      style: {\n        fontFamily: 'Helvetica',\n      },\n    },\n    title: {\n      text: 'Nucleotide position histogram',\n      style: {\n        fontSize: 16,\n        fontWeight: 'bold',\n      },\n    },\n    xAxis: {\n      categories: dataHist.pos,\n      tickmarkPlacement: 'on',\n      title: { enabled: false },\n    },\n    yAxis: {\n      min: 0,\n      max: 100,\n      title: { enabled: false },\n    },\n    plotOptions: {\n      area: {\n        stacking: 'normal',\n        lineColor: '#666666',\n        lineWidth: 1,\n        marker: {\n          lineWidth: 1,\n          lineColor: '#666666',\n        },\n      },\n    },\n    tooltip: { shared: true },\n    series: ['A', 'T', 'C', 'G', 'N'].map((d) => ({\n      name: d,\n      data: dataHist[d],\n      color: colors[d],\n    })),\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    // exporting: util.getExportingStructure(urlToFile),\n    // TODO: Add download options\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default NucleotidesHistogram;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, ResponseFormat, TSVResponse } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\n\ntype ContigsHistogramProps = {\n  analysisData: MGnifyDatum;\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst ContigsDistribution: React.FC<ContigsHistogramProps> = ({\n  analysisData,\n  summaryData,\n}) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/gc-distribution`,\n    {},\n    {},\n    ResponseFormat.TSV\n  );\n\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const distData = (data as unknown as TSVResponse).map(([x, y]) => [\n    Number(x),\n    Number(y),\n  ]);\n\n  const isAssembly = analysisData.attributes['experiment-type'] === 'assembly';\n  const unit = isAssembly ? 'contigs' : 'reads';\n  const capUnit = isAssembly ? 'Contigs' : 'Reads';\n\n  const options = {\n    chart: {\n      style: {\n        fontFamily: 'Helvetica',\n      },\n      zoomType: 'x',\n    },\n    title: {\n      text: `${capUnit} GC distribution`,\n      style: {\n        fontSize: 16,\n        fontWeight: 'bold',\n      },\n    },\n    // subtitle: {\n    //     text: ( (typeof chartOptions !== 'undefined' &&\n    //         chartOptions['isFromSubset'])\n    //         ? 'A subset of the sequences was used to generate this chart. - '\n    //         : '') + 'Click and drag in the plot area to zoom in'\n    // },\n    yAxis: {\n      title: { text: `Number of ${unit}` },\n    },\n    xAxis: {\n      min: 0,\n      max: 100,\n\n      plotBands:\n        summaryData === null\n          ? []\n          : [\n              {\n                // visualize the standard deviation\n                from:\n                  Number(summaryData.average_gc_content) -\n                  Number(summaryData.standard_deviation_gc_content),\n                to:\n                  Number(summaryData.average_gc_content) +\n                  Number(summaryData.standard_deviation_gc_content),\n                color: 'rgba(128, 128, 128, .2)',\n                borderColor: '#000000',\n                label: {\n                  text: `Standard Deviation<br/>\\u00B1${Number(\n                    summaryData.standard_deviation_gc_content\n                  ).toFixed(2)}`,\n                  style: {\n                    color: '#666666',\n                    fontSize: '0.8em',\n                  },\n                },\n              },\n            ],\n    },\n    series: [\n      {\n        name: capUnit,\n        data: distData,\n        color: '#058dc7', // (chartOptions['isFromSubset']) ? '#8dc7c7' : '#058dc7'\n      },\n    ],\n    legend: { enabled: false },\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    // exporting: util.getExportingStructure(urlToFile)\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default ContigsDistribution;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\ntype SeqLengthChartProps = {\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst SeqLengthChart: React.FC<SeqLengthChartProps> = ({ summaryData }) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n\n  const options = {\n    chart: {\n      type: 'bar',\n      marginTop: 0, // Keep all charts left aligned\n      height: 120,\n    },\n    title: false,\n    xAxis: {\n      categories: ['Minimum', 'Average', 'Maximum'],\n      title: { enabled: false },\n      lineColor: '#595959',\n      tickColor: '',\n    },\n    yAxis: {\n      min: 0,\n      max: 100 * (Math.floor(Number(summaryData.length_max) / 100) + 1),\n      title: { text: 'Sequence length (bp)' },\n      plotBands: [\n        {\n          // visualize the standard deviation\n          from:\n            Number(summaryData.average_length) -\n            Number(summaryData.standard_deviation_length),\n          to:\n            summaryData.average_length +\n            Number(summaryData.standard_deviation_length),\n          color: 'rgba(128, 128, 128, .2)',\n        },\n      ],\n    },\n    plotOptions: {\n      series: {\n        grouping: false,\n        shadow: false,\n        borderWidth: 0,\n      },\n    },\n    series: [\n      {\n        name: 'Length',\n        data: [\n          {\n            y: Number(summaryData.length_min),\n            x: 0,\n            color: 'rgb(114, 191, 63)',\n          },\n          {\n            y: Number(summaryData.average_length),\n            x: 1,\n            color: 'rgb(63, 114, 191)',\n          },\n          {\n            y: Number(summaryData.length_max),\n            x: 2,\n            color: 'rgb(114, 63, 191)',\n          },\n        ],\n        pointPadding: -0.2,\n        tooltip: {\n          /* eslint-disable react/no-this-in-sfc */\n          pointFormatter() {\n            return `<span style=\"color:${this.color}\">\\u25CF</span> ${\n              this.category\n            }: <b>${this.y.toFixed(2)}</b><br/>`;\n          },\n          /* eslint-enable react/no-this-in-sfc */\n        },\n      },\n    ],\n    legend: { enabled: false },\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    exporting: { enabled: false },\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default SeqLengthChart;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\ntype GCContentChartProps = {\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst GCContentChart: React.FC<GCContentChartProps> = ({ summaryData }) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n\n  const options = {\n    chart: {\n      type: 'bar',\n      marginTop: 0, // Keep all charts left aligned\n      height: 150,\n    },\n    title: false,\n    xAxis: {\n      categories: ['Content'],\n      title: { enabled: false },\n      lineColor: '#595959',\n      tickColor: '',\n    },\n    yAxis: {\n      min: 0,\n      max: 100,\n      title: { enabled: false },\n      plotBands: [\n        {\n          // visualize the standard deviation\n          from:\n            Number(summaryData.average_gc_content) -\n            Number(summaryData.standard_deviation_gc_content),\n          to:\n            Number(summaryData.average_gc_content) +\n            Number(summaryData.standard_deviation_gc_content),\n          color: 'rgba(128, 128, 128, .2)',\n        },\n      ],\n    },\n    plotOptions: {\n      series: {\n        grouping: false,\n        shadow: false,\n        borderWidth: 0,\n      },\n    },\n    series: [\n      {\n        name: 'GC content',\n        pointPadding: 0.25,\n        color: 'rgb(63, 114, 191)',\n        tooltip: {\n          /* eslint-disable react/no-this-in-sfc */\n          pointFormatter() {\n            return `<span style=\"color:${this.color}\">\\u25CF</span> ${\n              this.series.name\n            }: <b>${this.y.toFixed(2)}%</b><br/>`;\n          },\n          /* eslint-enable react/no-this-in-sfc */\n        },\n        data: [Number(summaryData.average_gc_content)],\n      },\n      {\n        name: 'AT content',\n        color: 'rgb(114, 63, 191)',\n        pointPadding: 0.25,\n        threshold: Number(summaryData.average_gc_content),\n        tooltip: {\n          /* eslint-disable react/no-this-in-sfc */\n          pointFormatter() {\n            const val = (100 - Number(summaryData.average_gc_content)).toFixed(\n              2\n            );\n            // prettier-ignore\n            return `\n              <span style=\"color:${this.color}\">\\u25CF</span>\n              ${this.series.name}: <b>${val}%</b>\n              <br/>`;\n          },\n          /* eslint-enable react/no-this-in-sfc */\n        },\n        data: [100],\n      },\n    ],\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    exporting: { enabled: false },\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default GCContentChart;\n","import React from 'react';\n\nimport useURLAccession from 'hooks/useURLAccession';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport { MGnifyDatum, ResponseFormat } from 'hooks/data/useData';\nimport QualityControlChart from './QCChart';\nimport ContigsHistogram from './ContigsHistogram';\nimport NucleotidesHistogram from './NucleotidesHistogram';\nimport ContigsDistribution from './ContigsDistribution';\nimport SeqLengthChart from './SeqLengthChart';\nimport GCContentChart from './GCContentChart';\nimport './style.css';\n\ntype QualityControlProps = {\n  analysisData: MGnifyDatum;\n};\nconst QualityControl: React.FC<QualityControlProps> = ({ analysisData }) => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/summary`,\n    {},\n    {},\n    ResponseFormat.TSV\n  );\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const summaryData = Object.fromEntries(\n    data as unknown as Array<[k: string, v: string]>\n  );\n\n  const isAssembly = analysisData.attributes['experiment-type'] === 'assembly';\n  const unit = isAssembly ? 'contig' : 'read';\n  const units = isAssembly ? 'contigs' : 'reads';\n\n  return (\n    <div className=\"vf-stack vf-stack--200\">\n      <p>\n        The chart below shows the number of {units} which pass the quality\n        control steps in the pipeline. Paired-end sequences may have been\n        merged, in which case the initial number of {units} may differ from the\n        number given by ENA.\n      </p>\n      <QualityControlChart\n        analysisData={analysisData}\n        summaryData={summaryData}\n      />\n      {Number(analysisData.attributes['pipeline-version']) > 2 && (\n        <>\n          <p>\n            The histograms below show the distributions of sequence lengths\n            (left) and percentage GC content (right) for the sequences having\n            passed quality control. Note that for large files, the distributions\n            were compiled from a random subset of 2 million\n            {units}. The standard deviations are shown on each plot. The bar\n            chart underneath each graph indicates the minimum, mean and maximum\n            length and mean GC and AT content, respectively.\n          </p>\n          <div className=\"vf-grid vf-grid__col-2\">\n            <div className=\"vf-stack\">\n              <ContigsHistogram\n                analysisData={analysisData}\n                summaryData={summaryData}\n              />\n              <SeqLengthChart summaryData={summaryData} />\n            </div>\n            <div className=\"vf-stack\">\n              <ContigsDistribution\n                analysisData={analysisData}\n                summaryData={summaryData}\n              />\n              <GCContentChart summaryData={summaryData} />\n            </div>\n          </div>\n          <p>\n            The graph below show the relative abundance of nucletotides (A, C,\n            G, T, or ambiguous base &quot;N&quot;) at each position starting\n            from the beginning of each {unit} up to the first 500 base pairs.\n          </p>\n          <NucleotidesHistogram />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default QualityControl;\n","import React from 'react';\nimport { QueryState } from 'hooks/useQueryParamState';\nimport { noop } from 'lodash-es';\n\nconst ContigsQueryContext = React.createContext({\n  contigsQueryData: {\n    data: null,\n    loading: false,\n    error: null,\n  },\n  queryParameters: {} as QueryState,\n  setQueryParameters: noop as (s: QueryState) => void,\n});\n\nexport default ContigsQueryContext;\n","import { KeyValue } from 'hooks/data/useData';\nimport React from 'react';\n\ntype EMGTableProps = {\n  paginationLinks: KeyValue;\n  handleCursor: (cursor: string) => void;\n};\n\nconst pageCursorFromPaginationURL = (linkURL): string => {\n  return linkURL.split('cursor=')[1].split('&')[0];\n};\n\nconst CursorPagination: React.FC<EMGTableProps> = ({\n  paginationLinks,\n  handleCursor,\n}) => {\n  const canPreviousPage = !!paginationLinks.prev;\n  const canNextPage = !!paginationLinks.next;\n\n  return (\n    <section className=\"mg-table-footer\">\n      <nav className=\"vf-pagination\" aria-label=\"Pagination\">\n        <ul className=\"vf-pagination__list\">\n          <li className=\"vf-pagination__item vf-pagination__item--previous-page\">\n            <button\n              disabled={!canPreviousPage}\n              type=\"button\"\n              onClick={() =>\n                handleCursor(pageCursorFromPaginationURL(paginationLinks.prev))\n              }\n              className=\"vf-button vf-button--link vf-pagination__link\"\n            >\n              Previous<span className=\"vf-u-sr-only\"> page</span>\n            </button>\n          </li>\n\n          <li className=\"vf-pagination__item vf-pagination__item--next-page\">\n            <button\n              disabled={!canNextPage}\n              type=\"button\"\n              onClick={() =>\n                handleCursor(pageCursorFromPaginationURL(paginationLinks.next))\n              }\n              className=\"vf-button vf-button--link vf-pagination__link\"\n            >\n              Next<span className=\"vf-u-sr-only\"> page</span>\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </section>\n  );\n};\n\nexport default CursorPagination;\n","import React, { useContext, useMemo } from 'react';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport Tooltip from 'components/UI/Tooltip';\nimport ContigsQueryContext from 'components/Analysis/ContigViewer/ContigsQueryContext';\n\nimport './style.css';\n\nimport ArrowForLink from 'components/UI/ArrowForLink';\nimport CursorPagination from 'components/UI/EMGTable/CursorPagination';\n\ntype ContigFeatureProps = {\n  annotationType: string;\n  present: boolean;\n};\n\nconst ContigFeatureFlag: React.FC<ContigFeatureProps> = ({\n  annotationType,\n  present,\n}) => {\n  let color;\n  const letter = annotationType[0].toUpperCase();\n  switch (annotationType) {\n    case 'cog':\n      color = '#3b6fb6';\n      break;\n    case 'kegg':\n      color = '#18974c';\n      break;\n    case 'pfam':\n      color = '#193f90';\n      break;\n    case 'interpro':\n      color = '#734595';\n      break;\n    case 'go':\n      color = '#f49e17';\n      break;\n    case 'antismash':\n      color = '#b65417';\n      break;\n    default:\n      color = '#8d8f8e';\n  }\n  if (!present) {\n    color += '55';\n  }\n  const tooltip = `${\n    present ? 'Has' : 'Does’t have'\n  } ${annotationType} annotations`;\n  return (\n    <Tooltip content={tooltip}>\n      <div\n        className=\"emg-contig-feature-flag vf-text vf-text-body--4\"\n        style={{ borderColor: color, color }}\n      >\n        {letter}\n      </div>\n    </Tooltip>\n  );\n};\n\nconst ContigsTable: React.FC = () => {\n  const { contigsQueryData, setQueryParameters, queryParameters } =\n    useContext(ContigsQueryContext);\n  const { data, loading, error } = contigsQueryData || {};\n\n  const contigsColumns = useMemo(() => {\n    return [\n      {\n        id: 'contig_id',\n        Header: 'Name',\n        accessor: (contig) => contig.attributes['contig-id'],\n        Cell: ({ cell }) => (\n          <button\n            className=\"vf-button vf-button--link vf-button--sm contig-id-button\"\n            type=\"button\"\n            onClick={() =>\n              setQueryParameters({\n                ...queryParameters,\n                selectedContig: cell.value,\n              })\n            }\n          >\n            {cell.value}\n            <ArrowForLink />\n          </button>\n        ),\n      },\n      {\n        id: 'length',\n        Header: 'Length (bp)',\n        accessor: (contig) => contig.attributes.length,\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n      {\n        id: 'coverage',\n        Header: 'Coverage',\n        accessor: (contig) => contig.attributes.coverage,\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n      {\n        id: 'features',\n        Header: 'Features',\n        accessor: (contig) => contig.attributes,\n        Cell: ({ cell }) => {\n          const flags = Object.entries(cell.value)\n            .filter(([key]) => key.startsWith('has-'))\n            .map(([key, value]) => (\n              <ContigFeatureFlag\n                key={key}\n                annotationType={key.substring(4)}\n                present={!!value}\n              />\n            ));\n          return <div className=\"emg-contig-feature-flags\">{flags}</div>;\n        },\n      },\n    ];\n  }, [queryParameters, setQueryParameters]);\n\n  if (loading && !data) return <Loading size=\"large\" />;\n  if (error || !data) return <FetchError error={error} />;\n\n  return (\n    <div>\n      <EMGTable\n        cols={contigsColumns}\n        data={data}\n        showPagination={false}\n        title={() => (\n          <>\n            Assembly Contigs\n            <span className=\"mg-number\">{data.meta.pagination.count}</span>\n          </>\n        )}\n        initialPage={0}\n        className=\"mg-contigs-table\"\n        namespace=\"contigs_\"\n        loading={loading}\n      />\n      <CursorPagination\n        paginationLinks={data.links}\n        handleCursor={(cursor) =>\n          setQueryParameters({ ...queryParameters, contigsPageCursor: cursor })\n        }\n      />\n    </div>\n  );\n};\n\nexport default ContigsTable;\n","import Dexie, { Table } from 'dexie';\n\nexport interface GFF {\n  id?: number;\n  name: string;\n  size: number;\n  encodedGFF: string;\n  added: Date;\n}\n\nexport class GFFDb extends Dexie {\n  gffs!: Table<GFF>;\n\n  constructor() {\n    super('emgGFF');\n    this.version(1).stores({\n      gffs: '++id, name',\n    });\n  }\n}\n\nexport const db = new GFFDb();\n\nexport async function encodeGFF(file: File): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      const text = reader.result;\n      resolve(btoa(text as string));\n    };\n    reader.readAsText(file);\n  });\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useRef } from 'react';\nimport { Column, useSortBy, useTable } from 'react-table';\n\nimport Loading from 'components/UI/Loading';\n\ntype EMGTableProps = {\n  cols: Column[];\n  data: Array<unknown>;\n  className?: string;\n  sortable?: boolean;\n  loading?: boolean;\n  isStale?: boolean;\n};\n\nconst PlainTable: React.FC<EMGTableProps> = ({\n  cols,\n  data,\n  className = '',\n  sortable = false,\n  loading = false,\n  isStale = false,\n}) => {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable(\n      {\n        columns: cols,\n        data,\n      },\n      useSortBy\n    );\n  const tableRef = useRef(null);\n\n  if (loading && !isStale) return <Loading size=\"small\" />;\n\n  return (\n    <section>\n      <div className=\"mg-table-overlay-container\">\n        <div className={loading && isStale ? 'mg-table-overlay' : undefined} />\n        <table\n          {...getTableProps}\n          className={`vf-table--striped mg-table ${className}`}\n          ref={tableRef}\n        >\n          <thead className=\"vf-table__header\">\n            {headerGroups.map((headerGroup) => (\n              <tr\n                {...headerGroup.getHeaderGroupProps()}\n                className=\"vf-table__row\"\n              >\n                {headerGroup.headers.map((column) => (\n                  <th\n                    {...(sortable && column.canSort\n                      ? column.getHeaderProps(column.getSortByToggleProps())\n                      : { key: column.id })}\n                    className=\"vf-table__heading\"\n                  >\n                    {column.render('Header')}\n                    {sortable && column.canSort && (\n                      <>\n                        &nbsp;\n                        <span>\n                          {/* eslint-disable-next-line no-nested-ternary */}\n                          {column.isSorted ? (\n                            column.isSortedDesc ? (\n                              <i className=\"icon icon-common icon-sort-down\" />\n                            ) : (\n                              <i className=\"icon icon-common icon-sort-up\" />\n                            )\n                          ) : (\n                            <i className=\"icon icon-common icon-sort\" />\n                          )}\n                        </span>\n                      </>\n                    )}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"vf-table__body\">\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()} className=\"vf-table__row\">\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()} className=\"vf-table__cell\">\n                        {cell.render('Cell')}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </section>\n  );\n};\n\nexport default PlainTable;\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport Modal from 'react-modal';\nimport {\n  db,\n  encodeGFF,\n  GFF,\n} from 'components/Analysis/ContigViewer/GFFCompare/gff_db';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport ArrowForLink from 'components/UI/ArrowForLink';\nimport PlainTable from 'components/UI/PlainTable';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\n\nModal.setAppElement('#root');\n\ntype GFFCompareProps = {\n  handleGFFTrack: (gff: GFF) => void;\n};\n\nconst modalStyle = {\n  overlay: {\n    zIndex: 10000,\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nconst GFFCompare: React.FC<GFFCompareProps> = ({ handleGFFTrack }) => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const fileInput = useRef<HTMLInputElement>(null);\n  const [uploadError, setUploadError] = useState(null);\n  const [comparisonQueryParams, setComparisonQueryParams] =\n    useQueryParametersState(\n      { gffComparisonId: null },\n      { gffComparisonId: Number }\n    );\n\n  const gffs = useLiveQuery(() => db.gffs.toArray());\n\n  useEffect(() => {\n    if (comparisonQueryParams.gffComparisonId) {\n      db.gffs.get(comparisonQueryParams.gffComparisonId).then((gff) => {\n        if (gff === undefined) {\n          setComparisonQueryParams({ gffComparisonId: undefined });\n        } else {\n          handleGFFTrack(gff);\n        }\n      });\n    }\n  }, [comparisonQueryParams, handleGFFTrack, setComparisonQueryParams]);\n\n  const columns = useMemo(() => {\n    return [\n      {\n        id: 'name',\n        Header: 'GFF Filename',\n        accessor: (gff) => gff.name,\n        Cell: ({ cell, row }) => (\n          <button\n            className=\"vf-button vf-button--link vf-button--sm contig-id-button\"\n            type=\"button\"\n            onClick={async () => {\n              const gff = await db.gffs.get(row.original.id);\n              setComparisonQueryParams({\n                ...comparisonQueryParams,\n                gffComparisonId: gff.id,\n              });\n              setIsOpen(false);\n            }}\n          >\n            {cell.value}\n            <ArrowForLink />\n          </button>\n        ),\n      },\n      {\n        id: 'size',\n        Header: 'File size (Kb)',\n        accessor: (gff) => gff.size,\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n      {\n        id: 'added',\n        Header: 'Added',\n        accessor: (gff) => gff.added,\n        Cell: ({ cell }) => <span>{cell.value?.toLocaleString()}</span>,\n      },\n      {\n        id: 'del',\n        Header: 'Remove',\n        accessor: (gff) => gff.id,\n        Cell: ({ cell }) => (\n          <button\n            className=\"vf-button vf-button--link vf-button--sm\"\n            type=\"button\"\n            onClick={() => db.gffs.delete(cell.value)}\n          >\n            Remove\n          </button>\n        ),\n      },\n    ];\n  }, [comparisonQueryParams, setComparisonQueryParams]);\n\n  async function addGff(gffFile): Promise<void> {\n    if (!gffFile) return;\n    const encoded = await encodeGFF(gffFile);\n    try {\n      await db.gffs.add({\n        name: gffFile.name,\n        size: gffFile.size,\n        added: new Date(Date.now()),\n        encodedGFF: encoded,\n      });\n      setUploadError(null);\n    } catch (error) {\n      setUploadError(`GFF upload error: ${error}`);\n    }\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={() => setIsOpen(false)}\n        contentLabel=\"Example Modal\"\n        style={modalStyle}\n      >\n        <div className=\"vf-stack vf-stack--800\">\n          <h1>Compare a GFF to the contig</h1>\n          <form className=\"vf-stack vf-stack--400\" action=\"#\" method=\"get\">\n            <div className=\"vf-form__item vf-stack\">\n              <label\n                htmlFor=\"upload-picker\"\n                className=\"vf-form__label vf-form__label--required\"\n              >\n                <h2>Upload a GFF file from your computer</h2>\n              </label>\n\n              <p className=\"vf-form__helper\">\n                The GFF will be stored in your browser, not sent to MGnify\n                servers.\n              </p>\n\n              <input\n                type=\"file\"\n                id=\"upload-picker\"\n                hidden\n                ref={fileInput}\n                onChange={(e) => addGff(e.target.files[0])}\n                accept=\".gff,.gff3\"\n              />\n              <button\n                className=\"vf-button vf-button--primary vf-button--sm\"\n                onClick={() => fileInput.current?.click()}\n                type=\"button\"\n              >\n                Browse for file...\n              </button>\n              {uploadError && (\n                <p className=\"vf-form__helper vf-form__helper--error\">\n                  {uploadError}\n                </p>\n              )}\n            </div>\n          </form>\n          <div className=\"vf-stack vf-stack--200\">\n            <h2>Previously uploaded GFFs</h2>\n            <p className=\"vf-form__helper\">\n              Click the GFF’s name to view it in the browser\n            </p>\n            <PlainTable cols={columns} data={gffs} />\n          </div>\n        </div>\n      </Modal>\n      <button\n        className=\"vf-button vf-button--secondary vf-button--sm\"\n        type=\"button\"\n        onClick={() => setIsOpen(true)}\n      >\n        Load a GFF\n      </button>\n    </div>\n  );\n};\n\nexport default GFFCompare;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\nimport useURLAccession from 'hooks/useURLAccession';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useData, {\n  KeyValue,\n  MGnifyDatum,\n  ResponseFormat,\n} from 'hooks/data/useData';\nimport './style.css';\nimport UserContext from 'pages/Login/UserContext';\nimport igv from 'igv';\n\nimport ContigsTable from 'components/Analysis/ContigViewer/Table';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport ContigsQueryContext from 'components/Analysis/ContigViewer/ContigsQueryContext';\nimport { find } from 'lodash-es';\nimport GFFCompare from 'components/Analysis/ContigViewer/GFFCompare';\nimport ReactDOMServer from 'react-dom/server';\nimport GenomeBrowserPopup from 'components/Genomes/Browser/Popup';\n\ntype ContigProps = {\n  contig: MGnifyDatum;\n};\n\nconst Contig: React.FC<ContigProps> = ({ contig }) => {\n  const accession = useURLAccession();\n  const { config } = useContext(UserContext);\n  const contigId = contig.attributes['contig-id'];\n  const fastaURL = `${config.api}analyses/${contig.attributes.accession}/contigs/${contigId}`;\n\n  const { data, loading, error } = useData(fastaURL, ResponseFormat.TXT);\n\n  const antiSMASH = contig.attributes['has-antismash'];\n  const displayName = contig.attributes['contig-name'];\n  const [igvBrowser, setIgvBrowser] = useState(null);\n\n  const igvContainer = useCallback(\n    (node) => {\n      const options = {\n        showChromosomeWidget: false,\n        showTrackLabelButton: true,\n        showTrackLabels: true,\n        showCenterGuide: false,\n        reference: {\n          indexed: false,\n          fastaURL,\n        },\n        tracks: [\n          {\n            name: displayName,\n            type: 'mgnify-annotation',\n            format: 'gff3',\n            url: `${config.api}analyses/${accession}/contigs/${contigId}/annotations`,\n            displayMode: 'EXPANDED',\n            label: 'Functional annotation',\n            colorAttributes: [\n              ['Default', ''],\n              ['COG', 'COG'],\n              ['GO', 'GO'],\n              ['KEGG', 'KEGG'],\n              ['Pfam', 'Pfam'],\n              ['InterPro', 'InterPro'],\n            ],\n            colorBy: undefined,\n            defaultColour: undefined,\n            labelBy: undefined,\n          },\n        ],\n        showLegend: true,\n        legendParent: '#contig',\n      };\n      if (antiSMASH) {\n        options.tracks.push({\n          colorAttributes: [],\n          name: undefined,\n          type: 'mgnify-annotation',\n          format: 'gff3',\n          displayMode: 'EXPANDED',\n          url: `${config.api}analyses/${accession}/contigs/${contigId}/annotations?antismash=True`,\n          label: 'antiSMASH',\n          colorBy: 'as_type',\n          defaultColour: '#BEBEBE',\n          labelBy: 'as_gene_clusters',\n        });\n      }\n\n      if (node === null) return;\n      igv.createBrowser(node, options).then((browser) => {\n        browser.on('trackclick', (ignored, trackData) =>\n          ReactDOMServer.renderToString(<GenomeBrowserPopup data={trackData} />)\n        );\n        setIgvBrowser(browser);\n      });\n    },\n    [accession, antiSMASH, config.api, contigId, displayName, fastaURL]\n  );\n\n  if (loading) return <Loading size=\"small\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n\n  return (\n    <div id=\"contig\">\n      <div ref={igvContainer} />\n      <GFFCompare\n        handleGFFTrack={(track) => {\n          if (igvBrowser.findTracks('name', track.name).length) {\n            // Don't load same track. Can happen in spurious re-renders.\n            return;\n          }\n          igvBrowser.loadTrack({\n            name: track.name,\n            type: 'annotation',\n            url: `data:application/octet-stream;base64,${track.encodedGFF}`,\n            format: 'gff3',\n            filterTypes: [],\n          });\n        }}\n      />\n    </div>\n  );\n};\n\nconst ContigsViewer: React.FC = () => {\n  const accession = useURLAccession();\n\n  const [queryParameters, setQueryParameters] = useQueryParametersState({\n    contigsPageCursor: '',\n    selectedContig: '',\n  });\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/contigs`,\n    { cursor: queryParameters.contigsPageCursor as string },\n    {}\n  );\n\n  const context = useMemo(\n    () => ({\n      contigsQueryData: { data, loading, error },\n      queryParameters,\n      setQueryParameters,\n    }),\n    [data, error, loading, queryParameters, setQueryParameters]\n  );\n\n  const contig = useMemo(() => {\n    let selectedContig;\n    if (!data) return null;\n\n    const selectedContigId =\n      queryParameters.selectedContig ||\n      data.data?.[0]?.attributes?.['contig-id'];\n\n    if (selectedContigId) {\n      selectedContig = find(data.data, (c: KeyValue) => {\n        return c.attributes['contig-id'] === selectedContigId;\n      });\n      if (selectedContig) {\n        return selectedContig;\n      }\n    }\n    return null;\n  }, [data, queryParameters]);\n\n  useEffect(() => {\n    // If a new contig is autoselected (e.g. page change), put it in URL\n    if (\n      contig &&\n      contig.attributes['contig-id'] !== queryParameters.selectedContig\n    ) {\n      setQueryParameters({\n        ...queryParameters,\n        selectedContig: contig.attributes['contig-id'],\n      });\n    }\n  });\n\n  useEffect(() => {\n    // If the contig in URL isnt in the data-page, remove the bad ID from URL\n    if (queryParameters.selectedContig && data && !contig) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { selectedContig: notInPageContigId, ...otherQueryParams } =\n        queryParameters;\n      setQueryParameters(otherQueryParams);\n    }\n  }, [data, contig, queryParameters, setQueryParameters]);\n\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data || !contig) return <Loading />;\n  // const isAssembly = analysisData.attributes['experiment-type'] === 'assembly';\n  // const unit = isAssembly ? 'contig' : 'read';\n  // const units = isAssembly ? 'contigs' : 'reads';\n  return (\n    <div className=\"vf-stack vf-stack--800\">\n      <ContigsQueryContext.Provider value={context}>\n        <section>\n          <div className=\"vf-stack\">\n            <details open>\n              <summary>\n                <b>Contig browser</b>\n              </summary>\n              <Contig contig={contig} />\n            </details>\n          </div>\n        </section>\n        <section>\n          <ContigsTable />\n        </section>\n      </ContigsQueryContext.Provider>\n    </div>\n  );\n};\n\nexport default ContigsViewer;\n","import React from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Tabs from 'components/UI/Tabs';\nimport Overview from 'components/Analysis/Overview';\nimport QualityControl from 'components/Analysis/QualityControl';\nimport ContigViewer from 'components/Analysis/ContigViewer';\nimport RouteForHash from 'components/Nav/RouteForHash';\nimport { Link } from 'react-router-dom';\n\nconst hasAbundance = (\n  includes: { attributes?: { 'group-type'?: string } }[]\n): boolean => {\n  return includes.some(\n    (included) => included?.attributes?.['group-type'] === 'Statistics'\n  );\n};\n\nconst isAssembly = (data: MGnifyDatum): boolean =>\n  data.attributes['experiment-type'] === 'assembly';\nconst isAtleastVersion5 = (data: MGnifyDatum): boolean =>\n  Number(data.attributes['pipeline-version']) >= 5;\nconst isNotAmplicon = (data: MGnifyDatum): boolean =>\n  data.attributes['experiment-type'] !== 'amplicon';\n\nconst AnalysisPage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`analyses/${accession}`, {\n    include: 'downloads',\n  });\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: analysisData, included } = data as MGnifyResponseObj;\n\n  const tabs = [\n    { label: 'Overview', to: '#overview' },\n    { label: 'Quality control', to: '#qc' },\n    { label: 'Taxonomic analysis', to: '#taxonomic' },\n    isNotAmplicon(analysisData)\n      ? { label: 'Functional analysis', to: '#functional' }\n      : null,\n    hasAbundance(included)\n      ? { label: 'Abundance and comparison', to: '#abundance' }\n      : null,\n    isAssembly(analysisData) && isAtleastVersion5(analysisData)\n      ? { label: 'Pathways/Systems', to: '#path-systems' }\n      : null,\n    isAssembly(analysisData) && isAtleastVersion5(analysisData)\n      ? { label: 'Contig Viewer', to: '#contigs-viewer' }\n      : null,\n    { label: 'Download', to: '#download' },\n  ].filter(Boolean);\n\n  return (\n    <section className=\"vf-content\">\n      <h2>Analysis {accession}</h2>\n      <h4>\n        <Link\n          to={\n            isAssembly(analysisData)\n              ? `/assemblies/${analysisData.relationships.assembly.data.id}`\n              : `/runs/${analysisData.relationships.run.data.id}`\n          }\n        >\n          Other Analyses\n        </Link>\n      </h4>\n      <Tabs tabs={tabs} />\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <RouteForHash hash=\"#overview\" isDefault>\n            <Overview data={analysisData} />\n          </RouteForHash>\n          <RouteForHash hash=\"#qc\">\n            <QualityControl analysisData={analysisData} />\n          </RouteForHash>\n          <RouteForHash hash=\"#contigs-viewer\">\n            <ContigViewer />\n          </RouteForHash>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default AnalysisPage;\n"],"names":["antiSMASHLabels","biosynthetic","regulatory","transport","resistance","MultipleField","value","url","decodeValue","parts","split","className","map","part","text","decodeURIComponent","key","href","getProtLength","attributes","start","parseInt","end","Number","isNaN","Math","ceil","data","name","gene","product","properties","rawData","reduce","memo","el","toLowerCase","functionalData","title","Value","ecnumber","pfam","kegg","eggnog","cog","go","interpro","as_type","as_notes","as_gene_clusters","otherData","type","inference","String","metaproteomicData","peptide_sequences","pride_id","id","formatData","property","filter","d","length","pName","Boolean","hash","isDefault","children","location","navigate","useEffect","replace","width","height","xmlns","viewBox","preserveAspectRatio","fill","fillRule","currentPageIndex","pageIndex","gotoPage","onClick","namespace","queryParameters","setQueryParameters","setValue","useState","debounced","useCallback","debounce","v","htmlFor","placeholder","onChange","event","target","cols","Title","initialPage","initialPageSize","showPagination","showTextFilter","sortable","loading","isStale","downloadURL","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","canPreviousPage","canNextPage","pageCount","setPageSize","nextPage","previousPage","state","pageSize","sortBy","useTable","columns","initialState","meta","pagination","pages","manualPagination","manualSortBy","useSortBy","usePagination","tableRef","useRef","isChangingPage","setChangingPage","current","scrollIntoView","order","tableSortBy","col","desc","getOrderingQueryParamFromSortedColumn","paginationRanges","useMemo","startingPages","adjacentPages","max","page","push","endingPages","hasJumpFromStart","hasJumpToEnd","getPaginationRanges","goToPageAndScroll","pageNumber","changeSizeAndScroll","evt","Loading","size","undefined","ref","style","whiteSpace","download","headerGroup","getHeaderGroupProps","headers","column","canSort","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","onBlur","pg","disabled","paginationIndex","rel","refreshPage","window","reload","error","backgroundColor","status","list","gridTemplateColumns","rowGap","textAlign","tabs","label","Label","to","pathname","startsWith","content","getQueryStateFromURL","searchStr","serializers","innerState","parametersFromURL","URLSearchParams","Object","entries","forEach","parameter","serializer","get","useQueryParametersState","stateWithURL","search","currentState","setCurrentState","newState","JSON","stringify","parametersToChange","changed","defaultValue","newValue","set","delete","toString","trim","endsWith","slice","experimentType","open","KeyValueList","relationships","study","sample","assembly","includes","run","analysisData","summaryData","chartComponentRef","isAssembly","unit","capUnit","remaining","filtered","subsampled","analysisSummary","sequence_count","options","chart","yAxis","min","xAxis","categories","plotOptions","series","stacking","credits","enabled","color","highcharts","accession","useURLAccession","useMGnifyData","FetchError","histData","x","y","lengthMax","marginLeft","fontFamily","zoomType","fontSize","fontWeight","floor","plotBands","from","average_length","standard_deviation_length","toFixed","legend","navigation","buttonOptions","symbolX","symbolY","dataHist","pos","A","G","T","C","N","colors","line","i","tickmarkPlacement","area","lineColor","lineWidth","marker","tooltip","shared","distData","average_gc_content","standard_deviation_gc_content","borderColor","marginTop","tickColor","length_max","grouping","shadow","borderWidth","length_min","pointPadding","pointFormatter","this","category","exporting","threshold","val","fromEntries","units","contigsQueryData","noop","pageCursorFromPaginationURL","linkURL","paginationLinks","handleCursor","prev","next","ContigFeatureFlag","annotationType","present","letter","toUpperCase","Tooltip","useContext","contigsColumns","Header","accessor","contig","Cell","selectedContig","ArrowForLink","coverage","flags","substring","EMGTable","count","links","cursor","contigsPageCursor","GFFDb","constructor","super","version","stores","gffs","db","modalStyle","overlay","zIndex","top","left","right","bottom","marginRight","transform","handleGFFTrack","modalIsOpen","setIsOpen","fileInput","uploadError","setUploadError","comparisonQueryParams","setComparisonQueryParams","gffComparisonId","useLiveQuery","toArray","then","gff","original","added","toLocaleString","addGff","gffFile","encoded","file","Promise","resolve","reader","FileReader","onload","result","btoa","readAsText","encodeGFF","add","Date","now","encodedGFF","isOpen","onRequestClose","contentLabel","action","method","hidden","e","files","accept","click","Contig","config","UserContext","contigId","fastaURL","api","useData","antiSMASH","displayName","igvBrowser","setIgvBrowser","igvContainer","node","showChromosomeWidget","showTrackLabelButton","showTrackLabels","showCenterGuide","reference","indexed","tracks","format","displayMode","colorAttributes","colorBy","defaultColour","labelBy","showLegend","legendParent","browser","on","ignored","trackData","track","findTracks","loadTrack","filterTypes","context","selectedContigId","find","c","notInPageContigId","otherQueryParams","isAtleastVersion5","isNotAmplicon","include","included","some","Tabs","RouteForHash","Overview","ContigViewer"],"sourceRoot":""}