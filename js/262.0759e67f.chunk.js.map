{"version":3,"file":"js/262.0759e67f.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./node_modules/lodash-es/_unescapeHtmlChar.js","webpack://mgportalv2/./node_modules/lodash-es/_basePropertyOf.js","webpack://mgportalv2/./node_modules/lodash-es/unescape.js","webpack://mgportalv2/./src/components/Analysis/Analyses/index.tsx","webpack://mgportalv2/./src/components/Nav/RouteForHash/index.tsx","webpack://mgportalv2/./src/components/UI/Accordion/index.tsx","webpack://mgportalv2/./src/components/Publications/EuropePMCAnnotations/index.tsx","webpack://mgportalv2/./src/components/Publications/index.tsx","webpack://mgportalv2/./src/components/UI/Box/index.tsx","webpack://mgportalv2/./src/components/UI/SamplesMap/index.tsx","webpack://mgportalv2/./src/components/UI/SamplesMap/render.tsx","webpack://mgportalv2/./src/components/UI/Tabs/index.tsx","webpack://mgportalv2/./src/hooks/useURLAccession/index.tsx","webpack://mgportalv2/./src/components/UI/SamplesMap/ByStudy/index.tsx","webpack://mgportalv2/./src/hooks/data/useSamplesProvider/index.tsx","webpack://mgportalv2/./src/components/UI/ProgrammaticAccess/index.tsx","webpack://mgportalv2/./src/components/Study/Overview/index.tsx","webpack://mgportalv2/./src/components/Study/SummaryTab/index.tsx","webpack://mgportalv2/./src/pages/Study/index.tsx","webpack://mgportalv2/./node_modules/lodash-es/_arrayMap.js","webpack://mgportalv2/./node_modules/lodash-es/_baseToString.js","webpack://mgportalv2/./node_modules/lodash-es/isArray.js","webpack://mgportalv2/./node_modules/lodash-es/toString.js"],"sourcesContent":["import basePropertyOf from './_basePropertyOf.js';\n\n/** Used to map HTML entities to characters. */\nvar htmlUnescapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\"\n};\n\n/**\n * Used by `_.unescape` to convert HTML entities to characters.\n *\n * @private\n * @param {string} chr The matched character to unescape.\n * @returns {string} Returns the unescaped character.\n */\nvar unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\nexport default unescapeHtmlChar;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default basePropertyOf;\n","import toString from './toString.js';\nimport unescapeHtmlChar from './_unescapeHtmlChar.js';\n\n/** Used to match HTML entities and HTML characters. */\nvar reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n    reHasEscapedHtml = RegExp(reEscapedHtml.source);\n\n/**\n * The inverse of `_.escape`; this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n * their corresponding characters.\n *\n * **Note:** No other HTML entities are unescaped. To unescape additional\n * HTML entities use a third-party library like [_he_](https://mths.be/he).\n *\n * @static\n * @memberOf _\n * @since 0.6.0\n * @category String\n * @param {string} [string=''] The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('fred, barney, &amp; pebbles');\n * // => 'fred, barney, & pebbles'\n */\nfunction unescape(string) {\n  string = toString(string);\n  return (string && reHasEscapedHtml.test(string))\n    ? string.replace(reEscapedHtml, unescapeHtmlChar)\n    : string;\n}\n\nexport default unescape;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { unescape } from 'lodash-es';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList, MGnifyDatum } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport { getBiomeIcon } from 'utils/biomes';\n\nconst initialPageSize = 10;\ntype AssociatedAnaysesProps = {\n  rootEndpoint: string;\n};\n\nconst AnalysesTable: React.FC<AssociatedAnaysesProps> = ({ rootEndpoint }) => {\n  const accession = useURLAccession();\n  const [queryParameters] = useQueryParametersState(\n    {\n      'analyses-page': 1,\n      'analyses-page_size': initialPageSize,\n      'analyses-order': '',\n    },\n    {\n      'analyses-page': Number,\n      'analyses-page_size': Number,\n    }\n  );\n  const { data, loading, error, isStale, downloadURL } = useMGnifyData(\n    `${rootEndpoint}/${accession}/analyses`,\n    {\n      include: 'sample',\n      page: queryParameters['analyses-page'] as number,\n      ordering: queryParameters['analyses-order'] as string,\n      page_size: queryParameters['analyses-page_size'] as number,\n    }\n  );\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !data) return <FetchError error={error} />;\n\n  if (!(data.data as MGnifyDatum[]).length) return null;\n\n  const samples = {};\n  (data.included || [])\n    ?.filter(({ type }) => type === 'samples')\n    .forEach((sample) => {\n      samples[sample.id as string] = {\n        description: sample.attributes['sample-desc'],\n        biome: (\n          sample.relationships as Record<string, { data: { id: string } }>\n        ).biome.data.id,\n      };\n    });\n  const columns = [\n    {\n      id: 'biome_id',\n      Header: 'Biome',\n      accessor: (analysis) =>\n        samples?.[analysis?.relationships?.sample?.data?.id]?.biome || '',\n      Cell: ({ cell }) => (\n        <span\n          className={`biome_icon icon_xs ${getBiomeIcon(cell.value)}`}\n          style={{ float: 'initial' }}\n        />\n      ),\n      className: 'mg-biome',\n    },\n    {\n      id: 'sample',\n      Header: 'Sample accession',\n      accessor: (analysis) => analysis?.relationships?.sample?.data?.id,\n      Cell: ({ cell }) => (\n        <Link to={`/samples/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'description_id',\n      Header: 'Sample description',\n      accessor: (analysis) =>\n        samples?.[analysis?.relationships?.sample?.data?.id]?.description || '',\n      Cell: ({ cell }) => unescape(cell.value),\n    },\n    {\n      id: 'assembly_run_id',\n      Header: ' Run / Assembly accession',\n      accessor: (analysis) => ({\n        assembly: analysis?.relationships?.assembly?.data?.id || '',\n        run: analysis?.relationships?.run?.data?.id || '',\n      }),\n      Cell: ({ cell }) => (\n        <>\n          {cell.value.assembly && (\n            <Link to={`/assemblies/${cell.value.assembly}`}>\n              {cell.value.assembly}\n            </Link>\n          )}\n          {cell.value.run && (\n            <Link to={`/runs/${cell.value.run}`}>{cell.value.run}</Link>\n          )}\n        </>\n      ),\n    },\n    {\n      id: 'pipeline_id',\n      Header: 'Pipeline version',\n      accessor: (analysis) => analysis.attributes['pipeline-version'],\n      Cell: ({ cell }) => (\n        <Link to={`/pipelines/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'analysis_id',\n      Header: 'Analysis accession',\n      accessor: (analysis) => analysis.id,\n      Cell: ({ cell }) => (\n        <Link to={`/analyses/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n  ];\n  const showPagination = (data.meta?.pagination?.count || 1) > initialPageSize;\n  return (\n    <EMGTable\n      cols={columns}\n      data={data as MGnifyResponseList}\n      Title=\"Analyses\"\n      initialPage={(queryParameters['analyses-page'] as number) - 1}\n      initialPageSize={initialPageSize}\n      className=\"mg-anlyses-table\"\n      loading={loading}\n      isStale={isStale}\n      namespace=\"analyses-\"\n      showPagination={showPagination}\n      downloadURL={downloadURL}\n    />\n  );\n};\n\nexport default AnalysesTable;\n","import React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\ntype PropsType = {\n  hash: string;\n  isDefault?: boolean;\n};\nconst RouteForHash: React.FC<PropsType> = ({\n  hash,\n  isDefault = false,\n  children,\n}) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (location.hash === '' && hash !== '' && isDefault) {\n      navigate(hash, { replace: true });\n    }\n  });\n\n  if (location.hash === hash) {\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport default RouteForHash;\n","import React, { ReactChild, ReactChildren, useState } from 'react';\nimport './style.css';\n\nconst AccordionElement: React.FC<{\n  title: string;\n  children: ReactChild;\n}> = ({ title, children }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <li\n      className={`vf-tree__item ${\n        isOpen ? 'vf-tree__item--selected | vf-tree__item--expanded' : ''\n      }`}\n    >\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"vf-button vf-button--link vf-tree__link\"\n        type=\"button\"\n      >\n        {title}\n        <span className=\"vf-button vf-tree__button\">\n          <svg\n            aria-hidden=\"true\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              d=\"M19.5,12a2.3,2.3,0,0,1-.78,1.729L7.568,23.54a1.847,\n            1.847,0,0,1-2.439-2.773l9.752-8.579a.25.25,0,0,0,0-.376L5.129,\n            3.233A1.847,1.847,0,0,1,7.568.46l11.148,9.808A2.31,2.31,0,0,1,19.5,12Z\"\n            />\n          </svg>\n        </span>\n      </button>\n      {isOpen && children}\n    </li>\n  );\n};\n\nexport const AccordionContentPanel: React.FC<{\n  children: ReactChild | ReactChild[];\n}> = ({ children }) => {\n  return <div className=\"accordion-content-panel\">{children}</div>;\n};\n\ntype AccordionListProps = {\n  titles: string[];\n  children: ReactChild | ReactChild[] | ReactChildren | ReactChildren[];\n  nestedLevel?: number;\n};\nexport const AccordionList: React.FC<AccordionListProps> = ({\n  titles,\n  nestedLevel,\n  children,\n}) => {\n  return (\n    <ul\n      className={`vf-tree__list  vf-tree__list--${nestedLevel} ${\n        nestedLevel > 1 ? 'vf-tree__list--additional' : ''\n      } | vf-list `}\n    >\n      {titles.map((title, i) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <AccordionElement title={title} key={i}>\n          {children[i]}\n        </AccordionElement>\n      ))}\n    </ul>\n  );\n};\n\ntype AccordionProps = {\n  titles: string[];\n  children: ReactChild | ReactChild[] | ReactChildren | ReactChildren[];\n};\nconst Accordion: React.FC<AccordionProps> = ({ titles, children }) => {\n  return (\n    <div className=\"vf-tree\" aria-expanded=\"true\">\n      <div className=\"vf-tree__inner\">\n        <AccordionList titles={titles} nestedLevel={1}>\n          {children}\n        </AccordionList>\n      </div>\n    </div>\n  );\n};\n\nexport default Accordion;\n","import React, { useState } from 'react';\nimport ExtLink from 'components/UI/ExtLink';\nimport EuropePMCLogo from 'images/europe_pmc_logo.png';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\n\nimport './style.css';\nimport Accordion, {\n  AccordionContentPanel,\n  AccordionList,\n} from 'components/UI/Accordion';\nimport EMGModal from 'components/UI/EMGModal';\n\ntype Tag = {\n  name: string;\n  uri: string;\n};\n\ntype Mention = {\n  exact: string;\n  id: string;\n  postfix: string;\n  prefix: string;\n  provider: string;\n  section: string;\n  type: string;\n  tags: Tag[];\n};\n\ntype Annotation = {\n  annotation_text: string;\n  mentions: Mention[];\n};\n\ntype AnnotationGroup = {\n  annotation_type: string;\n  description: string;\n  title: string;\n  annotations: Annotation[];\n};\n\nconst AnnotationSuperGroup: React.FC<{\n  superGroup: AnnotationGroup[];\n  title: string;\n}> = ({ superGroup, title }) => {\n  return (\n    <>\n      <h3>{title}</h3>\n      {!superGroup.length && <p>No {title} annotations</p>}\n      <Accordion titles={superGroup.map((g) => g.title)}>\n        {superGroup.map((g) => (\n          <React.Fragment key={g.title}>\n            <div style={{ padding: '0 8px' }}>\n              <p className=\"vf-text text-body--5\">\n                <span className=\"icon icon-common icon-info\" data-icon=\"i\" />\n                &nbsp; {g.description}\n              </p>\n            </div>\n            <AccordionList\n              titles={g.annotations.map((anno) => anno.annotation_text)}\n              nestedLevel={2}\n            >\n              {g.annotations.map((anno) => (\n                <React.Fragment key={anno.annotation_text}>\n                  {anno.mentions.map((mention) => (\n                    <AccordionContentPanel key={mention.id}>\n                      <div className=\"publication-epmc-mention\">\n                        <div className=\"vf-sidebar vf-sidebar--end\">\n                          <div className=\"vf-sidebar__inner\">\n                            <div>\n                              <p>\n                                Mentioned in the{' '}\n                                {mention.section.split(' (')[0]} section:\n                              </p>\n                            </div>\n                            <div>\n                              <ExtLink href={mention.id}>\n                                View on Europe PMC\n                              </ExtLink>\n                              &nbsp;&nbsp;\n                              {mention.tags.map((tag) => (\n                                <ExtLink href={tag.uri} key={tag.name}>\n                                  Definition of ‘{tag.name}’&nbsp;&nbsp;\n                                </ExtLink>\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                        <p>\n                          <span className=\"publications-epmc-annotation-prefix\">\n                            &hellip;{mention.prefix}\n                          </span>\n                          <span className=\"publications-epmc-annotation-match\">\n                            <ExtLink href={mention.id}>{mention.exact}</ExtLink>\n                          </span>\n                          <span className=\"publications-epmc-annotation-prefix\">\n                            {mention.postfix}&hellip;\n                          </span>\n                        </p>\n                      </div>\n                    </AccordionContentPanel>\n                  ))}\n                </React.Fragment>\n              ))}\n            </AccordionList>\n          </React.Fragment>\n        ))}\n      </Accordion>\n    </>\n  );\n};\ntype PublicationAnnotationProps = {\n  publicationId: string;\n  pubmedId: string;\n};\n\nconst PublicationAnnotations: React.FC<PublicationAnnotationProps> = ({\n  publicationId,\n  pubmedId,\n}) => {\n  const { data, loading, error } = useMGnifyData(\n    `publications/${publicationId}/europe_pmc_annotations`\n  );\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  const annotations = data.data as unknown as Record<string, AnnotationGroup[]>;\n  const hasAnnotations = !!(\n    annotations?.sample_processing?.length || annotations.other?.length\n  );\n\n  return (\n    <div className=\"vf-stack vf-stack--400\">\n      <div style={{ width: '100%', textAlign: 'right' }}>\n        Powered by <a href=\"https://europepmc.org\">Europe PMC</a>.\n        <img\n          src={EuropePMCLogo}\n          style={{ height: '2em' }}\n          alt=\"Europe PMC logo\"\n        />\n      </div>\n      <p>\n        Through automated text-mining, many publications may have additional\n        metadata available in the form of{' '}\n        <ExtLink href=\"https://europepmc.org/Annotations\">Annotations</ExtLink>{' '}\n        from <ExtLink href=\"https://europepmc.org\">Europe PMC</ExtLink>. Any\n        Metagenomics-relevant annotations are shown here.\n      </p>\n      {!hasAnnotations && (\n        <p>\n          No metagenomics annotations were found on Europe PMC. Annotations from\n          other providers might be available on the{' '}\n          <ExtLink href={`https://europepmc.org/abstract/MED/${pubmedId}`}>\n            Europe PMC website\n          </ExtLink>\n          .\n        </p>\n      )}\n      {hasAnnotations && (\n        <>\n          <AnnotationSuperGroup\n            superGroup={annotations.sample_processing}\n            title=\"Sample processing\"\n          />\n          <AnnotationSuperGroup superGroup={annotations.other} title=\"Other\" />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport const PublicationAnnotationsPopupBadge: React.FC<\n  PublicationAnnotationProps\n> = ({ publicationId, pubmedId }) => {\n  const { data, loading, error } = useMGnifyData(\n    `publications/${publicationId}/europe_pmc_annotations`\n  );\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  if (loading) return <Loading size=\"small\" />;\n  if (error) return <FetchError error={error} />;\n  const annotations = data.data as unknown as Record<string, AnnotationGroup[]>;\n  const hasAnnotations = !!(\n    annotations?.sample_processing?.length || annotations.other?.length\n  );\n  if (!hasAnnotations) return null;\n  return (\n    <>\n      <EMGModal\n        isOpen={isModalOpen}\n        onRequestClose={() => setIsModalOpen(false)}\n        contentLabel={`Europe PMC Annotations for ${publicationId}`}\n      >\n        <h1>Annotations from Europe PMC</h1>\n        <PublicationAnnotations\n          publicationId={publicationId}\n          pubmedId={pubmedId}\n        />\n      </EMGModal>\n      <button\n        className=\"vf-button vf-button--link vf-button--sm\"\n        type=\"button\"\n        onClick={() => setIsModalOpen(true)}\n      >\n        <span className=\"vf-badge vf-badge--secondary\">\n          <i className=\"icon icon-common\" data-icon=\"&#xf1c0;\" /> meta\n        </span>{' '}\n        Show metadata from Europe PMC Annotations\n      </button>\n    </>\n  );\n};\n\nexport default PublicationAnnotations;\n","import React, { ReactChild, ReactChildren, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CoverImage from 'images/cover_main_publication.gif';\nimport publications from './publications.json';\n\nimport './style.css';\n\nconst trimAuthors = (text: string, maxAuthorsLength: number): string => {\n  const authorList = text.slice(0, maxAuthorsLength).split(',');\n  authorList.pop();\n  authorList.push(' et al.');\n  return authorList.join(',');\n};\n\nexport const Publication: React.FC<{\n  id?: string;\n  title: string;\n  journal: string;\n  year: number;\n  link: string;\n  doi: string;\n  authors: string;\n  maxAuthorsLength?: number;\n  children?: ReactChild | ReactChildren;\n}> = ({\n  id,\n  title,\n  journal,\n  year,\n  link,\n  doi,\n  authors,\n  maxAuthorsLength,\n  children,\n}) => {\n  const trimmedAuthors =\n    maxAuthorsLength && authors.length > maxAuthorsLength\n      ? trimAuthors(authors, maxAuthorsLength)\n      : authors;\n  const titleLink = id ? (\n    <Link to={`/publications/${id}`}>{title}</Link>\n  ) : (\n    <a href={link}>{title}</a>\n  );\n  return (\n    <section className=\"mg-pub\">\n      <span className=\"mg-pub-title\">{titleLink}</span>{' '}\n      <span className=\"mg-pub-journal\">{journal}</span> (\n      <span className=\"mg-pub-year\">{year}</span>){' '}\n      <span className=\"mg-pub-doi\">\n        doi:\n        <a title={title} href={link} className=\"mg-ext\">\n          {doi}\n        </a>\n      </span>\n      <div className=\"mg-pub-authors\">{trimmedAuthors}.</div>\n      {children}\n    </section>\n  );\n};\nexport const MainPublication: React.FC = () => {\n  const publication = publications.filter((pub) => pub.main)?.[0];\n  return (\n    <div className=\"embl-grid | vf-content\">\n      <div className=\"vf-section-header mg-pub-section-header\">\n        <img\n          alt=\"Cover of the journal\"\n          src={CoverImage}\n          className=\"mg-pub-cover\"\n        />\n      </div>\n      <div>\n        <p>To cite MGnify, please refer to the following publication:</p>\n        {publication && (\n          <Publication\n            id={publication.id}\n            title={publication.title}\n            journal={publication.journal}\n            year={publication.year}\n            link={publication.link}\n            doi={publication.doi}\n            authors={publication.authors}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\nconst Publications: React.FC = () => {\n  const [showMore, setShowMore] = useState(false);\n  return (\n    <section className=\"mg-pub-section\">\n      {publications\n        .filter((pub) => showMore || pub.recent)\n        .map((pub) => (\n          <article key={pub.doi}>\n            <Publication\n              id={pub.id}\n              title={pub.title}\n              journal={pub.journal}\n              year={pub.year}\n              link={pub.link}\n              doi={pub.doi}\n              authors={pub.authors}\n            />\n          </article>\n        ))}\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--sm\"\n          onClick={() => setShowMore(!showMore)}\n        >\n          {showMore ? 'Less' : 'More'} publications\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default Publications;\n","import React from 'react';\n\nconst Box: React.FC<{ label: string; theme?: string }> = ({\n  label,\n  theme = 'primary',\n  children,\n}) => (\n  <div className=\"vf-grid\">\n    <div className={`vf-box vf-box--easy vf-box-theme--${theme}`}>\n      <h5 className=\"vf-box__heading\">{label}</h5>\n      <div className=\"vf-box__text\">{children}</div>\n    </div>\n  </div>\n);\n\nexport default Box;\n","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOMServer from 'react-dom/server';\n\nimport MarkerClusterer from '@googlemaps/markerclustererplus';\n\nimport { MGnifyDatum } from 'hooks/data/useData';\n\nimport './style.css';\n\n// TODO: make the link play nicer with react-router\nconst MarkerPopup: React.FC<{ sample: MGnifyDatum }> = ({ sample }) => (\n  <div className=\"vf-box vf-box--easy\">\n    <h3 className=\"vf-box__heading\">\n      <a href={`../samples/${sample.id}`}>{sample.id}</a>\n      {/* <Link to=\"/search/studies\">{sample.id}</Link> */}\n    </h3>\n    <p className=\"vf-box__text\">{sample.attributes['sample-desc']}</p>\n  </div>\n);\nconst ClusterMarkerPopup: React.FC<{ accessions: string[] }> = ({\n  accessions,\n}) => (\n  <div className=\"vf-box vf-box--easy\">\n    <h3 className=\"vf-box__heading\">Samples on this geographical location</h3>\n    <ul className=\"vf-list\">\n      {accessions.map((accession) => (\n        <li ref={accession}>\n          <a href={`../samples/${accession}`}>{accession}</a>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\ntype MapProps = {\n  samples: Array<MGnifyDatum>;\n};\n\nconst SamplesMap: React.FC<MapProps> = ({ samples }) => {\n  const ref = useRef();\n  const [theMap, setTheMap] = useState(null);\n  const markerCluster = useRef<MarkerClusterer>(null);\n  const sampleInfoWindow = useRef(new google.maps.InfoWindow());\n  const clusterInfoWindow = useRef(new google.maps.InfoWindow());\n  const newBoundary = useRef(new google.maps.LatLngBounds());\n\n  const markers = useRef({});\n\n  useEffect(() => {\n    if (theMap === null) {\n      const tmpMap = new google.maps.Map(ref.current, {\n        maxZoom: 10,\n        minZoom: 2,\n      });\n      setTheMap(tmpMap);\n    }\n  }, [theMap]);\n  useEffect(() => {\n    if (theMap && samples) {\n      if (markerCluster.current) {\n        markerCluster.current.clearMarkers();\n      }\n\n      samples\n        .filter(({ id }) => !(id in markers.current))\n        .forEach((sample) => {\n          const position = {\n            lat: sample.attributes.latitude as number,\n            lng: sample.attributes.longitude as number,\n          };\n          const marker = new google.maps.Marker({\n            position,\n            title: sample.id,\n          });\n          newBoundary.current.extend(position);\n          marker.addListener('click', () => {\n            sampleInfoWindow.current.setContent(\n              ReactDOMServer.renderToString(<MarkerPopup sample={sample} />)\n            );\n            sampleInfoWindow.current.open(theMap, marker);\n          });\n          markers.current[sample.id] = marker;\n        });\n      markerCluster.current = new MarkerClusterer(\n        theMap,\n        Object.values(markers.current),\n        {\n          imagePath:\n            'https://raw.githubusercontent.com/googlemaps/js-markerclustererplus/master/images/m',\n          maxZoom: 10,\n        }\n      );\n\n      // for clusters in MAX Zoom and with less than 10 elements show a list\n      google.maps.event.addListener(\n        markerCluster.current,\n        'click',\n        // eslint-disable-next-line func-names\n        function (cluster) {\n          if (\n            // eslint-disable-next-line no-underscore-dangle, react/no-this-in-sfc\n            this.prevZoom_ + 1 <= this.getMaxZoom() ||\n            cluster.getSize() >= 10\n          ) {\n            return;\n          }\n          clusterInfoWindow.current.setPosition(cluster.getCenter());\n\n          clusterInfoWindow.current.setContent(\n            ReactDOMServer.renderToString(\n              <ClusterMarkerPopup\n                accessions={cluster.getMarkers().map((m) => m.getTitle())}\n              />\n            )\n          );\n\n          clusterInfoWindow.current.open(theMap);\n        }\n      );\n\n      theMap.fitBounds(newBoundary.current);\n    }\n  }, [theMap, samples]);\n\n  return <div ref={ref} id=\"map\" style={{ height: '100%' }} />;\n};\n\nexport default SamplesMap;\n","import React, { ReactElement } from 'react';\nimport { Status } from '@googlemaps/react-wrapper';\nimport { ErrorTypes } from 'hooks/data/useData';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\n\nconst render = (status: Status): ReactElement => {\n  if (status === Status.LOADING) return <Loading />;\n  if (status === Status.FAILURE)\n    return (\n      <FetchError\n        error={{\n          status: 200,\n          type: ErrorTypes.OtherError,\n          error: status,\n        }}\n      />\n    );\n  return null;\n};\n\nexport default render;\n","import React, { useMemo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Tab: React.FC = () => null;\n\ntype TabsProps = {\n  tabs: Array<{\n    label: string | React.ElementType;\n    to: string;\n  }>;\n  preservedQueryParameters?: string[];\n};\nconst Tabs: React.FC<TabsProps> = ({ tabs, preservedQueryParameters }) => {\n  const location = useLocation();\n  const queryParamString = useMemo(() => {\n    if (!preservedQueryParameters) return '';\n    const preserved = new URLSearchParams();\n    const existing = new URLSearchParams(location.search);\n    let anyPreserved = false;\n    preservedQueryParameters.forEach((queryParam) => {\n      if (existing.has(queryParam))\n        preserved.append(queryParam, existing.get(queryParam));\n      anyPreserved = true;\n    });\n    return anyPreserved ? `?${preserved.toString()}` : '';\n  }, [preservedQueryParameters, location.search]);\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label: Label, to }) => (\n          <li className=\"vf-tabs__item\" key={to}>\n            <Link\n              className={`vf-tabs__link ${\n                to === location.pathname ||\n                (to.startsWith('#') && to === location.hash) ||\n                (to === '#' && location.hash === '')\n                  ? 'is-active'\n                  : ''\n              }`}\n              to={to + queryParamString}\n            >\n              {typeof Label === 'string' ? Label : <Label />}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import { useLocation } from 'react-router-dom';\n\nconst useURLAccession = (): string | undefined => {\n  const location = useLocation();\n  let { pathname } = location;\n  if (pathname.trim().endsWith('/')) pathname = pathname.trim().slice(0, -1);\n  const parts = pathname.split('/');\n  return parts?.[parts.length - 1];\n};\n\nexport default useURLAccession;\n","import React, { useState, useContext } from 'react';\n\nimport { Wrapper } from '@googlemaps/react-wrapper';\n\nimport useSamplesProvider from 'hooks/data/useSamplesProvider';\n\nimport UserContext from 'pages/Login/UserContext';\nimport SamplesMap from 'components/UI/SamplesMap';\nimport render from '../render';\nimport '../style.css';\nimport InfoBanner from '../../InfoBanner';\n\nconst LIMIT = 200;\n\ntype LoadMoreSamplesProps = {\n  total: number;\n  limit: number;\n  handleRequest: () => void;\n};\n\nconst LoadMoreSamples: React.FC<LoadMoreSamplesProps> = ({\n  total,\n  limit,\n  handleRequest,\n}) =>\n  total > limit ? (\n    <div>\n      ⚠️ We are only loading the first {LIMIT} samples. Click{' '}\n      <button\n        type=\"button\"\n        className=\"vf-button vf-button--link mg-button-as-link\"\n        onClick={handleRequest}\n      >\n        HERE\n      </button>{' '}\n      to load them all.\n    </div>\n  ) : null;\ntype SamplesMapProps = {\n  study: string;\n};\nconst SamplesMapByStudy: React.FC<SamplesMapProps> = ({ study }) => {\n  const [limit, setLimit] = useState(LIMIT);\n  const { samples, total } = useSamplesProvider(study, limit);\n  const { config } = useContext(UserContext);\n\n  const samplesFiltered = samples.filter((sample) => {\n    try {\n      return (\n        Number(sample.attributes.longitude) !== 0.0 &&\n        Number(sample.attributes.latitude) !== 0.0\n      );\n    } catch {\n      return false;\n    }\n  });\n  if (samplesFiltered.length === 0) {\n    return (\n      <InfoBanner type=\"info\" title=\"Notice\">\n        None of the {total > limit ? 'loaded' : ''} samples have geolocation\n        co-ordinates.\n        <LoadMoreSamples\n          total={total}\n          limit={limit}\n          handleRequest={() => setLimit(total)}\n        />\n      </InfoBanner>\n    );\n  }\n\n  return (\n    <div className=\"mg-map-container\">\n      <div className=\"mg-map-wrapper\">\n        <Wrapper apiKey={config.googleMapsKey} render={render}>\n          <SamplesMap samples={samplesFiltered} />\n        </Wrapper>\n      </div>\n      {total && (\n        <div className=\"mg-map-progress\">\n          <progress max={total} value={samples.length} />\n          <LoadMoreSamples\n            total={total}\n            limit={limit}\n            handleRequest={() => setLimit(total)}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SamplesMapByStudy;\n","import { useState, useEffect } from 'react';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, ErrorFromFetch } from 'hooks/data/useData';\n\ntype SampleProviderResponse = {\n  samples: MGnifyDatum[];\n  total: number | null;\n  loading: boolean;\n  error: ErrorFromFetch;\n};\nconst useSamplesProvider = (\n  study: string,\n  limit?: number\n): SampleProviderResponse => {\n  const [page, setPage] = useState(1);\n  const [samples, setSamples] = useState<MGnifyDatum[]>([]);\n  const [total, setTotal] = useState(null);\n  const { data, isStale, loading, error } = useMGnifyData('samples', {\n    study_accession: study,\n    page,\n  });\n  useEffect(() => {\n    if (data?.data && !isStale && page === data?.meta?.pagination?.page) {\n      const aggregatedSamples = [...samples, ...(data.data as MGnifyDatum[])];\n      setSamples(aggregatedSamples);\n      const totalInResponse = data?.meta?.pagination?.count;\n      if (total !== totalInResponse && typeof totalInResponse === 'number') {\n        setTotal(totalInResponse);\n      }\n      if (data?.links?.next && aggregatedSamples.length < limit) {\n        setPage(page + 1);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, page, limit]);\n  useEffect(() => {\n    if (data?.links?.next && samples.length < limit) {\n      setPage(page + 1);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [limit]);\n\n  return { samples, total, loading, error };\n};\n\nexport default useSamplesProvider;\n","import ExtLink from 'components/UI/ExtLink';\nimport Box from 'components/UI/Box';\nimport React, { useContext } from 'react';\nimport UserContext from 'pages/Login/UserContext';\nimport { toast } from 'react-toastify';\nimport RLogo from 'images/r_logo.svg';\nimport PythonLogo from 'images/py_logo.svg';\n\ntype NotebookLinkProps = {\n  notebookPath: string;\n  notebookVars?: {\n    [varName: string]: string;\n  };\n  notebookLang: string;\n};\n\ntype ProgrammaticAccessBoxProps = {\n  apiPath: string;\n  entityLabel: string;\n  notebooks?: NotebookLinkProps[];\n};\n\nconst ProgrammaticAccessBox: React.FC<ProgrammaticAccessBoxProps> = ({\n  apiPath,\n  entityLabel,\n  notebooks,\n}) => {\n  const { config } = useContext(UserContext);\n  const sayCopied = () =>\n    toast.success('Copied API URL to clipboard!', {\n      position: 'bottom-left',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  const apiUrl = `${config.api}${apiPath}`;\n\n  return (\n    <Box label=\"Programmatic access\">\n      <div className=\"vf-stack\">\n        <div>\n          The{' '}\n          <ExtLink href={config.api} className=\"vf-navigation__link\">\n            API\n          </ExtLink>{' '}\n          endpoint for this {entityLabel} is{' '}\n          <pre className=\"vf-code-example__pre\" style={{ lineHeight: '3em' }}>\n            <a href={apiUrl} target=\"_blank\" rel=\"noreferrer noopener\">\n              {apiUrl}\n            </a>\n            <button\n              className=\"vf-button vf-button--link vf-button--sm\"\n              type=\"button\"\n              onClick={(e) => {\n                e.preventDefault();\n                navigator.clipboard.writeText(apiUrl);\n                sayCopied();\n              }}\n            >\n              <i className=\"icon icon-common icon-copy\" />\n            </button>\n          </pre>\n        </div>\n        <div>\n          <h5>Analysing data using R or Python</h5>\n          <p>\n            The{' '}\n            <ExtLink\n              href={`${config.jupyterLabURL}?jlpath=mgnify-examples/home.ipynb`}\n            >\n              MGnify Jupyter Lab\n            </ExtLink>{' '}\n            server hosts examples of data analysis using R and Python. These are\n            live examples that you can modify without downloading or installing\n            any software.\n          </p>\n          {notebooks.map((notebook) => {\n            let jlLink = `${config.jupyterLabURL}?jlpath=${notebook.notebookPath}`;\n            jlLink += Object.entries(notebook.notebookVars || {}).reduce(\n              (vars, [varName, varVal]) => `${vars}&jlvar_${varName}=${varVal}`,\n              ''\n            );\n            return (\n              <button\n                key={notebook.notebookPath}\n                className=\"vf-button vf-button--secondary vf-button--sm\"\n                type=\"button\"\n                onClick={() => window.open(jlLink, '_blank')}\n              >\n                {notebook.notebookLang === 'R' && (\n                  <img\n                    src={RLogo}\n                    alt=\"R Project logo\"\n                    style={{ width: '1em', marginRight: '0.2em' }}\n                  />\n                )}\n                {notebook.notebookLang === 'Python' && (\n                  <img\n                    src={PythonLogo}\n                    alt=\"Python Language logo\"\n                    style={{ width: '1em', marginRight: '0.2em' }}\n                  />\n                )}\n                {`Open ${entityLabel} in ${notebook.notebookLang}`}\n              </button>\n            );\n          })}\n          {!notebooks.length && (\n            <button\n              className=\"vf-button vf-button--secondary vf-button--sm\"\n              type=\"button\"\n              onClick={() => window.open(config.jupyterLabURL, '_blank')}\n            >\n              Open examples\n            </button>\n          )}\n        </div>\n      </div>\n    </Box>\n  );\n};\n\nexport default ProgrammaticAccessBox;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Publication } from 'components/Publications';\nimport AnalysesTable from 'components/Analysis/Analyses';\nimport Box from 'components/UI/Box';\nimport ExtLink from 'components/UI/ExtLink';\nimport SamplesMapByStudy from 'components/UI/SamplesMap/ByStudy';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport { getBiomeIcon } from 'utils/biomes';\nimport UserContext from 'pages/Login/UserContext';\nimport { PublicationAnnotationsPopupBadge } from 'components/Publications/EuropePMCAnnotations';\nimport ProgrammaticAccessBox from 'components/UI/ProgrammaticAccess';\n\ntype StudyOverviewProps = {\n  data: MGnifyDatum;\n  included: Array<unknown>;\n};\nconst StudyOverview: React.FC<StudyOverviewProps> = ({ data, included }) => {\n  const { config } = useContext(UserContext);\n  const lineage = data?.relationships?.biomes?.data?.[0]?.id || '';\n  const publications = included.filter(({ type }) => type === 'publications');\n  return (\n    <section>\n      <div className=\"vf-grid\">\n        <div>\n          <h4>\n            Last updated:{' '}\n            {new Date(\n              data?.attributes?.['last-update'] as string\n            ).toDateString()}\n          </h4>\n          <Box label=\"Classification\">\n            <div\n              className={`biome_icon icon_sm ${getBiomeIcon(lineage)}`}\n              style={{ float: 'initial' }}\n            />\n            <div>{lineage}</div>\n          </Box>\n          <Box label=\"Description\">{data.attributes['study-abstract']}</Box>\n        </div>\n        <SamplesMapByStudy study={data.id} />\n      </div>\n      <br />\n      <div className=\"mg-flex\">\n        {data?.relationships?.studies?.data?.length > 0 && (\n          <Box label=\"Related studies\">\n            <ul className=\"vf-list\">\n              {data.relationships.studies.data.map(({ id }) => (\n                <li key={id as string}>\n                  <Link to={`/studies/${id}`}>{id}</Link>\n                </li>\n              ))}\n            </ul>\n          </Box>\n        )}\n        <div>\n          {data?.attributes?.['is-public'] && (\n            <Box label=\"External links\">\n              <ul className=\"vf-list\">\n                <li>\n                  <ExtLink\n                    href={`${config.enaURL}/${data.attributes['secondary-accession']}`}\n                  >\n                    ENA website ({data.attributes['secondary-accession']})\n                  </ExtLink>\n                </li>\n              </ul>\n            </Box>\n          )}\n          {publications?.length > 0 && (\n            <Box label=\"Publications\">\n              <ul className=\"vf-list\">\n                {publications.map(({ attributes, id }) => (\n                  <li key={id as string}>\n                    <Publication\n                      id={id}\n                      title={attributes['pub-title']}\n                      journal={attributes['iso-journal']}\n                      year={attributes['published-year']}\n                      link={`http://dx.doi.org/${attributes.doi}`}\n                      doi={attributes.doi}\n                      authors={attributes.authors}\n                      maxAuthorsLength={70}\n                    >\n                      <PublicationAnnotationsPopupBadge\n                        publicationId={id}\n                        pubmedId={attributes['pubmed-id']}\n                      />\n                    </Publication>\n                  </li>\n                ))}\n              </ul>\n            </Box>\n          )}\n        </div>\n      </div>\n      <ProgrammaticAccessBox\n        apiPath={`studies/${data.id}`}\n        entityLabel=\"Study\"\n        notebooks={[\n          {\n            notebookPath:\n              'mgnify-examples/R%20Examples/Fetch%20Analyses%20metadata%20for%20a%20Study.ipynb',\n            notebookLang: 'R',\n            notebookVars: { MGYS: data.id },\n          },\n          {\n            notebookPath:\n              'mgnify-examples/Python%20Examples/Load%20Analyses%20for%20a%20MGnify%20Study.ipynb',\n            notebookLang: 'Python',\n            notebookVars: { MGYS: data.id },\n          },\n        ]}\n      />\n      <br />\n      <div>\n        <AnalysesTable rootEndpoint=\"studies\" />\n      </div>\n    </section>\n  );\n};\n\nexport default StudyOverview;\n","import React from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\n\ntype SummaryProps = {\n  accession: string;\n};\ntype DownloadResponseType = {\n  attributes: {\n    'group-type': string;\n    description: {\n      label: string;\n    };\n  };\n  relationships: {\n    pipeline: {\n      data: {\n        id: string;\n      };\n    };\n  };\n  links: {\n    self: string;\n  };\n};\nconst SummaryTab: React.FC<SummaryProps> = ({ accession }) => {\n  const { data, loading, error } = useMGnifyData(\n    `studies/${accession}/downloads`\n  );\n  const pipelines = {};\n  ((data?.data as DownloadResponseType[]) || []).forEach((download) => {\n    const pipeline = download?.relationships?.pipeline?.data?.id;\n    const group = download?.attributes?.['group-type'];\n    const label = download?.attributes?.description.label;\n    const link = download?.links?.self;\n    if (!pipelines[pipeline]) {\n      pipelines[pipeline] = {};\n    }\n    if (!pipelines[pipeline][group]) {\n      pipelines[pipeline][group] = [];\n    }\n    pipelines[pipeline][group].push({\n      label,\n      link,\n    });\n  });\n  const orderedPipelines = Object.entries(pipelines).sort(\n    ([a], [b]) => Number(b) - Number(a)\n  );\n  return (\n    <section>\n      <p>\n        In this section you can download the different results matrix files\n        summarising the study. Each downloadable file contains an aggregation of\n        the analysis results from the individual study&apos;s runs. To visualise\n        and download the analysis results for individual runs, please access\n        their respective pages.\n      </p>\n      {loading && <Loading />}\n      {error && <FetchError error={error} />}\n      <ul className=\"vf-list\">\n        {orderedPipelines.map(([pipeline, groups]) => (\n          <li key={pipeline} className=\"vf-list__item mg-list__item\">\n            <h4>Pipeline version: {pipeline}</h4>\n            <ul className=\"vf-list\">\n              {Object.entries(groups).map(([group, links]) => (\n                <li key={group} className=\"vf-list__item mg-list__item\">\n                  <h6>{group}</h6>\n                  <ul className=\"vf-list\">\n                    {links.map(({ label, link }) => (\n                      <li key={link} className=\"vf-list__item mg-list__item\">\n                        <a href={link} download>\n                          <span className=\"icon icon-common icon-download\" />{' '}\n                          {label}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n              ))}\n            </ul>\n            <hr />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default SummaryTab;\n","import React from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Tabs from 'components/UI/Tabs';\nimport Overview from 'components/Study/Overview';\nimport SummaryTab from 'components/Study/SummaryTab';\nimport RouteForHash from 'components/Nav/RouteForHash';\n\nconst tabs = [\n  { label: 'Overview', to: '#overview' },\n  { label: 'Analysis summary', to: '#analysis' },\n];\n\nconst StudyPage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`studies/${accession}`, {\n    include: 'publications',\n  });\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: studyData, included } = data as MGnifyResponseObj;\n  return (\n    <section className=\"vf-content\">\n      <h2>Study {accession}</h2>\n      <h3>{studyData.attributes['study-name']}</h3>\n      <Tabs tabs={tabs} />\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <RouteForHash hash=\"#overview\" isDefault>\n            <Overview data={studyData} included={included || []} />\n          </RouteForHash>\n          <RouteForHash hash=\"#analysis\">\n            <SummaryTab accession={accession} />\n          </RouteForHash>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default StudyPage;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n"],"names":["object","key","undefined","reEscapedHtml","reHasEscapedHtml","RegExp","source","rootEndpoint","accession","useURLAccession","queryParameters","Number","data","loading","error","isStale","downloadURL","useMGnifyData","include","page","ordering","page_size","Loading","size","FetchError","length","samples","included","filter","type","forEach","sample","id","description","attributes","biome","relationships","columns","Header","accessor","analysis","Cell","cell","className","value","style","float","to","string","test","replace","assembly","run","showPagination","meta","pagination","count","EMGTable","cols","Title","initialPage","initialPageSize","namespace","hash","isDefault","children","location","navigate","useEffect","AccordionElement","title","isOpen","setIsOpen","useState","onClick","xmlns","viewBox","d","AccordionContentPanel","AccordionList","titles","nestedLevel","map","i","AnnotationSuperGroup","superGroup","g","padding","annotations","anno","annotation_text","mentions","mention","section","split","ExtLink","href","tags","tag","uri","name","prefix","exact","postfix","PublicationAnnotations","publicationId","pubmedId","hasAnnotations","sample_processing","other","width","textAlign","src","height","alt","PublicationAnnotationsPopupBadge","isModalOpen","setIsModalOpen","EMGModal","onRequestClose","contentLabel","Publication","journal","year","link","doi","authors","maxAuthorsLength","trimmedAuthors","text","authorList","slice","pop","push","join","trimAuthors","titleLink","MainPublication","publication","pub","main","showMore","setShowMore","recent","label","theme","MarkerPopup","ClusterMarkerPopup","accessions","ref","useRef","theMap","setTheMap","markerCluster","sampleInfoWindow","google","maps","InfoWindow","clusterInfoWindow","newBoundary","LatLngBounds","markers","tmpMap","Map","current","maxZoom","minZoom","clearMarkers","position","lat","latitude","lng","longitude","marker","Marker","extend","addListener","setContent","open","Object","values","imagePath","event","cluster","this","prevZoom_","getMaxZoom","getSize","setPosition","getCenter","getMarkers","m","getTitle","fitBounds","status","Status","tabs","preservedQueryParameters","queryParamString","useMemo","preserved","URLSearchParams","existing","search","anyPreserved","queryParam","has","append","get","toString","Label","pathname","startsWith","trim","endsWith","parts","LoadMoreSamples","total","limit","handleRequest","study","setLimit","setPage","setSamples","setTotal","study_accession","aggregatedSamples","totalInResponse","links","next","config","useContext","UserContext","samplesFiltered","InfoBanner","Wrapper","apiKey","googleMapsKey","render","SamplesMap","max","apiPath","entityLabel","notebooks","apiUrl","api","Box","lineHeight","target","rel","e","preventDefault","navigator","clipboard","writeText","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","jupyterLabURL","notebook","jlLink","notebookPath","entries","notebookVars","reduce","vars","varName","varVal","window","notebookLang","marginRight","lineage","biomes","publications","Date","toDateString","studies","enaURL","ProgrammaticAccess","MGYS","Analyses","pipelines","download","pipeline","group","self","orderedPipelines","sort","a","b","groups","studyData","Tabs","RouteForHash","Overview","array","iteratee","index","result","Array","symbolProto","symbolToString","baseToString","call","isArray"],"sourceRoot":""}