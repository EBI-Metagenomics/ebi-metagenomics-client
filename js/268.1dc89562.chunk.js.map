{"version":3,"file":"js/268.1dc89562.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./node_modules/cookie/index.js","webpack://mgportalv2/./src/components/Publications/index.tsx","webpack://mgportalv2/./src/components/UI/ArrowForLink/index.tsx","webpack://mgportalv2/./src/components/UI/EMGModal/index.tsx","webpack://mgportalv2/./src/components/UI/OutterCard/index.tsx","webpack://mgportalv2/./src/components/UI/TextTruncated/index.tsx","webpack://mgportalv2/./src/components/UI/Tooltip/index.tsx","webpack://mgportalv2/./src/hooks/data/useEBISearchData/index.tsx","webpack://mgportalv2/./node_modules/universal-cookie/es6/utils.js","webpack://mgportalv2/./node_modules/universal-cookie/es6/Cookies.js","webpack://mgportalv2/./node_modules/universal-cookie/es6/index.js","webpack://mgportalv2/./src/hooks/data/useMgnifyEmail/index.tsx","webpack://mgportalv2/./src/components/UI/InnerCard/index.tsx","webpack://mgportalv2/./src/components/Home/SearchBy/DataType/index.tsx","webpack://mgportalv2/./src/components/Home/SearchBy/Biomes/index.tsx","webpack://mgportalv2/./src/components/Home/SearchBy/index.tsx","webpack://mgportalv2/./src/components/Home/Request/LatestStudies/index.tsx","webpack://mgportalv2/./src/components/Home/Request/MailForm/index.tsx","webpack://mgportalv2/./src/components/Home/Request/Private/index.tsx","webpack://mgportalv2/./src/components/Home/Request/index.tsx","webpack://mgportalv2/./src/components/Home/BlogExcerpts/index.tsx","webpack://mgportalv2/./src/hooks/data/useBlogData/index.tsx","webpack://mgportalv2/./src/components/Twitter/index.tsx","webpack://mgportalv2/./src/pages/Home/index.tsx"],"sourcesContent":["/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","import React, { ReactChild, ReactChildren, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CoverImage from 'images/cover_main_publication.gif';\nimport publications from './publications.json';\n\nimport './style.css';\n\nconst trimAuthors = (text: string, maxAuthorsLength: number): string => {\n  const authorList = text.slice(0, maxAuthorsLength).split(',');\n  authorList.pop();\n  authorList.push(' et al.');\n  return authorList.join(',');\n};\n\nexport const Publication: React.FC<{\n  id?: string;\n  title: string;\n  journal: string;\n  year: number;\n  link: string;\n  doi: string;\n  authors: string;\n  maxAuthorsLength?: number;\n  children?: ReactChild | ReactChildren;\n}> = ({\n  id,\n  title,\n  journal,\n  year,\n  link,\n  doi,\n  authors,\n  maxAuthorsLength,\n  children,\n}) => {\n  const trimmedAuthors =\n    maxAuthorsLength && authors.length > maxAuthorsLength\n      ? trimAuthors(authors, maxAuthorsLength)\n      : authors;\n  const titleLink = id ? (\n    <Link to={`/publications/${id}`}>{title}</Link>\n  ) : (\n    <a href={link}>{title}</a>\n  );\n  return (\n    <section className=\"mg-pub\">\n      <span className=\"mg-pub-title\">{titleLink}</span>{' '}\n      <span className=\"mg-pub-journal\">{journal}</span> (\n      <span className=\"mg-pub-year\">{year}</span>){' '}\n      <span className=\"mg-pub-doi\">\n        doi:\n        <a title={title} href={link} className=\"mg-ext\">\n          {doi}\n        </a>\n      </span>\n      <div className=\"mg-pub-authors\">{trimmedAuthors}.</div>\n      {children}\n    </section>\n  );\n};\nexport const MainPublication: React.FC = () => {\n  const publication = publications.filter((pub) => pub.main)?.[0];\n  return (\n    <div className=\"embl-grid | vf-content\">\n      <div className=\"vf-section-header mg-pub-section-header\">\n        <img\n          alt=\"Cover of the journal\"\n          src={CoverImage}\n          className=\"mg-pub-cover\"\n        />\n      </div>\n      <div>\n        <p>To cite MGnify, please refer to the following publication:</p>\n        {publication && (\n          <Publication\n            id={publication.id}\n            title={publication.title}\n            journal={publication.journal}\n            year={publication.year}\n            link={publication.link}\n            doi={publication.doi}\n            authors={publication.authors}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\nconst Publications: React.FC = () => {\n  const [showMore, setShowMore] = useState(false);\n  return (\n    <section className=\"mg-pub-section\">\n      {publications\n        .filter((pub) => showMore || pub.recent)\n        .map((pub) => (\n          <article key={pub.doi}>\n            <Publication\n              id={pub.id}\n              title={pub.title}\n              journal={pub.journal}\n              year={pub.year}\n              link={pub.link}\n              doi={pub.doi}\n              authors={pub.authors}\n            />\n          </article>\n        ))}\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--sm\"\n          onClick={() => setShowMore(!showMore)}\n        >\n          {showMore ? 'Less' : 'More'} publications\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default Publications;\n","/* eslint-disable max-len */\nimport React from 'react';\n\nconst ArrowForLink: React.FC = () => (\n  <svg\n    aria-hidden=\"true\"\n    className=\"vf-card__heading__icon | vf-icon vf-icon-arrow--inline-end\"\n    width=\"1em\"\n    height=\"1em\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    preserveAspectRatio=\"none\"\n  >\n    <path\n      d=\"M0 12c0 6.627 5.373 12 12 12s12-5.373 12-12S18.627 0 12 0C5.376.008.008 5.376 0 12zm13.707-5.209l4.5 4.5a1 1 0 010 1.414l-4.5 4.5a1 1 0 01-1.414-1.414l2.366-2.367a.25.25 0 00-.177-.424H6a1 1 0 010-2h8.482a.25.25 0 00.177-.427l-2.366-2.368a1 1 0 011.414-1.414z\"\n      fill=\"currentColor\"\n      fillRule=\"nonzero\"\n    />\n  </svg>\n);\n\nexport default ArrowForLink;\n","import React, { ReactChild, ReactChildren } from 'react';\n\nimport Modal from 'react-modal';\n\nimport './style.css';\n\nModal.setAppElement('#root');\n\nconst modalStyle = {\n  overlay: {\n    zIndex: 2000,\n    position: 'fixed',\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    maxHeight: 'calc(100vh - 5em)',\n    overflowY: 'auto',\n    width: '80vw',\n    height: '60vh',\n  },\n};\n\ntype ModalProps = {\n  isOpen: boolean;\n  onRequestClose: () => void;\n  contentLabel: string;\n  children: ReactChild | ReactChild[] | ReactChildren | ReactChildren[];\n};\nconst EMGModal: React.FC<ModalProps> = ({\n  isOpen,\n  onRequestClose,\n  contentLabel,\n  children,\n}) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      contentLabel={contentLabel}\n      style={modalStyle}\n    >\n      <div className=\"emg-modal-close\">\n        <button\n          onClick={onRequestClose}\n          className=\"vf-button vf-button--link\"\n          type=\"button\"\n        >\n          <i className=\"icon icon-common icon-times\" />\n        </button>\n      </div>\n      {children}\n    </Modal>\n  );\n};\n\nexport default EMGModal;\n","import React from 'react';\n\nconst OutterCard: React.FC<{\n  className?: string;\n  image?: string;\n  imageAltText?: string;\n}> = ({ children, className = '', image = null, imageAltText = '' }) => {\n  return (\n    <article\n      className={`vf-card vf-card--brand vf-card--bordered ${className}`}\n    >\n      {image && (\n        <img\n          src={image}\n          alt={imageAltText}\n          className=\"vf-card__image\"\n          loading=\"lazy\"\n        />\n      )}\n      <div className=\"vf-card__content | vf-stack vf-stack--400\">\n        {children}\n      </div>\n    </article>\n  );\n};\n\nexport default OutterCard;\n","import React from 'react';\nimport Tooltip from 'components/UI/Tooltip';\n\nconst TruncatedText: React.FC<{\n  maxLength?: number;\n  text: string;\n  withTooltip?: boolean;\n}> = ({ text, maxLength = 250, withTooltip = false }) => {\n  const isTruncated = text.length >= maxLength;\n  const truncated = (\n    <>\n      {text.substring(0, maxLength)}\n      {isTruncated && '...'}\n    </>\n  );\n  if (withTooltip && isTruncated)\n    return (\n      <Tooltip content={text}>\n        <span>{truncated}</span>\n      </Tooltip>\n    );\n  return truncated;\n};\n\nexport default TruncatedText;\n","import React from 'react';\nimport Tippy from '@tippyjs/react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'tippy.js/dist/tippy.css';\n\ntype TooltipProps = {\n  content: React.ReactNode;\n  children?: React.ReactNode;\n};\n\nconst Tooltip: React.FC<TooltipProps> = ({ content, children }) => (\n  <Tippy content={content}>{children as React.ReactElement}</Tippy>\n);\nexport default Tooltip;\n","import { useContext } from 'react';\nimport useData, { DataResponse, KeyValue } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\nconst getDownloadURL =\n  (api: string, endpoint: string, parameters: KeyValue) => (total: number) => {\n    const allParameters = {\n      ...parameters,\n      total,\n      facetcount: undefined,\n      facetsdepth: undefined,\n    };\n    return `${api}ebi-search-download/${endpoint}?${Object.entries(\n      allParameters\n    )\n      .filter(([, value]) => Boolean(value))\n      .map(([key, value]) => `${key}=${value}`)\n      .join('&')}`;\n  };\n\ninterface EBIDataResponse extends DataResponse {\n  data: KeyValue;\n  getDownloadURL?: (total: number) => string;\n}\n\nconst useEBISearchData: (\n  endpoint: string,\n  parameters?: KeyValue\n) => EBIDataResponse = (endpoint, parameters = {}) => {\n  const { config } = useContext(UserContext);\n  const defaultParameters = {\n    format: 'json',\n    start: 0,\n  };\n  const allParemeters = { ...defaultParameters, ...parameters };\n  const url = `${config.ebisearch}${endpoint}?${Object.entries(allParemeters)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')}`;\n  const data = useData([null, undefined].includes(endpoint) ? null : url);\n  const dataEBI = data as EBIDataResponse;\n  dataEBI.getDownloadURL = getDownloadURL(config.api, endpoint, allParemeters);\n  return dataEBI;\n};\n\nexport default useEBISearchData;\n","import * as cookie from 'cookie';\r\nexport function hasDocumentCookie() {\r\n    // Can we get/set cookies on document.cookie?\r\n    return typeof document === 'object' && typeof document.cookie === 'string';\r\n}\r\nexport function cleanCookies() {\r\n    document.cookie.split(';').forEach(function (c) {\r\n        document.cookie = c\r\n            .replace(/^ +/, '')\r\n            .replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');\r\n    });\r\n}\r\nexport function parseCookies(cookies, options) {\r\n    if (typeof cookies === 'string') {\r\n        return cookie.parse(cookies, options);\r\n    }\r\n    else if (typeof cookies === 'object' && cookies !== null) {\r\n        return cookies;\r\n    }\r\n    else {\r\n        return {};\r\n    }\r\n}\r\nexport function isParsingCookie(value, doNotParse) {\r\n    if (typeof doNotParse === 'undefined') {\r\n        // We guess if the cookie start with { or [, it has been serialized\r\n        doNotParse =\r\n            !value || (value[0] !== '{' && value[0] !== '[' && value[0] !== '\"');\r\n    }\r\n    return !doNotParse;\r\n}\r\nexport function readCookie(value, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var cleanValue = cleanupCookieValue(value);\r\n    if (isParsingCookie(cleanValue, options.doNotParse)) {\r\n        try {\r\n            return JSON.parse(cleanValue);\r\n        }\r\n        catch (e) {\r\n            // At least we tried\r\n        }\r\n    }\r\n    // Ignore clean value if we failed the deserialization\r\n    // It is not relevant anymore to trim those values\r\n    return value;\r\n}\r\nfunction cleanupCookieValue(value) {\r\n    // express prepend j: before serializing a cookie\r\n    if (value && value[0] === 'j' && value[1] === ':') {\r\n        return value.substr(2);\r\n    }\r\n    return value;\r\n}\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as cookie from 'cookie';\r\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils';\r\nvar Cookies = /** @class */ (function () {\r\n    function Cookies(cookies, options) {\r\n        var _this = this;\r\n        this.changeListeners = [];\r\n        this.HAS_DOCUMENT_COOKIE = false;\r\n        this.cookies = parseCookies(cookies, options);\r\n        new Promise(function () {\r\n            _this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\r\n        }).catch(function () { });\r\n    }\r\n    Cookies.prototype._updateBrowserValues = function (parseOptions) {\r\n        if (!this.HAS_DOCUMENT_COOKIE) {\r\n            return;\r\n        }\r\n        this.cookies = cookie.parse(document.cookie, parseOptions);\r\n    };\r\n    Cookies.prototype._emitChange = function (params) {\r\n        for (var i = 0; i < this.changeListeners.length; ++i) {\r\n            this.changeListeners[i](params);\r\n        }\r\n    };\r\n    Cookies.prototype.get = function (name, options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        return readCookie(this.cookies[name], options);\r\n    };\r\n    Cookies.prototype.getAll = function (options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        var result = {};\r\n        for (var name_1 in this.cookies) {\r\n            result[name_1] = readCookie(this.cookies[name_1], options);\r\n        }\r\n        return result;\r\n    };\r\n    Cookies.prototype.set = function (name, value, options) {\r\n        var _a;\r\n        if (typeof value === 'object') {\r\n            value = JSON.stringify(value);\r\n        }\r\n        this.cookies = __assign(__assign({}, this.cookies), (_a = {}, _a[name] = value, _a));\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, value, options);\r\n        }\r\n        this._emitChange({ name: name, value: value, options: options });\r\n    };\r\n    Cookies.prototype.remove = function (name, options) {\r\n        var finalOptions = (options = __assign(__assign({}, options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\r\n        this.cookies = __assign({}, this.cookies);\r\n        delete this.cookies[name];\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, '', finalOptions);\r\n        }\r\n        this._emitChange({ name: name, value: undefined, options: options });\r\n    };\r\n    Cookies.prototype.addChangeListener = function (callback) {\r\n        this.changeListeners.push(callback);\r\n    };\r\n    Cookies.prototype.removeChangeListener = function (callback) {\r\n        var idx = this.changeListeners.indexOf(callback);\r\n        if (idx >= 0) {\r\n            this.changeListeners.splice(idx, 1);\r\n        }\r\n    };\r\n    return Cookies;\r\n}());\r\nexport default Cookies;\r\n","import Cookies from './Cookies';\r\nexport default Cookies;\r\n","import Cookies from 'universal-cookie';\nimport { useContext } from 'react';\n\nimport useData, { HTMLDataResponse, ResponseFormat } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\nconst useMgnifyEmail: (\n  fromEmail: string,\n  subject: string,\n  body: string,\n  consent: boolean,\n  cc?: string\n) => HTMLDataResponse = (fromEmail, subject, body, consent, cc = '') => {\n  const { config } = useContext(UserContext);\n  const cookies = new Cookies();\n\n  const data = useData(\n    fromEmail ? `${config.api}utils/notify` : null,\n    ResponseFormat.HTML,\n    {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': cookies.get('csrftoken'),\n        'Content-Type': 'application/vnd.api+json',\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        data: {\n          type: 'notifies',\n          attributes: {\n            from_email: fromEmail,\n            cc,\n            subject,\n            message: body,\n            is_consent: consent || false,\n          },\n        },\n      }),\n    }\n  );\n  return data as HTMLDataResponse;\n};\n\nexport default useMgnifyEmail;\n","import React from 'react';\nimport ArrowForLink from 'components/UI/ArrowForLink';\nimport { Link } from 'react-router-dom';\n\ntype InnerCardProps = {\n  title: string;\n  label: string;\n  image?: string;\n  imageAltText?: string;\n  externalLink?: boolean;\n  to: string | (() => void);\n};\n\nconst InnerCard: React.FC<InnerCardProps> = ({\n  title,\n  label,\n  to,\n  image,\n  imageAltText,\n  externalLink = false,\n}) => {\n  return (\n    <article className=\"vf-card vf-card--striped vf-card--bordered\">\n      {image && (\n        <img\n          src={image}\n          alt={imageAltText}\n          className=\"vf-card__image\"\n          loading=\"lazy\"\n        />\n      )}\n      <div className=\"vf-card__content | vf-stack vf-stack--400\">\n        <h3 className=\"vf-card__heading\">\n          {externalLink && typeof to === 'string' && (\n            <a className=\"vf-card__link\" href={to}>\n              {title} <ArrowForLink />\n            </a>\n          )}\n          {!externalLink && typeof to === 'string' && (\n            <Link className=\"vf-card__link\" to={to}>\n              {title} <ArrowForLink />\n            </Link>\n          )}\n          {typeof to === 'function' && (\n            <button\n              type=\"button\"\n              className=\"mg-button-as-link vf-card__link\"\n              onClick={to}\n            >\n              {title} <ArrowForLink />\n            </button>\n          )}\n        </h3>\n        <p className=\"vf-card__text\">{label}</p>\n      </div>\n    </article>\n  );\n};\n\nexport default InnerCard;\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from 'components/UI/Loading';\nimport useEBISearchData from 'hooks/data/useEBISearchData';\nimport FetchError from 'components/UI/FetchError';\nimport './style.css';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\n\nconst DataAnalysesTypeRow: React.FC<{\n  type: string;\n  label: string;\n  link: string;\n}> = ({ type, label, link }) => {\n  const { data, loading, error } = useEBISearchData('metagenomics_analyses', {\n    query: 'domain_source:metagenomics_analyses',\n    size: 0,\n    fields: 'id,name,description,biome_name,metagenomics_samples',\n    facetcount: 0,\n    facetsdepth: 5,\n    facets: `experiment_type:${type}`,\n  });\n  if (loading)\n    return (\n      <tr>\n        <td>\n          <Loading size=\"small\" />\n        </td>\n      </tr>\n    );\n  if (error) return <FetchError error={error} />;\n  return (\n    <tr className=\"vf-table__row\">\n      <td className=\"vf-table__cell\" style={{ textAlign: 'right' }}>\n        <Link to={link} className=\"mg-link\">\n          {data?.hitCount || '...'}\n        </Link>\n      </td>\n      <td className=\"vf-table__cell\">\n        <Link to={link} className=\"mg-link\">\n          {label}\n        </Link>\n      </td>\n    </tr>\n  );\n};\nconst DataTypeRow: React.FC<{\n  label: string;\n  endpoint: string;\n  link: string;\n}> = ({ label, endpoint, link }) => {\n  const { data, loading, error } = useEBISearchData(endpoint, {\n    query: `domain_source:${endpoint}`,\n    size: 0,\n    fields: 'id,name,description,biome_name,metagenomics_samples',\n    facetcount: 0,\n    facetsdepth: 5,\n  });\n  if (error) return <FetchError error={error} />;\n  return (\n    <tr className=\"vf-table__row\">\n      <td className=\"vf-table__cell\" style={{ textAlign: 'right' }}>\n        {loading ? (\n          <Loading size=\"small\" />\n        ) : (\n          <Link to={link} className=\"mg-link\">\n            {data?.hitCount || '??'}\n          </Link>\n        )}\n      </td>\n      <td className=\"vf-table__cell\">\n        <Link to={link} className=\"mg-link\">\n          {label}\n        </Link>\n      </td>\n    </tr>\n  );\n};\n\nconst EMGAPIDataTypeRow: React.FC<{\n  aggregator: (data: unknown) => number;\n  labelRenderer: string | ((data: unknown) => string);\n  endpoint: string;\n  link: string;\n}> = ({ endpoint, link, aggregator, labelRenderer }) => {\n  const { data, loading, error } = useMGnifyData(endpoint);\n\n  const num = useMemo(() => {\n    return aggregator(data);\n  }, [data, aggregator]);\n\n  const label = useMemo(() => {\n    if (typeof labelRenderer === 'string') {\n      return labelRenderer;\n    }\n    return labelRenderer(data);\n  }, [data, labelRenderer]);\n\n  if (error) return <FetchError error={error} />;\n  return (\n    <tr className=\"vf-table__row\">\n      <td className=\"vf-table__cell\" style={{ textAlign: 'right' }}>\n        {loading ? (\n          <Loading size=\"small\" />\n        ) : (\n          <Link to={link} className=\"mg-link\">\n            {num}\n          </Link>\n        )}\n      </td>\n      <td className=\"vf-table__cell\">\n        <Link to={link} className=\"mg-link\">\n          {label}\n        </Link>\n      </td>\n    </tr>\n  );\n};\n\nconst DataType: React.FC = () => {\n  const analysesTypes = [\n    {\n      type: 'amplicon',\n      label: 'amplicon',\n      link: '/search/analyses?experiment_type=amplicon',\n    },\n    {\n      type: 'assembly',\n      label: 'assemblies',\n      link: '/search/analyses?experiment_type=assembly',\n    },\n    {\n      type: 'metabarcoding',\n      label: 'metabarcoding',\n      link: '/search/analyses?experiment_type=metabarcoding',\n    },\n    {\n      type: 'metagenomic',\n      label: 'metagenomes',\n      link: '/search/analyses?experiment_type=metagenomic',\n    },\n    {\n      type: 'metatranscriptomic',\n      label: 'metatranscriptomics',\n      link: '/search/analyses?experiment_type=metatranscriptomic',\n    },\n    {\n      type: 'long_reads_assembly',\n      label: 'long reads assemblies',\n      link: '/search/analyses?experiment_type=long_reads_assembly',\n    },\n  ];\n  const types = [\n    {\n      label: 'studies',\n      endpoint: 'metagenomics_projects',\n      link: '/search/studies',\n    },\n    {\n      label: 'samples',\n      endpoint: 'metagenomics_samples',\n      link: '/search/samples',\n    },\n    {\n      label: 'analyses',\n      endpoint: 'metagenomics_analyses',\n      link: '/search/analyses',\n    },\n  ];\n  const emgApiTypes = [\n    {\n      endpoint: 'genome-catalogues',\n      link: '/browse/genomes',\n      aggregator: (cataloguesData) =>\n        cataloguesData?.data\n          ?.map((cat) => cat.attributes['genome-count'])\n          ?.reduce((x, y) => x + y),\n      labelRenderer: (cataloguesData) =>\n        cataloguesData?.data\n          ? `genomes in ${cataloguesData?.data?.length} MAG catalogues`\n          : 'genomes',\n    },\n  ];\n\n  return (\n    <div className=\"vf-grid vf-grid__col-2\">\n      <div>\n        <h5>\n          <span className=\"icon icon-conceptual icon-c3\" data-icon=\"d\" />\n          &nbsp; Analysis types\n        </h5>\n        <table className=\"vf-table\">\n          <tbody className=\"vf-table__body\">\n            {analysesTypes.map(({ type, label, link }) => (\n              <DataAnalysesTypeRow\n                type={type}\n                label={label}\n                link={link}\n                key={type}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div>\n        <h5>\n          <span className=\"icon icon-functional icon-c9\" data-icon=\"U\" />\n          &nbsp; Public data\n        </h5>\n        <table className=\"vf-table\">\n          <tbody className=\"vf-table__body\">\n            {types.map(({ endpoint, label, link }) => (\n              <DataTypeRow\n                endpoint={endpoint}\n                label={label}\n                link={link}\n                key={endpoint}\n              />\n            ))}\n            {emgApiTypes.map(\n              ({ endpoint, labelRenderer, link, aggregator }) => (\n                <EMGAPIDataTypeRow\n                  endpoint={endpoint}\n                  labelRenderer={labelRenderer}\n                  link={link}\n                  aggregator={aggregator}\n                  key={endpoint}\n                />\n              )\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default DataType;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList } from 'hooks/data/useData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport { getBiomeIcon } from 'utils/biomes';\n\nconst Biome: React.FC<{ lineage: string; name: string; count: number }> = ({\n  lineage,\n  name,\n  count,\n}) => {\n  return (\n    <div>\n      <Link\n        to={`/browse/studies?biome=${lineage}`}\n        className=\"vf-grid vf-grid__col-1 mg-link\"\n        style={{ textAlign: 'center', gridRowGap: '0.2em' }}\n      >\n        <div>\n          <span\n            className={`biome_icon icon_sm ${getBiomeIcon(lineage)}`}\n            style={{ float: 'initial' }}\n          />\n        </div>\n        <div className=\"biome-text\">\n          {' '}\n          {name} ({count})\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nconst Biomes: React.FC = () => {\n  const { data, loading, error } = useMGnifyData('biomes/top10', {\n    ordering: '-samples_count',\n  });\n  if (loading) return <Loading />;\n  if (error) return <FetchError error={error} />;\n\n  return (\n    <section className=\"vf-stack vf-stack--200 search-by-biomes-section\">\n      <div className=\"vf-grid vf-grid__col-5\">\n        {(data as MGnifyResponseList).data.map(({ id, attributes }) => (\n          <Biome\n            key={id}\n            lineage={id}\n            name={attributes['biome-name'] as string}\n            count={attributes['samples-count'] as number}\n          />\n        ))}\n      </div>\n      <div className=\"mg-right\">\n        <Link to=\"/browse/biomes/\" className=\"vf-button vf-button--primary\">\n          View all biomes\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default Biomes;\n","import React, { useContext } from 'react';\nimport InnerCard from 'components/UI/InnerCard';\nimport OutterCard from 'components/UI/OutterCard';\nimport UserContext from 'pages/Login/UserContext';\nimport DataType from './DataType';\nimport Biomes from './Biomes';\n\nconst SearchBy: React.FC = () => {\n  const { config } = useContext(UserContext);\n  return (\n    <OutterCard className=\"search-by-section\">\n      <h3 className=\"vf-card__heading\">Search by</h3>\n      <div className=\"vf-grid\">\n        <InnerCard\n          title=\"Text search\"\n          label=\"Name, biome, or keyword\"\n          to=\"/search\"\n        />\n        <InnerCard\n          title=\"Sequence search\"\n          label=\"Sequence search\"\n          to={config.hmmer}\n          externalLink\n        />\n      </div>\n      <h3 className=\"vf-card__heading\">Or by data type</h3>\n      <DataType />\n      <h3 className=\"vf-card__heading\">Or by selected biomes</h3>\n      <Biomes />\n    </OutterCard>\n  );\n};\n\nexport default SearchBy;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport TruncatedText from 'components/UI/TextTruncated';\nimport { getBiomeIcon } from 'utils/biomes';\n\nimport './style.css';\n\ntype LatestStudyProps = {\n  id: string;\n  name: string;\n  abstract: string;\n  lineage?: string;\n};\nconst LatestStudy: React.FC<LatestStudyProps> = ({\n  id,\n  name,\n  abstract,\n  lineage,\n}) => {\n  const icon = getBiomeIcon(lineage);\n  return (\n    <article className=\"vf-summary vf-summary--has-image study\">\n      <span className={`biome_icon icon_xs ${icon}`} />\n      <h3 className=\"vf-summary__title\">\n        <Link to={`/studies/${id}`} className=\"vf-summary__link\">\n          {name}\n        </Link>\n      </h3>\n      <p className=\"vf-summary__text\">\n        <TruncatedText text={abstract} />\n      </p>\n      {/* <div className=\"vf-summary__text vf-grid\">\n        <Link to={`/studies/${id}`} className=\"vf-button vf-button--sm\">\n          View more\n        </Link>\n        <Link\n          to={`/studies/${id}#samples-section`}\n          className=\"vf-button vf-button--sm\"\n        >\n          Samples\n        </Link>\n      </div> */}\n    </article>\n  );\n};\n\nconst LatestStudies: React.FC = () => {\n  const { data, loading, error } = useMGnifyData('studies/recent');\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  return (\n    <section className=\"vf-stack vf-stack--200\">\n      <div className=\"vf-grid vf-grid__col-1 latest-studies-section\">\n        {(data.data as Array<MGnifyDatum>).map(\n          ({ id, attributes, relationships }) => (\n            <LatestStudy\n              key={id}\n              id={id}\n              name={attributes['study-name'] as string}\n              abstract={attributes['study-abstract'] as string}\n              lineage={relationships?.biomes?.data?.[0]?.id}\n            />\n          )\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default LatestStudies;\n","import React, { useContext, useEffect, useState } from 'react';\nimport Tooltip from 'components/UI/Tooltip';\nimport InfoBanner from 'components/UI/InfoBanner';\nimport UserContext, {\n  UserDetail,\n  getDetailsByWebin,\n  getEmailsFromDetails,\n} from 'pages/Login/UserContext';\nimport useMgnifyEmail from 'hooks/data/useMgnifyEmail';\nimport { ErrorTypes } from 'hooks/data/useData';\n\nconst accessionRegex = /((?:PRJEB|PRJNA|PRJDB|PRJDA|MGYS|ERP|SRP|DRP)\\d{5,})/;\n\nconst getRequestEmail = (\n  isPublic: boolean,\n  analysisType: string,\n  comments: string,\n  studyAcc: string,\n  username: string,\n  details: UserDetail\n) => {\n  const subject = `${\n    (isPublic ? 'Public ' : 'Private ') + analysisType\n  } request: ${studyAcc}`;\n  const body =\n    `Study accession: ${studyAcc};${\n      isPublic ? 'Public ' : 'Private '\n    } analysis.;` +\n    `Analysis type: ${analysisType} ;` +\n    `Requester name: ${details.attributes['first-name']} ${details.attributes.surname}.;` +\n    `Email: ${details.attributes['email-address']}.;` +\n    `Webin: ${username}.;` +\n    `Additional notes: ${comments}.;`;\n  return {\n    body,\n    subject,\n  };\n};\n\ntype MailFormProps = {\n  isPublic: boolean;\n};\n\nconst EMPTY_EMAIL = {\n  fromEmail: null,\n  subject: null,\n  body: null,\n  consent: null,\n};\nconst MailForm: React.FC<MailFormProps> = ({ isPublic }) => {\n  const [analysisType, setAnalysisType] = useState('Analysis');\n  const [accession, setAccession] = useState('');\n  const [comments, setComments] = useState('');\n  const [result, setResult] = useState('');\n  const [isAccessionOK, setAccessionOK] = useState(true);\n  const [completed, setCompleted] = useState(false);\n  const {\n    username,\n    details,\n    // setUser, setDetails, isAuthenticated, config\n  } = useContext(UserContext);\n  const [email, setEmail] = useState(EMPTY_EMAIL);\n  const {\n    data,\n    loading,\n    error: errorEmail,\n  } = useMgnifyEmail(email.fromEmail, email.subject, email.body, email.consent);\n  useEffect(() => {\n    if (email.fromEmail) {\n      if (!loading && data && !errorEmail) {\n        setResult(\n          `Analysis request for [${accession}] was succesfully submitted.`\n        );\n      } else if (errorEmail?.type !== ErrorTypes.NullURL) {\n        setResult(\n          'Failed to send analysis request, please try again or contact our helpdesk.'\n        );\n      }\n      setCompleted(true);\n    }\n  }, [data, loading, errorEmail, email.fromEmail, accession]);\n  useEffect(() => {\n    if (accession.length > 0 && !isAccessionOK)\n      setResult(\n        `Improperly formatted accession, format should be \n        MGYS, ERP, SRP, DRP, PRJEB, PRJNA, PRJDA, PRJDB \n        followed by a number.`\n      );\n    else setResult('');\n  }, [accession, isAccessionOK]);\n\n  const handleAccessionChange = (event) => {\n    setAccession(event.target.value);\n    setAccessionOK(accessionRegex.test(event.target.value));\n  };\n  const handleSubmit = () => {\n    const { body, subject } = getRequestEmail(\n      isPublic,\n      analysisType,\n      comments,\n      accession,\n      username,\n      getDetailsByWebin(details, username)\n    );\n    setEmail({\n      fromEmail: getEmailsFromDetails(details).join(','),\n      body,\n      subject,\n      consent: false,\n    });\n  };\n  const handleClear = () => {\n    setAnalysisType('Analysis');\n    setAccession('');\n    setComments('');\n    setResult('');\n    setAccessionOK(true);\n    setCompleted(false);\n    setEmail(EMPTY_EMAIL);\n  };\n  return (\n    <section>\n      {isPublic && <h2>Request an analysis of a public dataset</h2>}\n      <div className=\"vf-stack\">\n        {isPublic && (\n          <p>\n            Using this form, you can request analysis of a suitable publicly\n            available dataset, held within an INSDC database. Enter the study\n            accession below and we will prioritise it for analysis with our\n            pipeline.\n          </p>\n        )}\n        <div>\n          <label className=\"vf-text-heading--4\">\n            Study accession\n            <input\n              id=\"study-accession\"\n              name=\"study-accession\"\n              className=\"vf-form__input\"\n              type=\"text\"\n              pattern=\"study_accession\"\n              placeholder=\"MGYS###### / ERP###### / SRP###### / DRP###### / PRJ######\"\n              value={accession}\n              onChange={handleAccessionChange}\n              required\n            />\n          </label>\n        </div>\n        <div className=\"vf-grid\">\n          <div className=\"vf-stack\">\n            <label className=\"vf-text-heading--4\">\n              Analysis type{' '}\n              <Tooltip\n                content={`You can request either analysis of raw reads or assembly of the data \n                  (where suitable) prior to analysis. Note, assembly may not be feasible for \n                  all datasets and may take additional time, particularly for larger studies.`}\n              >\n                <sup>\n                  <span\n                    className=\"icon icon-common icon-info\"\n                    data-cy=\"public-help-tooltip\"\n                  />\n                </sup>\n              </Tooltip>\n            </label>\n            <div>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"analysis-type\"\n                  value=\"Analysis\"\n                  checked={analysisType === 'Analysis'}\n                  onChange={() => setAnalysisType('Analysis')}\n                />\n                Analysis only\n              </label>\n            </div>\n            <div>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"analysis-type\"\n                  value=\"Assembly+Analysis\"\n                  checked={analysisType === 'Assembly+Analysis'}\n                  onChange={() => setAnalysisType('Assembly+Analysis')}\n                />\n                Assembly and analysis\n              </label>\n            </div>\n          </div>\n          <div>\n            <label className=\"vf-text-heading--4\">\n              Comment / additional information\n              <input\n                value={comments}\n                onChange={(event) => setComments(event.target.value)}\n                type=\"text\"\n                className=\"vf-form__input\"\n                name=\"reason\"\n              />\n            </label>\n          </div>\n        </div>\n        <div>\n          <button\n            className=\"vf-button vf-button--primary mg-button vf-button--sm \"\n            type=\"button\"\n            onClick={handleSubmit}\n            disabled={accession.length === 0 || !isAccessionOK || completed}\n          >\n            Submit request\n          </button>\n          <button\n            id=\"clear-button\"\n            type=\"button\"\n            className=\"vf-button vf-button--sm vf-button--tertiary\"\n            onClick={handleClear}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n      {result.length > 0 && <InfoBanner>{result}</InfoBanner>}\n    </section>\n  );\n};\n\nexport default MailForm;\n","import React, { useState } from 'react';\nimport MailForm from '../MailForm';\n\nconst PrivateRequest: React.FC = () => {\n  const [confirmSubmitted, setConfirmSubmitted] = useState('');\n  return (\n    <section className=\"vf-stack vf-stack--400\">\n      <h2>Request an analysis of your data</h2>\n      <div className=\"vf-stack\">\n        <label className=\"vf-text-heading--4\">\n          Has your data already been submitted?{' '}\n        </label>\n        <div>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"dataSubmitted\"\n              value=\"Yes\"\n              checked={confirmSubmitted === 'Yes'}\n              onChange={() => setConfirmSubmitted('Yes')}\n            />\n            Yes\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"analysis-type\"\n              value=\"No\"\n              checked={confirmSubmitted === 'No'}\n              onChange={() => setConfirmSubmitted('No')}\n            />\n            No\n          </label>\n        </div>\n      </div>\n      <hr />\n      {confirmSubmitted === 'Yes' && (\n        <>\n          <MailForm isPublic={false} />\n          <p>\n            The analysis of your data will be held confidentially on our site\n            until the hold date expires.\n          </p>\n        </>\n      )}\n      {confirmSubmitted === 'No' && (\n        <div className=\"vf-stack\">\n          <p>\n            Please submit your data before requesting analysis as it must be\n            archived in the ENA for us to process it.\n          </p>\n          <div className=\"mg-right\">\n            <a\n              className=\"vf-button vf-button--primary vf-button--sm\"\n              href=\"https://www.ebi.ac.uk/ena/submit/sra/\"\n            >\n              <span className=\"icon icon-common icon-external-link-alt\" /> Go to\n              ENA submission page\n            </a>\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default PrivateRequest;\n","import React, { useContext, useState } from 'react';\nimport InnerCard from 'components/UI/InnerCard';\nimport OutterCard from 'components/UI/OutterCard';\nimport EMGModal from 'components/UI/EMGModal';\nimport UserContext from 'pages/Login/UserContext';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport { Link } from 'react-router-dom';\nimport LatestStudies from './LatestStudies';\nimport MailForm from './MailForm';\nimport PrivateRequest from './Private';\n\nconst SearchBy: React.FC = () => {\n  const [{ show }] = useQueryParametersState({\n    show: '',\n  });\n  const { isAuthenticated } = useContext(UserContext);\n  const [modal, setModal] = useState({\n    show:\n      isAuthenticated &&\n      ['public-request', 'private-request'].includes(show as string),\n    isPublic: show === 'public-request',\n  });\n  return (\n    <>\n      <EMGModal\n        isOpen={modal.show}\n        onRequestClose={() =>\n          setModal({\n            show: false,\n            isPublic: true,\n          })\n        }\n        contentLabel=\"Request Analysis\"\n      >\n        {modal.isPublic ? <MailForm isPublic /> : <PrivateRequest />}\n      </EMGModal>\n      <OutterCard className=\"request-by-section\">\n        <h3 className=\"vf-card__heading\">Request analysis of</h3>\n        <div className=\"vf-grid\">\n          <InnerCard\n            title=\"Submit and/or Request\"\n            label=\"Your data\"\n            to={\n              isAuthenticated\n                ? () => setModal({ show: true, isPublic: false })\n                : '/login?from=private-request'\n            }\n          />\n          <InnerCard\n            title=\"Request\"\n            label=\"A public dataset\"\n            to={\n              isAuthenticated\n                ? () => setModal({ show: true, isPublic: true })\n                : '/login?from=public-request'\n            }\n          />\n        </div>\n        <h3 className=\"vf-card__heading\">Latest studies</h3>\n        <LatestStudies />\n        <div className=\"mg-right\">\n          <Link to=\"/browse/studies/\" className=\"vf-button vf-button--primary\">\n            View all studies\n          </Link>\n        </div>\n      </OutterCard>\n    </>\n  );\n};\n\nexport default SearchBy;\n","import React, { useContext } from 'react';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport InnerCard from 'components/UI/InnerCard';\nimport OutterCard from 'components/UI/OutterCard';\nimport useBlogData from 'hooks/data/useBlogData';\n\nimport UserContext from 'pages/Login/UserContext';\n\nconst removeHTMLTags = (text: string): string => {\n  return text.replace(/&lt;.+?&gt;/g, '').trim();\n};\nconst BlogExcerpt: React.FC<{\n  title: string;\n  header: string;\n  image?: string;\n  excerpt: string;\n  url: string;\n}> = ({ title, header, image, excerpt, url }) => {\n  return (\n    <OutterCard className=\"blog\">\n      <h3 className=\"vf-card__heading\">{title}</h3>\n      <InnerCard\n        image={image}\n        title={header}\n        label={removeHTMLTags(excerpt)}\n        to={url}\n        externalLink\n      />\n    </OutterCard>\n  );\n};\n\nconst BlogExcerpts: React.FC = () => {\n  const { data, loading, error } = useBlogData('feed-first-of-each.json');\n  const { config } = useContext(UserContext);\n\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  return (\n    <div>\n      <div className=\"vf-grid vf-grid__col-2\">\n        {data.spotlight && (\n          <BlogExcerpt\n            title=\"Spotlight\"\n            header={data.spotlight.title}\n            image={data.spotlight.image}\n            excerpt={data.spotlight.excerpt}\n            url={data.spotlight.url}\n          />\n        )}\n        {data.tools && (\n          <BlogExcerpt\n            title=\"Tools\"\n            header={data.tools.title}\n            image={data.tools.image}\n            excerpt={data.tools.excerpt}\n            url={data.tools.url}\n          />\n        )}\n      </div>\n      <div className=\"mg-right\" style={{ marginTop: '0.2em' }}>\n        <a href={config.blog} className=\"vf-button vf-button--primary\">\n          View all articles\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogExcerpts;\n","import { useContext } from 'react';\nimport useData, { DataResponse, BlogResponse } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\ninterface BlogDataResponse extends DataResponse {\n  data: BlogResponse;\n}\n\nconst useBlogData: (resource: string) => BlogDataResponse = (resource) => {\n  const { config } = useContext(UserContext);\n  const data = useData(\n    [null, undefined].includes(resource) ? null : `${config.blog}${resource}`\n  );\n  return data as BlogDataResponse;\n};\n\nexport default useBlogData;\n","import React from 'react';\n\nconst Twitter: React.FC = () => (\n  <div className=\"mg-right vf-text-body vf-text-body--1\">\n    <a\n      href=\"https://twitter.com/MgnifyDB\"\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n      title=\"link to our twitter\"\n      style={{\n        color: 'rgb(63, 136, 222)',\n      }}\n    >\n      <span className=\"icon icon-common icon-twitter\" /> @MGnifyDB\n    </a>\n  </div>\n);\nexport default Twitter;\n","import React from 'react';\nimport SearchBy from 'components/Home/SearchBy';\nimport Request from 'components/Home/Request';\nimport BlogExcerpts from 'components/Home/BlogExcerpts';\nimport Publications, { MainPublication } from 'components/Publications';\nimport Twitter from 'components/Twitter';\n\nconst HomePage: React.FC = () => {\n  return (\n    <section className=\"vf-content vf-stack--600\">\n      <h2>Getting started</h2>\n      <div className=\"vf-grid vf-grid__col-2\">\n        <SearchBy />\n        <Request />\n      </div>\n      <hr />\n      <BlogExcerpts />\n      <h2>Latest publications</h2>\n      <Publications />\n      <h2>How to cite</h2>\n      <MainPublication />\n      <Twitter />\n    </section>\n  );\n};\n\nexport default HomePage;\n"],"names":["exports","str","options","TypeError","obj","opt","pairs","split","pairSplitRegExp","dec","decode","i","length","pair","eq_idx","indexOf","key","substr","trim","val","slice","undefined","tryDecode","name","enc","encode","fieldContentRegExp","test","value","maxAge","isNaN","Error","Math","floor","domain","path","expires","toUTCString","httpOnly","secure","sameSite","toLowerCase","decodeURIComponent","encodeURIComponent","e","Publication","id","title","journal","year","link","doi","authors","maxAuthorsLength","children","trimmedAuthors","text","authorList","pop","push","join","trimAuthors","titleLink","to","href","className","MainPublication","publication","pub","main","alt","src","showMore","setShowMore","useState","recent","map","type","onClick","width","height","xmlns","viewBox","preserveAspectRatio","d","fill","fillRule","modalStyle","overlay","zIndex","position","content","top","left","right","bottom","marginRight","transform","maxHeight","overflowY","isOpen","onRequestClose","contentLabel","style","image","imageAltText","loading","maxLength","withTooltip","isTruncated","truncated","substring","endpoint","parameters","config","useContext","allParemeters","format","start","url","ebisearch","Object","entries","dataEBI","includes","getDownloadURL","api","total","allParameters","facetcount","facetsdepth","filter","Boolean","readCookie","cleanValue","cleanupCookieValue","doNotParse","isParsingCookie","JSON","parse","__assign","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","Cookies","cookies","_this","changeListeners","HAS_DOCUMENT_COOKIE","cookie","parseCookies","Promise","document","catch","_updateBrowserValues","parseOptions","_emitChange","params","get","getAll","result","name_1","set","_a","stringify","remove","finalOptions","Date","addChangeListener","callback","removeChangeListener","idx","splice","fromEmail","subject","body","consent","cc","UserContext","useData","method","headers","credentials","data","attributes","from_email","message","is_consent","label","externalLink","ArrowForLink","DataAnalysesTypeRow","error","useEBISearchData","query","size","fields","facets","Loading","FetchError","textAlign","hitCount","DataTypeRow","EMGAPIDataTypeRow","aggregator","labelRenderer","useMGnifyData","num","useMemo","cataloguesData","cat","reduce","x","y","Biome","lineage","count","gridRowGap","float","ordering","OutterCard","hmmer","LatestStudy","abstract","icon","relationships","biomes","accessionRegex","EMPTY_EMAIL","isPublic","analysisType","setAnalysisType","accession","setAccession","comments","setComments","setResult","isAccessionOK","setAccessionOK","completed","setCompleted","username","details","email","setEmail","errorEmail","useMgnifyEmail","useEffect","pattern","placeholder","onChange","event","target","required","Tooltip","checked","studyAcc","surname","getRequestEmail","disabled","InfoBanner","confirmSubmitted","setConfirmSubmitted","show","isAuthenticated","modal","setModal","EMGModal","Private","BlogExcerpt","header","excerpt","replace","resource","blog","spotlight","tools","marginTop","rel","color","Request","Publications"],"sourceRoot":""}