{"version":3,"sources":["webpack://mgportalv2/./src/components/UI/EMGTable/index.tsx","webpack://mgportalv2/./src/components/UI/FetchError/index.tsx","webpack://mgportalv2/./src/hooks/useMGnifyData/index.tsx","webpack://mgportalv2/./src/hooks/useQueryParamState/index.tsx","webpack://mgportalv2/./src/pages/TextSearch/SearchQueryContext.tsx","webpack://mgportalv2/./src/components/Search/Filter/MultipleOption/index.tsx","webpack://mgportalv2/./src/components/Search/Filter/HierarchyMultipleOption/index.tsx","webpack://mgportalv2/./node_modules/lodash-es/now.js","webpack://mgportalv2/./node_modules/lodash-es/debounce.js","webpack://mgportalv2/./src/components/UI/Slider/index.tsx","webpack://mgportalv2/./src/components/UI/Switch/index.tsx","webpack://mgportalv2/./src/components/Search/Filter/Temperature/index.tsx","webpack://mgportalv2/./src/components/Search/Filter/Depth/index.tsx","webpack://mgportalv2/./src/components/Search/Tabs/index.tsx","webpack://mgportalv2/./src/components/Search/Filter/Text/index.tsx","webpack://mgportalv2/./src/components/Search/Table/index.tsx","webpack://mgportalv2/./src/pages/TextSearch/index.tsx"],"names":["PaginationButton","currentPageIndex","pageIndex","gotoPage","className","type","onClick","cols","data","title","fetchPage","onChangeSort","initialPage","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","canPreviousPage","canNextPage","pageCount","nextPage","previousPage","state","pageSize","sortBy","useTable","columns","initialState","meta","pagination","pages","manualPagination","manualSortBy","useSortBy","usePagination","paginationRanges","startingPages","adjacentPages","Math","max","page","length","push","endingPages","hasJumpFromStart","hasJumpToEnd","getPaginationRanges","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","disabled","paginationIndex","key","refreshPage","window","location","reload","error","style","backgroundColor","status","ErrorTypes","EmptyResponse","loading","NullURL","isStale","NewRequest","useData","url","setFullState","useState","setPartialState","updatedValues","prevState","useEffect","updateState","response","json","fetch","FetchError","ok","JSONError","NotOK","fetchData","useEBISearchData","endpoint","parameters","allParemeters","format","start","Object","entries","value","join","undefined","includes","useMGnifyData","keys","useBlogData","resource","getQueryStateFromURL","searchStr","serializers","innerState","parametersFromURL","URLSearchParams","forEach","parameter","serializer","String","get","useQueryParametersState","history","stateWithURL","useMemo","search","currentState","setCurrentState","newState","JSON","stringify","parametersToChange","changed","defaultValue","newValue","set","delete","toString","searchData","queryParameters","setQueryParameters","s","facetName","header","includeTextFilter","useContext","selected","setSelected","split","filter","Boolean","textFilter","setTextFilter","facetData","pathname","facets","f","id","Loading","handleSelection","event","checked","isChecked","target","newSelected","sort","size","placeholder","onChange","evt","facetValues","label","toLowerCase","count","name","htmlFor","HierarchyOption","optionChildren","depth","shouldExpand","isSelected","displayChildren","setDisplayChildren","marginLeft","childLabel","childValue","childCount","children","childChildren","v","some","startsWith","nativeMax","nativeMin","min","areEqual","s1","s2","isEnabled","selection","currentSelection","setCurrentSelection","debounced","useCallback","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","isInvoking","arguments","this","clearTimeout","toNumber","isObject","cancel","flush","Number","isOn","setValue","memo","enabled","setEnabled","temperature","range","setRange","newRange","tabs","to","replace","hitCount","searchTerms","setSearchTerms","query","dataFor","Header","accessor","study","Cell","fields","ENA_PROJECT","href","biome_name","centre_name","sample","METAGENOMICS_PROJECTS","pathnames","description","analysis","pipeline_version","METAGENOMICS_SAMPLES","experiment_type","fomattedData","ceil","EMGTable","getFacets","facetNames","formatToFacet","getSamplesQuery","names","biome","sequencing_method","location_name","disease_status","phenotype","organism","GO","INTERPRO","context","facetcount","facetsdepth","Text","path","HierarchyMultipleOption","MultipleOption","Temperature","Depth"],"mappings":"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","file":"js/311.656bf147.chunk.js","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React, { MouseEventHandler } from 'react';\nimport { Column, usePagination, useSortBy, useTable } from 'react-table';\n\ntype PaginationRanges = {\n  startingPages: number[];\n  endingPages: number[];\n  adjacentPages: number[];\n  hasJumpFromStart: boolean;\n  hasJumpToEnd: boolean;\n};\n\nfunction getPaginationRanges(\n  pageIndex: number,\n  pageCount: number\n): PaginationRanges {\n  const startingPages = pageCount > 1 ? [0, 1] : [0];\n\n  const adjacentPages = pageCount > 2 ? [Math.max(2, pageIndex - 2)] : [];\n  for (\n    let page = adjacentPages[0] + 1;\n    page < pageCount - 2 && adjacentPages.length < 5;\n    page += 1\n  ) {\n    adjacentPages.push(page);\n  }\n\n  let endingPages = [];\n  if (pageCount > 7) {\n    endingPages = [pageCount - 2, pageCount - 1];\n  } else if (pageCount > 6) {\n    endingPages = [pageCount - 1];\n  }\n\n  return {\n    startingPages,\n    endingPages,\n    adjacentPages,\n    hasJumpFromStart:\n      !!adjacentPages.length &&\n      adjacentPages[0] > startingPages[startingPages.length - 1] + 1,\n    hasJumpToEnd:\n      !!endingPages.length &&\n      !!adjacentPages.length &&\n      endingPages[0] > adjacentPages[adjacentPages.length - 1] + 1,\n  };\n}\n\ntype PaginationButtonProps = {\n  currentPageIndex: number;\n  pageIndex: number;\n  gotoPage: (pageIndex: number) => MouseEventHandler;\n};\n\nconst PaginationButton: React.FC<PaginationButtonProps> = ({\n  currentPageIndex,\n  pageIndex,\n  gotoPage,\n}) => {\n  if (currentPageIndex === pageIndex) {\n    return (\n      <li className=\"vf-pagination__item vf-pagination__item--is-active\">\n        <span className=\"vf-pagination__label\" aria-current=\"page\">\n          <span className=\"vf-u-sr-only\">Page </span>\n          {currentPageIndex + 1}\n        </span>\n      </li>\n    );\n  }\n  return (\n    <li className=\"vf-pagination__item\">\n      <button\n        type=\"button\"\n        onClick={() => gotoPage(pageIndex)}\n        className=\"vf-button vf-button--link vf-pagination__link\"\n      >\n        <span className=\"vf-u-sr-only\"> page</span>\n        {pageIndex + 1}\n      </button>\n    </li>\n  );\n};\n\ntype EMGTableProps = {\n  cols: Column[];\n  data: {\n    data: Record<string, any>[];\n    meta: Record<string, any>;\n    links?: Record<string, any>;\n  };\n  title?: string;\n  fetchPage?: (pageIndex: number, pageSize: number) => void;\n  onChangeSort?: (columnId: string) => void;\n  initialPage?: number;\n  className?: string;\n};\n\nconst EMGTable: React.FC<EMGTableProps> = ({\n  cols,\n  data,\n  title,\n  fetchPage,\n  onChangeSort,\n  initialPage = 0,\n  className = '',\n}) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    state: { pageIndex, pageSize, sortBy },\n  } = useTable(\n    {\n      columns: cols,\n      data: data.data,\n      initialState: { pageIndex: initialPage },\n      pageCount: data.meta.pagination.pages,\n      manualPagination: true,\n      manualSortBy: true,\n    },\n    useSortBy,\n    usePagination\n  );\n\n  React.useEffect(() => {\n    if (fetchPage) {\n      fetchPage(pageIndex, pageSize);\n    }\n  }, [fetchPage, pageIndex, pageSize]);\n\n  React.useEffect(() => {\n    if (onChangeSort) {\n      onChangeSort(sortBy);\n    }\n  }, [onChangeSort, sortBy]);\n\n  const paginationRanges = React.useMemo(\n    () => getPaginationRanges(pageIndex, pageCount),\n    [pageIndex, pageCount]\n  );\n\n  return (\n    <section>\n      <table {...getTableProps} className={`vf-table--striped ${className}`}>\n        <caption className=\"vf-table__caption\">{title}</caption>\n        <thead className=\"vf-table__header\">\n          {headerGroups.map((headerGroup) => (\n            <tr\n              {...headerGroup.getHeaderGroupProps()}\n              className=\"vf-table__row\"\n            >\n              {headerGroup.headers.map((column) => (\n                <th\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  className=\"vf-table__heading\"\n                >\n                  {column.render('Header')}\n                  {onChangeSort && (\n                    <>\n                      &nbsp;\n                      <span>\n                        {/* eslint-disable-next-line no-nested-ternary */}\n                        {column.isSorted ? (\n                          column.isSortedDesc ? (\n                            <i className=\"icon icon-common icon-sort-down\" />\n                          ) : (\n                            <i className=\"icon icon-common icon-sort-up\" />\n                          )\n                        ) : (\n                          <i className=\"icon icon-common icon-sort\" />\n                        )}\n                      </span>\n                    </>\n                  )}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()} className=\"vf-table__body\">\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()} className=\"vf-table__row\">\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()} className=\"vf-table__cell\">\n                      {cell.render('Cell')}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {fetchPage && (\n        <nav className=\"vf-pagination\" aria-label=\"Pagination\">\n          <ul className=\"vf-pagination__list\">\n            <li className=\"vf-pagination__item vf-pagination__item--previous-page\">\n              <button\n                disabled={!canPreviousPage}\n                type=\"button\"\n                onClick={previousPage}\n                className=\"vf-button vf-button--link vf-pagination__link\"\n              >\n                Previous<span className=\"vf-u-sr-only\"> page</span>\n              </button>\n            </li>\n\n            {paginationRanges.startingPages.map((paginationIndex) => (\n              <PaginationButton\n                key={paginationIndex}\n                currentPageIndex={pageIndex}\n                pageIndex={paginationIndex}\n                gotoPage={gotoPage}\n              />\n            ))}\n\n            {paginationRanges.hasJumpFromStart && (\n              <li className=\"vf-pagination__item\">\n                <span className=\"vf-pagination__label\">...</span>\n              </li>\n            )}\n\n            {paginationRanges.adjacentPages.map((paginationIndex) => (\n              <PaginationButton\n                key={paginationIndex}\n                currentPageIndex={pageIndex}\n                pageIndex={paginationIndex}\n                gotoPage={gotoPage}\n              />\n            ))}\n\n            {paginationRanges.hasJumpToEnd && (\n              <li className=\"vf-pagination__item\">\n                <span className=\"vf-pagination__label\">...</span>\n              </li>\n            )}\n\n            {paginationRanges.endingPages.map((paginationIndex) => (\n              <PaginationButton\n                key={paginationIndex}\n                currentPageIndex={pageIndex}\n                pageIndex={paginationIndex}\n                gotoPage={gotoPage}\n              />\n            ))}\n\n            <li className=\"vf-pagination__item vf-pagination__item--next-page\">\n              <button\n                disabled={!canNextPage}\n                type=\"button\"\n                onClick={nextPage}\n                className=\"vf-button vf-button--link vf-pagination__link\"\n              >\n                Next<span className=\"vf-u-sr-only\"> page</span>\n              </button>\n            </li>\n          </ul>\n        </nav>\n      )}\n    </section>\n  );\n};\n\nexport default EMGTable;\n","import React from 'react';\nimport { ErrorFromFetch, ErrorTypes } from 'hooks/useMGnifyData';\n\nconst refreshPage = (): void => {\n  window.location.reload();\n};\n\nconst FetchError: React.FC<{ error: ErrorFromFetch }> = ({ error }) => {\n  if (!error || error.type === ErrorTypes.NullURL) return null;\n  return (\n    <div\n      className=\"vf-box vf-box-theme--primary vf-box--easy\"\n      style={{\n        backgroundColor: 'lemonchiffon',\n      }}\n    >\n      <h3 className=\"vf-box__heading\">\n        <span className=\"icon icon-common icon-exclamation-triangle\" /> Error\n        Fetching Data\n      </h3>\n      <p className=\"vf-box__text\">\n        {error?.type === ErrorTypes.FetchError &&\n          `There were problems with the request. [${error.error}]`}\n        {error?.type === ErrorTypes.NotOK &&\n          `The response from the server was not OK [Status: ${error.status}].`}\n        {error?.type === ErrorTypes.JSONError &&\n          `The recovered resource didn't follow the expected format [${error.error}].`}\n      </p>\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--tertiary vf-button--sm \"\n          onClick={refreshPage}\n        >\n          Refresh\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FetchError;\n","import { useState, useEffect } from 'react';\nimport config from 'config.json';\n\ntype KeyValue = {\n  [key: string]: string | number | Record<string, unknown> | [];\n};\ntype MGnifyResponse = {\n  data: Array<{\n    attributes: KeyValue;\n    id: string;\n    links: KeyValue;\n    type: string;\n    relationships: {\n      biomes?: {\n        data?: Array<{\n          id: string;\n        }>;\n      };\n      [key: string]: unknown;\n    };\n  }>;\n  links: {\n    first?: string;\n    last?: string;\n    next?: string;\n    prev?: string;\n  };\n  meta: {\n    pagination: {\n      count: number;\n      page: number;\n      pages: number;\n    };\n  };\n};\n\ntype BlogResponse = {\n  [category: string]: {\n    title: string;\n    url: string;\n    image: string;\n    excerpt: string;\n    category: string;\n    published: string;\n    emg: {\n      text: string;\n      url: string;\n    };\n  };\n};\n\nexport type ErrorFromFetch = {\n  status?: number;\n  response?: Promise<Response>;\n  type: ErrorTypes;\n  error?: unknown;\n};\nexport enum ErrorTypes {\n  FetchError,\n  NotOK,\n  JSONError,\n  NullURL,\n}\n\ninterface DataResponse {\n  data: null | KeyValue | MGnifyResponse | BlogResponse;\n  error: ErrorFromFetch | null;\n  loading: boolean;\n  isStale: boolean;\n}\n\ninterface EBIDataResponse extends DataResponse {\n  data: KeyValue;\n}\ninterface MgnifyDataResponse extends DataResponse {\n  data: MGnifyResponse;\n}\ninterface BlogDataResponse extends DataResponse {\n  data: BlogResponse;\n}\n\nconst EmptyResponse = {\n  data: null,\n  loading: false,\n  error: {\n    type: ErrorTypes.NullURL,\n    error: 'The queried URL is null',\n  },\n  isStale: false,\n};\nconst NewRequest = {\n  data: null,\n  loading: true,\n  error: null,\n  isStale: false,\n};\n\nasync function fetchData(\n  url: string,\n  updateState: (DataResponse) => void\n): Promise<void> {\n  let response = null;\n  let json = null;\n  try {\n    response = await fetch(url);\n  } catch (error) {\n    updateState({\n      error: {\n        error,\n        type: ErrorTypes.FetchError,\n      },\n      loading: false,\n      isStale: false,\n    });\n    return;\n  }\n  if (!response.ok) {\n    updateState({\n      error: {\n        status: response.status,\n        response,\n        type: ErrorTypes.NotOK,\n      },\n      loading: false,\n      isStale: false,\n    });\n    return;\n  }\n  try {\n    json = await response.json();\n  } catch (error) {\n    updateState({\n      error: {\n        error,\n        type: ErrorTypes.JSONError,\n      },\n      loading: false,\n      isStale: false,\n    });\n    return;\n  }\n\n  updateState({ data: json, loading: false, error: null, isStale: false });\n}\n\nconst useData: (url: string) => DataResponse = (url) => {\n  const [state, setFullState] = useState(NewRequest);\n  const setPartialState = (updatedValues): void => {\n    setFullState((prevState) => ({\n      ...prevState,\n      ...updatedValues,\n    }));\n  };\n  useEffect(() => {\n    // If the URL is null don't do the fetch and return the empty response\n    if (!url) {\n      setFullState(EmptyResponse);\n      return;\n    }\n    // TODO: Add support for stale data\n    setPartialState({\n      loading: true,\n      isStale: true,\n    });\n    fetchData(url, setPartialState);\n  }, [url]);\n  return state;\n};\n\nexport const useEBISearchData: (\n  endpoint: string,\n  parameters?: KeyValue\n) => EBIDataResponse = (endpoint, parameters = {}) => {\n  const defaultParameters = {\n    format: 'json',\n    start: 0,\n  };\n  const allParemeters = { ...defaultParameters, ...parameters };\n  const url = `${config.ebisearch}${endpoint}?${Object.entries(allParemeters)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')}`;\n  const data = useData([null, undefined].includes(endpoint) ? null : url);\n  return data as EBIDataResponse;\n};\n\nexport const useMGnifyData: (\n  endpoint: string,\n  parameters?: KeyValue\n) => MgnifyDataResponse = (endpoint, parameters = {}) => {\n  const defaultParameters = {};\n  const allParemeters = { ...defaultParameters, ...parameters };\n  let url = `${config.api}${endpoint}`;\n  if (Object.keys(allParemeters).length > 0)\n    url += `?${Object.entries(allParemeters)\n      .map(([key, value]) => `${key}=${value}`)\n      .join('&')}`;\n  const data = useData([null, undefined].includes(endpoint) ? null : url);\n  return data as MgnifyDataResponse;\n};\n\nexport const useBlogData: (resource: string) => BlogDataResponse = (\n  resource\n) => {\n  const data = useData(\n    [null, undefined].includes(resource) ? null : `${config.blog}${resource}`\n  );\n  return data as BlogDataResponse;\n};\n\nexport default useData;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nconst useQueryParamState: <S>(\n  parameter: string,\n  defaultValue: S\n) => [string | S, (s: S) => void] = (parameter, defaultValue) => {\n  const location = useLocation();\n  const history = useHistory();\n  const parameters = new URLSearchParams(location.search);\n  const [value, setValue] = useState(parameters.get(parameter) || defaultValue);\n\n  // The Query parameters have changed, so we need to update the value if needed.\n  useEffect(() => {\n    const changedParameters = new URLSearchParams(location.search);\n    if (changedParameters.get(parameter) === value) return;\n    setValue(changedParameters.get(parameter) || defaultValue);\n  }, [location.search, defaultValue, parameter, value]);\n\n  // Pushes the new URL(including the new parameter value) into history\n  const setParameterInURL: (newValue: unknown) => void = (newValue) => {\n    if (String(newValue) === String(value)) return;\n    const parametersToChange = new URLSearchParams(location.search);\n    parametersToChange.set(parameter, String(newValue));\n    // The default value is not displayed in the URL\n    if (newValue === defaultValue) {\n      parametersToChange.delete(parameter);\n    }\n    location.search = parametersToChange.toString();\n    history.push(location);\n  };\n\n  return [value, setParameterInURL];\n};\n\nexport type QueryState = {\n  [parameter: string]: unknown;\n};\ntype SerializersType = {\n  [parameter: string]: (str: string) => unknown;\n};\n\nconst getQueryStateFromURL = (\n  state: QueryState,\n  searchStr: string,\n  serializers: SerializersType\n): QueryState => {\n  const innerState = {};\n  const parametersFromURL = new URLSearchParams(searchStr);\n  Object.entries(state).forEach(([parameter, value]) => {\n    const serializer = serializers[parameter] || String;\n    innerState[parameter] = serializer(\n      parametersFromURL.get(parameter) || (value as string)\n    );\n  });\n  return innerState;\n};\nexport const useQueryParametersState: (\n  initialState: QueryState,\n  serializers?: SerializersType\n) => [QueryState, (s: QueryState) => void] = (\n  initialState,\n  serializers = {}\n) => {\n  const location = useLocation();\n  const history = useHistory();\n  const stateWithURL = useMemo(\n    () => getQueryStateFromURL(initialState, location.search, serializers),\n    [initialState, location.search, serializers]\n  );\n  const [currentState, setCurrentState] = useState(stateWithURL);\n\n  // The Query parameters have changed, so we need to update the value if needed.\n  useEffect(() => {\n    const newState = getQueryStateFromURL(\n      initialState,\n      location.search,\n      serializers\n    );\n    if (JSON.stringify(newState) === JSON.stringify(currentState)) return;\n    setCurrentState(newState);\n  }, [location.search, currentState, initialState, serializers]);\n\n  // Pushes the new URL(including the new parameter value) into history\n  const setParametersInURL: (newState: QueryState) => void = (newState) => {\n    if (JSON.stringify(newState) === JSON.stringify(currentState)) return;\n    const parametersToChange = new URLSearchParams(location.search);\n\n    let changed = false;\n    Object.entries(initialState).forEach(([parameter, defaultValue]) => {\n      const newValue =\n        parameter in newState ? newState[parameter] : defaultValue;\n      if (newState[parameter] !== currentState[parameter]) {\n        parametersToChange.set(parameter, String(newValue));\n        if (newValue === defaultValue) {\n          parametersToChange.delete(parameter);\n        }\n        changed = true;\n      }\n    });\n\n    // The default value is not displayed in the URL\n    if (changed) {\n      location.search = parametersToChange.toString();\n      history.push(location);\n    }\n  };\n\n  return [currentState, setParametersInURL];\n};\n\nexport default useQueryParamState;\n","import React from 'react';\nimport { QueryState } from 'hooks/useQueryParamState';\n\nconst SearchQueryContext = React.createContext({\n  searchData: {\n    '/search/studies': {\n      data: null,\n      loading: false,\n      error: null,\n    },\n    '/search/samples': {\n      data: null,\n      loading: false,\n      error: null,\n    },\n    '/search/analyses': {\n      data: null,\n      loading: false,\n      error: null,\n    },\n  },\n  queryParameters: {} as QueryState,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-unused-vars\n  setQueryParameters: (s: QueryState) => {},\n});\n\nexport default SearchQueryContext;\n","import React, { useContext, useMemo, useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SearchQueryContext from 'pages/TextSearch/SearchQueryContext';\nimport Loading from 'components/UI/Loading';\nimport 'styles/filters.css';\n\ntype MultipleOptionProps = {\n  facetName: string;\n  header: string;\n  includeTextFilter?: boolean;\n};\nconst MultipleOptionFilter: React.FC<MultipleOptionProps> = ({\n  facetName,\n  header,\n  includeTextFilter = false,\n}) => {\n  const location = useLocation();\n  const { searchData, queryParameters, setQueryParameters } =\n    useContext(SearchQueryContext);\n  const [selected, setSelected] = useState(\n    (queryParameters[facetName] as string).split(',').filter(Boolean)\n  );\n  const [textFilter, setTextFilter] = useState('');\n  useEffect(() => {\n    setSelected(\n      (queryParameters[facetName] as string).split(',').filter(Boolean)\n    );\n  }, [queryParameters, facetName]);\n\n  const facetData = useMemo(\n    () =>\n      (searchData?.[location.pathname]?.data?.facets || []).filter(\n        (f) => f.id === facetName\n      )?.[0],\n    [location.pathname, searchData, facetName]\n  );\n\n  if (\n    searchData?.[location.pathname].loading &&\n    !searchData?.[location.pathname].isStale\n  )\n    return <Loading />;\n  if (searchData?.[location.pathname].error) return null;\n\n  if (!facetData) return null;\n  const handleSelection = (event): void => {\n    const { value, checked: isChecked } = event.target as HTMLInputElement;\n    let newSelected = [...selected];\n    if (isChecked && !selected.includes(value)) {\n      newSelected.push(value);\n    } else {\n      newSelected = selected.filter((s) => s !== value);\n    }\n    setQueryParameters({\n      ...queryParameters,\n      [facetName]: newSelected.sort().join(','),\n    });\n  };\n\n  return (\n    <fieldset className=\"vf-form__fieldset vf-stack vf-stack--400\">\n      <legend className=\"vf-form__legend\">\n        {header}\n        {searchData?.[location.pathname].loading &&\n          searchData?.[location.pathname].isStale && <Loading size=\"small\" />}\n      </legend>\n      {includeTextFilter && (\n        <input\n          type=\"text\"\n          placeholder=\"Filter the list\"\n          className=\"vf-form__input\"\n          value={textFilter}\n          onChange={(evt) => setTextFilter(evt.target.value)}\n        />\n      )}\n      {facetData.facetValues\n        .filter(\n          ({ label, value }) =>\n            textFilter === '' ||\n            label.toLowerCase().includes(textFilter.toLowerCase()) ||\n            value.toLowerCase().includes(textFilter.toLowerCase())\n        )\n        .map(({ label, value, count }) => (\n          <div className=\"vf-form__item vf-form__item--checkbox\" key={value}>\n            <input\n              type=\"checkbox\"\n              name={value}\n              value={value}\n              id={value}\n              className=\"vf-form__checkbox\"\n              onChange={handleSelection}\n              checked={selected.includes(value)}\n            />\n            <label className=\"vf-form__label\" htmlFor={value}>\n              <span className=\"mg-filter-checkbox-label\">\n                {label} <span className=\"mg-number\">{count}</span>\n              </span>\n            </label>\n          </div>\n        ))}\n    </fieldset>\n  );\n};\nexport default MultipleOptionFilter;\n","import React, { useContext, useMemo, useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SearchQueryContext from 'pages/TextSearch/SearchQueryContext';\nimport Loading from 'components/UI/Loading';\nimport './style.css';\nimport 'styles/filters.css';\n\ninterface OptionDataType {\n  value: string;\n  label: string;\n  count: number;\n  optionChildren?: OptionDataType[];\n  children?: OptionDataType[];\n}\ninterface HierarchyOptionProps extends OptionDataType {\n  depth?: number;\n  shouldExpand: (value: string) => boolean;\n  handleSelection: (evt: {\n    target: {\n      value?: string;\n      checked?: boolean;\n    };\n  }) => void;\n  isSelected: (value: string) => boolean;\n}\nconst HierarchyOption: React.FC<HierarchyOptionProps> = ({\n  value,\n  label,\n  count,\n  optionChildren,\n  depth = 0,\n  shouldExpand,\n  handleSelection,\n  isSelected,\n}) => {\n  const [displayChildren, setDisplayChildren] = useState(shouldExpand(value));\n  return (\n    <div\n      style={{\n        marginLeft: `${depth * 0.5}rem`,\n      }}\n    >\n      <div className=\"mg-hierarchy-selector\">\n        {optionChildren?.length ? (\n          <button\n            type=\"button\"\n            className=\"mg-expander\"\n            onClick={() => setDisplayChildren(!displayChildren)}\n          >\n            {displayChildren ? '▾' : '▸'}\n          </button>\n        ) : (\n          <span className=\"mg-hierarchy-spacer\" />\n        )}\n        <div className=\"vf-form__item vf-form__item--checkbox\">\n          <input\n            type=\"checkbox\"\n            name={value}\n            value={value}\n            id={value}\n            className=\"vf-form__checkbox\"\n            onChange={handleSelection}\n            checked={isSelected(value)}\n          />\n          <label className=\"vf-form__label\" htmlFor={value}>\n            <span className=\"mg-filter-checkbox-label\">\n              {label} <span className=\"mg-number\">{count}</span>\n            </span>\n          </label>\n        </div>\n      </div>\n      {optionChildren &&\n        optionChildren.length &&\n        displayChildren &&\n        optionChildren.map(\n          ({\n            label: childLabel,\n            value: childValue,\n            count: childCount,\n            children: childChildren,\n          }) => (\n            <HierarchyOption\n              key={`${value}/${childValue}`}\n              label={childLabel}\n              value={`${value}/${childValue}`}\n              count={childCount}\n              depth={depth + 1}\n              optionChildren={childChildren}\n              handleSelection={handleSelection}\n              isSelected={isSelected}\n              shouldExpand={shouldExpand}\n            />\n          )\n        )}\n    </div>\n  );\n};\n\ntype MultipleOptionProps = {\n  facetName: string;\n  header: string;\n};\n\nconst HierarchyMultipleOptionFilter: React.FC<MultipleOptionProps> = ({\n  facetName,\n  header,\n}) => {\n  const location = useLocation();\n  const { searchData, queryParameters, setQueryParameters } =\n    useContext(SearchQueryContext);\n  const [selected, setSelected] = useState(\n    (queryParameters[facetName] as string).split(',').filter(Boolean)\n  );\n  useEffect(() => {\n    setSelected(\n      (queryParameters[facetName] as string).split(',').filter(Boolean)\n    );\n  }, [queryParameters, facetName]);\n\n  const facetData = useMemo(\n    () =>\n      (searchData?.[location.pathname]?.data?.facets || []).filter(\n        (f) => f.id === facetName\n      )?.[0],\n    [location.pathname, searchData, facetName]\n  );\n\n  if (\n    searchData?.[location.pathname].loading &&\n    !searchData?.[location.pathname].isStale\n  )\n    return <Loading />;\n  if (searchData?.[location.pathname].error) return null;\n\n  if (!facetData) return null;\n\n  const handleSelection = (event): void => {\n    const { value, checked: isChecked } = event.target as HTMLInputElement;\n    let newSelected = [...selected];\n    if (isChecked && !selected.includes(value)) {\n      newSelected.push(value);\n    } else {\n      newSelected = selected.filter((s) => s !== value);\n    }\n    setQueryParameters({\n      ...queryParameters,\n      [facetName]: newSelected.sort().join(','),\n    });\n  };\n\n  return (\n    <fieldset className=\"vf-form__fieldset vf-stack vf-stack--400\">\n      <legend className=\"vf-form__legend\">\n        {header}\n        {searchData?.[location.pathname].loading &&\n          searchData?.[location.pathname].isStale && <Loading size=\"small\" />}\n      </legend>\n      {facetData.facetValues.map(({ label, value, count, children }) => (\n        <HierarchyOption\n          key={value}\n          label={label}\n          value={value}\n          count={count}\n          optionChildren={children}\n          handleSelection={handleSelection}\n          isSelected={(v) => selected.includes(v)}\n          shouldExpand={(v) => selected.some((s) => s.startsWith(v))}\n        />\n      ))}\n    </fieldset>\n  );\n};\n\nexport default HierarchyMultipleOptionFilter;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { debounce } from 'lodash-es';\nimport './style.css';\n\ntype SelectionType = {\n  min: number;\n  max: number;\n};\n\ntype SliderProps = {\n  min: number;\n  max: number;\n  selection?: SelectionType;\n  isEnabled?: boolean;\n  onChange?: (selection: SelectionType) => void;\n};\n\nconst areEqual = (s1: SelectionType, s2: SelectionType): boolean =>\n  s1.max === s2.max && s1.min === s2.min;\n\nconst Slider: React.FC<SliderProps> = ({\n  min,\n  max,\n  isEnabled = true,\n  selection = null,\n  onChange = (s) => s,\n}) => {\n  const [currentSelection, setCurrentSelection] = useState({\n    min: selection && 'min' in selection ? selection.min : min,\n    max: selection && 'max' in selection ? selection.max : max,\n  });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounced = useCallback(debounce(onChange, 300), []);\n  useEffect(() => {\n    if (!areEqual(currentSelection, selection)) {\n      debounced(currentSelection);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentSelection]);\n  useEffect(() => {\n    if (!areEqual(currentSelection, selection)) {\n      setCurrentSelection(selection);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selection]);\n\n  return (\n    <div className=\"mg-multirange-wrapper\">\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        name=\"min\"\n        value={currentSelection.min}\n        className=\"original\"\n        disabled={!isEnabled}\n        onChange={(evt) => {\n          setCurrentSelection({\n            min: Number(evt.target.value),\n            max: currentSelection.max,\n          });\n        }}\n      />\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        name=\"max\"\n        value={currentSelection.max}\n        className=\"ghost\"\n        disabled={!isEnabled}\n        onChange={(evt) => {\n          setCurrentSelection({\n            max: Number(evt.target.value),\n            min: currentSelection.min,\n          });\n        }}\n      />\n      <div className=\"labels\">\n        <div className=\"label-min\">\n          <span>{Math.min(currentSelection.min, currentSelection.max)}</span>\n        </div>\n        <div className=\"label-max\">\n          <span>{Math.max(currentSelection.min, currentSelection.max)}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React, { useState, useEffect } from 'react';\nimport './style.css';\n\ntype SwitchProps = {\n  id: string;\n  isOn?: boolean;\n  onChange?: (v: boolean) => void;\n};\nconst Switch: React.FC<SwitchProps> = ({\n  id,\n  onChange = (v) => v,\n  isOn = false,\n}) => {\n  const [value, setValue] = useState(isOn);\n  useEffect(() => {\n    setValue(isOn);\n    onChange(isOn);\n  }, [isOn, onChange]);\n\n  return (\n    <div>\n      <input\n        className=\"mg-switch\"\n        type=\"checkbox\"\n        id={id}\n        checked={value}\n        onChange={() => {\n          onChange(!value);\n          setValue(!value);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Switch;\n","import React, { useEffect, useState, useContext, memo } from 'react';\n\nimport SearchQueryContext from 'pages/TextSearch/SearchQueryContext';\n\nimport Slider from 'src/components/UI/Slider';\nimport Switch from 'src/components/UI/Switch';\n\nconst MIN = -20;\nconst MAX = 100;\n\nconst TemperatureFilter: React.FC = () => {\n  const { queryParameters, setQueryParameters } =\n    useContext(SearchQueryContext);\n  const [enabled, setEnabled] = useState(!!queryParameters.temperature);\n  const [range, setRange] = useState(\n    (queryParameters.temperature as string)\n      .split(',')\n      .filter(Boolean)\n      .map(Number)\n  );\n  useEffect(() => {\n    const newRange = (queryParameters.temperature as string)\n      .split(',')\n      .filter(Boolean)\n      .map(Number);\n    setRange(newRange);\n  }, [queryParameters.temperature]);\n\n  const handleSwitch = (isEnabled: boolean): void => {\n    setEnabled(isEnabled);\n    if (!isEnabled) {\n      setQueryParameters({\n        ...queryParameters,\n        temperature: '',\n      });\n    }\n  };\n  const handleSlider = ({ min, max }): void => {\n    setQueryParameters({\n      ...queryParameters,\n      temperature: `${min},${max}`,\n    });\n  };\n  return (\n    <fieldset className=\"vf-form__fieldset vf-stack vf-stack--400 mg-temperature-filter\">\n      <legend className=\"vf-form__legend\">Temperature (°C)</legend>\n      <div className=\"mg-switch-and-slider\">\n        <Switch id=\"temp_filter\" onChange={handleSwitch} isOn={enabled} />\n        <Slider\n          min={MIN}\n          max={MAX}\n          isEnabled={enabled}\n          selection={{\n            min: range?.[0] || MIN,\n            max: range?.[1] || MAX,\n          }}\n          onChange={handleSlider}\n        />\n      </div>\n    </fieldset>\n  );\n};\nexport default memo(TemperatureFilter);\n","import React, { useEffect, useState, useContext, memo } from 'react';\n\nimport SearchQueryContext from 'pages/TextSearch/SearchQueryContext';\n\nimport Slider from 'src/components/UI/Slider';\nimport Switch from 'src/components/UI/Switch';\n\nconst MIN = 0;\nconst MAX = 2000;\n\nconst DepthFilter: React.FC = () => {\n  const { queryParameters, setQueryParameters } =\n    useContext(SearchQueryContext);\n  const [enabled, setEnabled] = useState(!!queryParameters.depth);\n  const [range, setRange] = useState(\n    (queryParameters.depth as string).split(',').filter(Boolean).map(Number)\n  );\n  useEffect(() => {\n    const newRange = (queryParameters.depth as string)\n      .split(',')\n      .filter(Boolean)\n      .map(Number);\n    setRange(newRange);\n  }, [queryParameters.depth]);\n\n  const handleSwitch = (isEnabled: boolean): void => {\n    setEnabled(isEnabled);\n    if (!isEnabled) {\n      setQueryParameters({\n        ...queryParameters,\n        depth: '',\n      });\n    }\n  };\n  const handleSlider = ({ min, max }): void => {\n    setQueryParameters({\n      ...queryParameters,\n      depth: `${min},${max}`,\n    });\n  };\n  return (\n    <fieldset className=\"vf-form__fieldset vf-stack vf-stack--400 mg-depth-filter\">\n      <legend className=\"vf-form__legend\">Depth (meters)</legend>\n      <div className=\"mg-switch-and-slider\">\n        <Switch id=\"temp_filter\" onChange={handleSwitch} isOn={enabled} />\n        <Slider\n          min={MIN}\n          max={MAX}\n          isEnabled={enabled}\n          selection={{\n            min: range?.[0] || MIN,\n            max: range?.[1] || MAX,\n          }}\n          onChange={handleSlider}\n        />\n      </div>\n    </fieldset>\n  );\n};\nexport default memo(DepthFilter);\n","import React, { useEffect, useContext } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport SearchQueryContext from 'pages/TextSearch/SearchQueryContext';\n\nconst tabs = [\n  { label: 'Studies', to: '/search/studies' },\n  { label: 'Samples', to: '/search/samples' },\n  { label: 'Analyses', to: '/search/analyses' },\n];\n\nconst SearchTabs: React.FC = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const { searchData } = useContext(SearchQueryContext);\n\n  useEffect(() => {\n    if (!tabs.some(({ to }) => to === location.pathname)) {\n      history.replace({\n        ...location,\n        pathname: tabs[0].to,\n      });\n    }\n  }, [location, history]);\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label, to }) => (\n          <li className=\"vf-tabs__item\" key={label}>\n            <Link\n              className={`vf-tabs__link ${\n                to === location.pathname ? 'is-active' : ''\n              }`}\n              to={to}\n            >\n              {label}\n              <span className=\"mg-number\">\n                {searchData?.[to]?.data?.hitCount || ''}\n              </span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default SearchTabs;\n","import React, { useEffect, useState, useContext } from 'react';\nimport SearchQueryContext from 'pages/TextSearch/SearchQueryContext';\n\nconst TextSearch: React.FC = () => {\n  const { queryParameters, setQueryParameters } =\n    useContext(SearchQueryContext);\n  const [searchTerms, setSearchTerms] = useState(\n    queryParameters.query as string\n  );\n  useEffect(() => {\n    setSearchTerms(queryParameters.query as string);\n  }, [queryParameters.query]);\n  return (\n    <div className=\"vf-form vf-form--search vf-form--search--responsive vf-sidebar vf-sidebar--end\">\n      <div className=\"vf-sidebar__inner\">\n        <div className=\"vf-form__item | vf-search__item\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter your search terms\"\n            id=\"text\"\n            className=\"vf-form__input | st-default-search-input\"\n            value={searchTerms}\n            onChange={(evt) => {\n              setSearchTerms(evt.target.value);\n            }}\n          />\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"vf-search__button | vf-button vf-button--primary\"\n          onClick={() => {\n            setQueryParameters({\n              ...queryParameters,\n              query: searchTerms,\n            });\n          }}\n        >\n          <span className=\"vf-button__text\">Search </span>\n          <span className=\"icon icon-common icon-search\" />\n        </button>\n        <button\n          type=\"button\"\n          className=\"vf-search__button | vf-button vf-button--tertiary\"\n          onClick={() => {\n            setQueryParameters({});\n          }}\n        >\n          <span className=\"vf-button__text\">Clear All </span>\n          <span className=\"icon icon-common icon-times-circle\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default TextSearch;\n","import React, { useMemo, useContext } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport SearchQueryContext from 'pages/TextSearch/SearchQueryContext';\n\nimport './style.css';\n\nconst dataFor = {\n  '/search/studies': {\n    label: 'Studies',\n    columns: [\n      {\n        id: 'study_id',\n        Header: 'MGnify ID',\n        accessor: (study) => study.id,\n        Cell: ({ cell }) => (\n          <Link to={`/studies/${cell.value}`}>{cell.value}</Link>\n        ),\n      },\n      {\n        id: 'ena_id',\n        Header: 'ENA accession',\n        accessor: (study) => study?.fields?.ENA_PROJECT?.[0] || '',\n        Cell: ({ cell }) => (\n          <span>\n            <a\n              href={`https://www.ebi.ac.uk/ena/browser/view/${cell.value}`}\n              className=\"ext\"\n            >\n              {cell.value}\n            </a>\n          </span>\n        ),\n      },\n      {\n        id: 'biome',\n        Header: 'Biome',\n        accessor: (study) => study?.fields?.biome_name?.join(':'),\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n      {\n        id: 'centre',\n        Header: 'Centre name',\n        accessor: (study) => study?.fields?.centre_name?.[0],\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n    ],\n  },\n  '/search/samples': {\n    label: 'Samples',\n    columns: [\n      {\n        id: 'sample_id',\n        Header: 'Sample',\n        accessor: (sample) => sample.id,\n        Cell: ({ cell }) => (\n          <Link to={`/samples/${cell.value}`}>{cell.value}</Link>\n        ),\n      },\n      {\n        id: 'mgnify_id',\n        Header: 'MGnify ID',\n        accessor: (sample) => sample?.fields?.METAGENOMICS_PROJECTS?.[0] || '',\n        Cell: ({ cell }) => (\n          <Link to={`/studies/${cell.value}`}>{cell.value}</Link>\n        ),\n      },\n      {\n        id: 'sample_name',\n        Header: 'Name',\n        pathnames: ['/search/studies'],\n        accessor: (study) => study?.fields?.name?.[0],\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n      {\n        id: 'sample_description',\n        Header: 'Description',\n        pathnames: ['/search/studies'],\n        accessor: (study) => study?.fields?.description?.[0],\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n    ],\n  },\n  '/search/analyses': {\n    label: 'Analyses',\n    columns: [\n      {\n        id: 'analyses_id',\n        Header: 'Analysis',\n        accessor: (analysis) => (analysis.id || '').split('_'),\n        Cell: ({ cell }) => (\n          <Link to={`/analyses/${cell.value[0]}?version=${cell.value[1]}`}>\n            {cell.value[0]}\n          </Link>\n        ),\n      },\n      {\n        id: 'pipeline',\n        Header: 'Pipeline version',\n        accessor: (analysis) => analysis?.fields?.pipeline_version?.[0] || '',\n        Cell: ({ cell }) => (\n          <span>\n            <Link to={`/pipelines/${cell.value}`}>{cell.value}</Link>\n          </span>\n        ),\n      },\n      {\n        id: 'sample_id',\n        Header: 'Sample',\n        accessor: (analysis) => analysis?.fields?.METAGENOMICS_SAMPLES?.[0],\n        Cell: ({ cell }) => (\n          <Link to={`/samples/${cell.value}`}>{cell.value}</Link>\n        ),\n      },\n      {\n        id: 'mgnify_id',\n        Header: 'MGnify ID',\n        accessor: (analysis) =>\n          analysis?.fields?.METAGENOMICS_PROJECTS?.[0] || '',\n        Cell: ({ cell }) => (\n          <Link to={`/studies/${cell.value}`}>{cell.value}</Link>\n        ),\n      },\n      {\n        id: 'experiment',\n        Header: 'Experiment type',\n        accessor: (analysis) => analysis?.fields?.experiment_type?.[0],\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n    ],\n  },\n};\nconst PAGE_SIZE = 25; // TODO: move to table\n\nconst SearchTable: React.FC = () => {\n  const { pathname } = useLocation();\n  const { searchData } = useContext(SearchQueryContext);\n  const { data, loading, error, isStale } = searchData?.[pathname] || {};\n  // console.log({loading});\n\n  const columns = useMemo(() => dataFor?.[pathname]?.columns, [pathname]);\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !data) return <FetchError error={error} />;\n  const fomattedData = {\n    data: data.entries as Record<string, unknown>[],\n    meta: {\n      pagination: {\n        pages: Math.ceil((data.hitCount as number) / PAGE_SIZE),\n      },\n    },\n  };\n\n  return (\n    <div className=\"mg-overlay-container\">\n      <div className={loading && isStale ? 'mg-overlay' : undefined} />\n      <EMGTable\n        cols={columns}\n        data={fomattedData}\n        title={`${dataFor?.[pathname]?.label || ''} (${data.hitCount})`}\n        initialPage={1}\n        className=\"mg-search-result\"\n      />\n    </div>\n  );\n};\n\nexport default SearchTable;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport MultipleOptionFilter from 'components/Search/Filter/MultipleOption';\nimport HierarchyMultipleOptionFilter from 'src/components/Search/Filter/HierarchyMultipleOption';\nimport TemperatureFilter from 'components/Search/Filter/Temperature';\nimport DepthFilter from 'components/Search/Filter/Depth';\nimport SearchTabs from 'src/components/Search/Tabs';\nimport TextSearch from 'src/components/Search/Filter/Text';\nimport SearchTable from 'src/components/Search/Table';\nimport { useEBISearchData } from 'hooks/useMGnifyData';\nimport { QueryState, useQueryParametersState } from 'hooks/useQueryParamState';\nimport SearchQueryContext from './SearchQueryContext';\n\nimport './style.css';\n\nconst PAGE_SIZE = 25;\nconst FACET_DEPTH = 4;\n\nconst formatToFacet = (facetName: string, strValue: string): string =>\n  strValue\n    .split(',')\n    .filter(Boolean)\n    .map((v) => `${facetName}:${v}`)\n    .join(',');\n\nconst getFacets = (facetNames: string[], queryParameters: QueryState): string =>\n  facetNames\n    .map((name) => formatToFacet(name, queryParameters[name] as string))\n    .filter(Boolean)\n    .join(',');\n\nconst getSamplesQuery = (\n  names: string[],\n  queryParameters: QueryState,\n  defaultValue: string\n): string => {\n  const query = names\n    .map((name) => {\n      switch (name) {\n        case 'query':\n          return queryParameters[name];\n        case 'temperature':\n        case 'depth': {\n          const newRange = (queryParameters[name] as string)\n            .split(',')\n            .filter(Boolean)\n            .map(Number);\n\n          return newRange.length === 2\n            ? `${name}:[${Math.min(...newRange)} TO ${Math.max(...newRange)}]`\n            : '';\n        }\n        default:\n          return '';\n      }\n    })\n    .filter(Boolean);\n  if (query.length) return query.join(' AND ');\n  return defaultValue;\n};\nconst TextSearchPage: React.FC = () => {\n  const [queryParameters, setQueryParameters] = useQueryParametersState({\n    query: '',\n    centre_name: '',\n    biome: '',\n    temperature: '',\n    depth: '',\n    experiment_type: '',\n    sequencing_method: '',\n    location_name: '',\n    disease_status: '',\n    phenotype: '',\n    organism: '',\n    pipeline_version: '',\n    GO: '',\n    INTERPRO: '',\n  });\n\n  const searchDataStudies = useEBISearchData('metagenomics_projects', {\n    query: getSamplesQuery(\n      ['query'],\n      queryParameters,\n      'domain_source:metagenomics_projects'\n    ),\n    size: PAGE_SIZE,\n    fields: 'ENA_PROJECT,biome_name,centre_name',\n    facetcount: 10,\n    facetsdepth: FACET_DEPTH,\n    facets: getFacets(['centre_name', 'biome'], queryParameters),\n  });\n  const searchDataSamples = useEBISearchData('metagenomics_samples', {\n    query: getSamplesQuery(\n      ['query', 'temperature', 'depth'],\n      queryParameters,\n      'domain_source:metagenomics_samples'\n    ),\n    size: PAGE_SIZE,\n    fields: 'METAGENOMICS_PROJECTS,name,description',\n    facetcount: 10,\n    facetsdepth: FACET_DEPTH,\n    facets: getFacets(\n      [\n        'biome',\n        'experiment_type',\n        'location_name',\n        'disease_status',\n        'sequencing_method',\n        'phenotype',\n      ],\n      queryParameters\n    ),\n  });\n  const searchDataAnalyses = useEBISearchData('metagenomics_analyses', {\n    query: getSamplesQuery(\n      ['query', 'temperature', 'depth'],\n      queryParameters,\n      'domain_source:metagenomics_analyses'\n    ),\n    size: PAGE_SIZE,\n    fields:\n      'METAGENOMICS_PROJECTS,METAGENOMICS_SAMPLES,pipeline_version,experiment_type',\n    facetcount: 10,\n    facetsdepth: FACET_DEPTH,\n    facets: getFacets(\n      [\n        'biome',\n        'organism',\n        'pipeline_version',\n        'experiment_type',\n        'GO',\n        'INTERPRO',\n      ],\n      queryParameters\n    ),\n  });\n  const context = {\n    searchData: {\n      '/search/studies': searchDataStudies,\n      '/search/samples': searchDataSamples,\n      '/search/analyses': searchDataAnalyses,\n    },\n    queryParameters,\n    setQueryParameters,\n  };\n\n  return (\n    <section className=\"vf-content mg-page-search\">\n      <h2>Text Search.</h2>\n      <SearchQueryContext.Provider value={context}>\n        <TextSearch />\n        <SearchTabs />\n        <section className=\"vf-grid\">\n          <div className=\"vf-stack vf-stack--200\">\n            <Switch>\n              <Route path=\"/search/studies\">\n                <HierarchyMultipleOptionFilter\n                  facetName=\"biome\"\n                  header=\"Biome\"\n                />\n                <MultipleOptionFilter\n                  facetName=\"centre_name\"\n                  header=\"Centre Name\"\n                  includeTextFilter\n                />\n              </Route>\n              <Route path=\"/search/samples\">\n                <TemperatureFilter />\n                <DepthFilter />\n                <HierarchyMultipleOptionFilter\n                  facetName=\"biome\"\n                  header=\"Biome\"\n                />\n                <MultipleOptionFilter\n                  facetName=\"experiment_type\"\n                  header=\"Experiment type\"\n                />\n                <MultipleOptionFilter\n                  facetName=\"sequencing_method\"\n                  header=\"Sequencing method\"\n                />\n                <MultipleOptionFilter\n                  facetName=\"location_name\"\n                  header=\"Location name\"\n                  includeTextFilter\n                />\n                <MultipleOptionFilter\n                  facetName=\"disease_status\"\n                  header=\"Disease status\"\n                />\n                <MultipleOptionFilter\n                  facetName=\"phenotype\"\n                  header=\"Phenotype\"\n                />\n              </Route>\n              <Route path=\"/search/analyses\">\n                <TemperatureFilter />\n                <DepthFilter />\n                <HierarchyMultipleOptionFilter\n                  facetName=\"organism\"\n                  header=\"Organism\"\n                />\n                <HierarchyMultipleOptionFilter\n                  facetName=\"biome\"\n                  header=\"Biome\"\n                />\n                <MultipleOptionFilter\n                  facetName=\"pipeline_version\"\n                  header=\"Pipeline version\"\n                />\n                <MultipleOptionFilter\n                  facetName=\"experiment_type\"\n                  header=\"Experiment type\"\n                />\n                <MultipleOptionFilter\n                  facetName=\"GO\"\n                  header=\"GO\"\n                  includeTextFilter\n                />\n                <MultipleOptionFilter\n                  facetName=\"INTERPRO\"\n                  header=\"InterPro\"\n                  includeTextFilter\n                />\n              </Route>\n            </Switch>\n          </div>\n          <SearchTable />\n        </section>\n      </SearchQueryContext.Provider>\n    </section>\n  );\n};\n\nexport default TextSearchPage;\n"],"sourceRoot":""}