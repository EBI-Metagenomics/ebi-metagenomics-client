{"version":3,"file":"js/328.71493446.chunk.js","mappings":"mKAQA,MA6BA,EA7B0D,EACxDA,iBAAAA,EACAC,UAAAA,EACAC,SAAAA,KAEIF,IAAqBC,EAErB,sBAAIE,UAAU,sDACZ,wBAAMA,UAAU,uBAAsB,eAAc,QAClD,wBAAMA,UAAU,gBAAc,SAC7BH,EAAmB,IAM1B,sBAAIG,UAAU,uBACZ,0BACEC,KAAK,SACLC,QAAS,IAAMH,EAASD,GACxBE,UAAU,iDAEV,wBAAMA,UAAU,gBAAc,SAC7BF,EAAY,I,cCvBrB,MA0CA,EA1C8D,EAC5DK,UAAAA,MAEA,MAAOC,EAAiBC,IAAsB,OAAwB,CACpE,CAAC,GAAGF,WAAoB,MAEnBG,EAAOC,IAAY,IAAAC,UACvBJ,EAAgB,GAAGD,YAAiC,IAIjDM,GAAY,IAAAC,cAChB,EAAAC,EAAA,IAAUC,IACRP,EAAmB,OAAD,wBACbD,GAAe,CAClB,CAAC,GAAGD,WAAoBS,OAEzB,KACH,IAOF,OACE,uBAAKZ,UAAU,+BACb,yBAAOA,UAAU,kCAAkCa,QAAQ,cAAY,UAGvE,yBACEZ,KAAK,SACLa,YAAY,0BACZC,GAAG,aACHf,UAAU,iBACVgB,SAfkBC,IACtB,MAAML,EAAIK,EAAMC,OAAOZ,MACvBC,EAASK,GACTH,EAAUG,IAaNN,MAAOA,MCsUf,EA3R0C,EACxCa,KAAAA,EACAC,KAAAA,EACAC,MAAOC,EACPC,YAAAA,EAAc,EACdC,gBAAAA,EAAkB,GAClBxB,UAAAA,EAAY,GACZG,UAAAA,EAAY,GACZsB,eAAAA,GAAiB,EACjBC,eAAAA,GAAiB,EACjBC,SAAAA,GAAW,EACXC,QAAAA,GAAU,EACVC,QAAAA,GAAU,M,YAEV,MAAOzB,EAAiBC,IAAsB,OAC5C,CACE,CAAC,GAAGF,SAAkB,EACtB,CAAC,GAAGA,UAAmB,GACvB,CAAC,GAAGA,cAAuBqB,EAC3B,CAAC,GAAGrB,WAAoBqB,GAE1B,CACE,CAAC,GAAGrB,SAAkB2B,OACtB,CAAC,GAAG3B,cAAuB2B,UAGzB,cACJC,EAAa,kBACbC,EAAiB,aACjBC,EAAY,KACZC,EAAI,WACJC,EAAU,gBACVC,EAAe,YACfC,EAAW,UACXC,EAAS,SACTvC,EAAQ,YACRwC,EAAW,SACXC,EAAQ,aACRC,EACAC,OAAO,UAAE5C,EAAS,SAAE6C,EAAQ,OAAEC,KAC5B,IAAAC,UACF,CACEC,QAAS3B,EACTC,MAA8B,QAAxB,EAACA,SAAuB,eAAEA,OAAQA,EACxC2B,aAAc,CACZjD,UAAWyB,EACXoB,SAAUvC,EAAgB,GAAGD,eAE/BmC,WAAqD,QAA1C,EAA8B,QAA9B,EAAwB,QAAxB,EAAClB,SAAuB,eAAE4B,YAAI,eAAEC,kBAAU,eAAEC,QAAS,EAChEC,kBAAkB,EAClBC,cAAc,GAEhB,EAAAC,UACA,EAAAC,eAEIC,GAAW,IAAAC,QAAO,OACjBC,EAAgBC,IAAmB,IAAAlD,WAAS,IAEnD,IAAAmD,YAAU,KAENlC,GACArB,EAAgB,GAAGD,WAAqBL,EAAY,IAEpDO,EAAmB,OAAD,wBACbD,GAAe,CAClB,CAAC,GAAGD,SAAkBL,EAAY,KAEhCyD,EAASK,SAAWH,IACtBF,EAASK,QAAQC,iBACjBH,GAAgB,OAInB,CAACjC,EAAgBpB,EAAoBP,KAExC,IAAA6D,YAAU,KAENlC,GACArB,EAAgB,GAAGD,gBAA0BwC,IAE7CtC,EAAmB,OAAD,wBACbD,GAAe,CAClB,CAAC,GAAGD,cAAuBwC,KAEzBY,EAASK,SAAWH,IACtBF,EAASK,QAAQC,iBACjBH,GAAgB,OAInB,CAACjC,EAAgBpB,EAAoBsC,KAExC,IAAAgB,YAAU,KACR,GAAIhC,EAAU,CACZ,MAAMmC,EAvHZ,SACEC,GAEA,IAAKA,EAAYC,OAAQ,MAAO,GAChC,MAAMC,EAAMF,EAAY,GACxB,MAAO,GAAGE,EAAIC,KAAO,IAAM,KAAKD,EAAIlD,GACjCoD,QAAQ,eAAgB,IACxBA,QAAQ,KAAM,OAgHCC,CAAsCxB,GACpD,GAAIkB,IAAU1D,EAAgB,GAAGD,UAAmB,OACpDE,EAAmB,OAAD,wBACbD,GAAe,CAClB,CAAC,GAAGD,UAAmB2D,EACvB,CAAC,GAAG3D,SAAkB,KAEpBoD,EAASK,SAAWH,IACtBF,EAASK,QAAQC,iBACjBH,GAAgB,OAInB,CAACjC,EAAgBpB,EAAoBuC,EAAQjB,IAEhD,MAAM0C,GAAmB,IAAAC,UACvB,IA3KJ,SACExE,EACAwC,GAEA,MAAMiC,EAAgBjC,EAAY,EAAI,CAAC,EAAG,GAAK,CAAC,GAE1CkC,EAAgBlC,EAAY,EAAI,CAACmC,KAAKC,IAAI,EAAG5E,EAAY,IAAM,GACrE,IACE,IAAI6E,EAAOH,EAAc,GAAK,EAC9BG,EAAOrC,EAAY,GAAKkC,EAAcR,OAAS,EAC/CW,GAAQ,EAERH,EAAcI,KAAKD,GAGrB,IAAIE,EAAc,GAOlB,OANIvC,EAAY,EACduC,EAAc,CAACvC,EAAY,EAAGA,EAAY,GACjCA,EAAY,IACrBuC,EAAc,CAACvC,EAAY,IAGtB,CACLiC,cAAAA,EACAM,YAAAA,EACAL,cAAAA,EACAM,mBACIN,EAAcR,QAChBQ,EAAc,GAAKD,EAAcA,EAAcP,OAAS,GAAK,EAC/De,eACIF,EAAYb,UACZQ,EAAcR,QAChBa,EAAY,GAAKL,EAAcA,EAAcR,OAAS,GAAK,GA2IvDgB,CAAoBlF,EAAWwC,IACrC,CAACxC,EAAWwC,IAER2C,EAAqBC,IACzBxB,GAAgB,GACT3D,EAASmF,IAEZC,EAAuBC,IAC3B1B,GAAgB,GACTnB,GAAa6C,EAAIlE,OAAOZ,QAGjC,OAAIsB,IAAYC,EAAgB,gBAACwD,EAAA,EAAO,CAACC,KAAK,UAG5C,+BACE,uBAAKtF,UAAU,8BACb,uBAAKA,UAAW4B,GAAWC,EAAU,wBAAqB0D,IAC1D,yCACMxD,EAAa,CACjB/B,UAAW,8BAA8BA,IACzCwF,IAAKjC,IAEJjC,GACC,2BAAStB,UAAU,sCACjB,2BACoB,iBAAVsB,EAAqBA,EAAQ,gBAACA,EAAK,MAC1CI,GAAkB,gBAAC,EAAkB,CAACvB,UAAWA,MAIxD,yBAAOH,UAAU,oBACdiC,EAAawD,KAAKC,GACjB,sCACMA,EAAYC,sBAAqB,CACrC3F,UAAU,kBAET0F,EAAYE,QAAQH,KAAKI,GACxB,sCACOlE,GAAYkE,EAAOC,QACpBD,EAAOE,eAAeF,EAAOG,wBAC7B,CAAEC,IAAKJ,EAAO9E,IAAK,CACvBf,UAAU,sBAET6F,EAAOK,OAAO,UACdvE,GAAYkE,EAAOC,SAClB,gC,IAEE,4BAEGD,EAAOM,SACNN,EAAOO,aACL,qBAAGpG,UAAU,oCAEb,qBAAGA,UAAU,kCAGf,qBAAGA,UAAU,wCAU/B,yCAAWgC,IAAmB,CAAEhC,UAAU,mBACvCkC,EAAKuD,KAAKY,IACTlE,EAAWkE,GAET,sCAAQA,EAAIC,cAAa,CAAEtG,UAAU,kBAClCqG,EAAIE,MAAMd,KAAKe,GAEZ,sCAAQA,EAAKC,eAAc,CAAEzG,UAAU,mBACpCwG,EAAKN,OAAO,kBAW9BzE,GACC,2BAASzB,UAAU,mBACjB,yBAAOA,UAAU,kB,aAEf,0BACEA,UAAU,kBACVM,MAAOF,EAAgB,GAAGD,cAC1BuG,OAAQvB,EACRnE,SAAUmE,GAET,CAAC,GAAI,GAAI,IAAIM,KAAKkB,GACjB,0BAAQV,IAAKU,EAAIrG,MAAOqG,G,QAChBA,OAKd,uBAAK3G,UAAU,gBAAe,aAAY,cACxC,sBAAIA,UAAU,uBACZ,sBAAIA,UAAU,0DACZ,0BACE4G,UAAWxE,EACXnC,KAAK,SACLC,QAASuC,EACTzC,UAAU,iD,WAEF,wBAAMA,UAAU,gBAAc,WAIzCqE,EAAiBE,cAAckB,KAAKoB,GACnC,gBAAC,EAAgB,CACfZ,IAAKY,EACLhH,iBAAkBC,EAClBA,UAAW+G,EACX9G,SAAUkF,MAIbZ,EAAiBS,kBAChB,sBAAI9E,UAAU,uBACZ,wBAAMA,UAAU,wBAAsB,QAIzCqE,EAAiBG,cAAciB,KAAKoB,GACnC,gBAAC,EAAgB,CACfZ,IAAKY,EACLhH,iBAAkBC,EAClBA,UAAW+G,EACX9G,SAAUkF,MAIbZ,EAAiBU,cAChB,sBAAI/E,UAAU,uBACZ,wBAAMA,UAAU,wBAAsB,QAIzCqE,EAAiBQ,YAAYY,KAAKoB,GACjC,gBAAC,EAAgB,CACfZ,IAAKY,EACLhH,iBAAkBC,EAClBA,UAAW+G,EACX9G,SAAUkF,MAId,sBAAIjF,UAAU,sDACZ,0BACE4G,UAAWvE,EACXpC,KAAK,SACLC,QAASsC,EACTxC,UAAU,iD,OAEN,wBAAMA,UAAU,gBAAc,iB,8CC9VpD,MAaA,EAbwC,EAAG8G,KAAAA,EAAM/F,GAAAA,EAAIM,MAAAA,EAAO0F,SAAAA,KAC1D,qBACED,KAAMA,EACNzF,MAAOA,EACPN,GAAIA,EACJG,OAAO,SACP8F,IAAI,sBACJhH,UAAU,UAEV,wBAAMA,UAAU,4C,IAA8C+G,I,wDCflE,MAAME,EAAc,KAClBC,OAAOC,SAASC,UAqClB,EAlCwD,EAAGC,MAAAA,KACpDA,GAASA,EAAMpH,OAAS,aAE3B,uBACED,UAAU,4CACVsH,MAAO,CACLC,gBAAiB,iBAGnB,sBAAIvH,UAAU,mBACZ,wBAAMA,UAAU,+C,wBAGlB,qBAAGA,UAAU,iBACVqH,MAAAA,OAAK,EAALA,EAAOpH,QAAS,iBACf,0CAA0CoH,EAAMA,UACjDA,MAAAA,OAAK,EAALA,EAAOpH,QAAS,YACf,oDAAoDoH,EAAMG,YAC3DH,MAAAA,OAAK,EAALA,EAAOpH,QAAS,gBACf,6DAA6DoH,EAAMA,WAEvE,uBAAKrH,UAAU,YACb,0BACEC,KAAK,SACLD,UAAU,+CACVE,QAAS+G,GAAW,aAxB4B,M,kECLnD,MAkCP,EA1BkC,EAAGQ,KAAAA,MACnC,MAAMN,GAAW,UACjB,OACE,uBAAKnH,UAAU,0BACb,sBAAIA,UAAU,iBACXyH,EAAKhC,KAAI,EAAGiC,MAAOC,EAAOC,GAAAA,KACzB,sBAAI5H,UAAU,gBAAgBiG,IAAK2B,GACjC,gBAAC,KAAI,CACH5H,UAAW,kBACT4H,IAAOT,EAASU,UACfD,EAAGE,WAAW,MAAQF,IAAOT,EAASY,MAC/B,MAAPH,GAAgC,KAAlBT,EAASY,KACpB,YACA,IAENH,GAAIA,GAEc,iBAAVD,EAAqBA,EAAQ,gBAACA,EAAK,c,kECpBzD,MAiBA,EAduB,CAACK,EAAUC,EAAa,MAC7C,MAAM,OAAEC,IAAW,IAAAC,YAAW,KAKxBC,EAAgB,OAAH,wBAJO,CACxBC,OAAQ,OACRC,MAAO,IAEwCL,GAC3CM,EAAM,GAAGL,EAAOM,YAAYR,KAAYS,OAAOC,QAAQN,GAC1D3C,KAAI,EAAEQ,EAAK3F,KAAW,GAAG2F,KAAO3F,MAChCqI,KAAK,OAER,OADa,QAAQ,CAAC,UAAMpD,GAAWqD,SAASZ,GAAY,KAAOO,K,wDClBrE,MAuCMM,EAAuB,CAC3BnG,EACAoG,EACAC,KAEA,MAAMC,EAAa,GACbC,EAAoB,IAAIC,gBAAgBJ,GAO9C,OANAL,OAAOC,QAAQhG,GAAOyG,SAAQ,EAAEC,EAAW9I,MACzC,MAAM+I,EAAaN,EAAYK,IAAcE,OAC7CN,EAAWI,GAAaC,EACtBJ,EAAkBM,IAAIH,IAAe9I,MAGlC0I,GAEIQ,EAGgC,CAC3CzG,EACAgG,EAAc,MAEd,MAAM5B,GAAW,UACXsC,GAAW,UACXC,GAAe,IAAApF,UACnB,IAAMuE,EAAqB9F,EAAcoE,EAASwC,OAAQZ,IAC1D,CAAChG,EAAcoE,EAASwC,OAAQZ,KAE3Ba,EAAcC,IAAmB,IAAArJ,UAASkJ,GAsCjD,OAnCA,IAAA/F,YAAU,KACR,MAAMmG,EAAWjB,EACf9F,EACAoE,EAASwC,OACTZ,GAEEgB,KAAKC,UAAUF,KAAcC,KAAKC,UAAUJ,IAChDC,EAAgBC,KACf,CAAC3C,EAASwC,OAAQC,EAAc7G,EAAcgG,IA2B1C,CAACa,EAxBoDE,IAC1D,GAAIC,KAAKC,UAAUF,KAAcC,KAAKC,UAAUJ,GAAe,OAC/D,MAAMK,EAAqB,IAAIf,gBAAgB/B,EAASwC,QAExD,IAAIO,GAAU,EACdzB,OAAOC,QAAQ3F,GAAcoG,SAAQ,EAAEC,EAAWe,MAChD,MAAMC,EACJhB,KAAaU,EAAWA,EAASV,GAAae,EAC5CL,EAASV,KAAeQ,EAAaR,KACvCa,EAAmBI,IAAIjB,EAAWE,OAAOc,IACrCA,IAAaD,GACfF,EAAmBK,OAAOlB,GAE5Bc,GAAU,MAKVA,IACF/C,EAASwC,OAASM,EAAmBM,WACrCd,EAAStC,Q,+ECpGf,MAsBA,EAtB2B,gBAAoB,CAC7CqD,WAAY,CACV,kBAAmB,CACjBpJ,KAAM,KACNQ,SAAS,EACTyF,MAAO,MAET,kBAAmB,CACjBjG,KAAM,KACNQ,SAAS,EACTyF,MAAO,MAET,mBAAoB,CAClBjG,KAAM,KACNQ,SAAS,EACTyF,MAAO,OAGXjH,gBAAiB,GACjBC,mBAAoBoK,EAAA,I,aCZtB,MA4FA,EA5F4D,EAC1DC,UAAAA,EACAC,OAAAA,EACAC,kBAAAA,GAAoB,MAEpB,MAAMzD,GAAW,WACX,WAAEqD,EAAU,gBAAEpK,EAAe,mBAAEC,IACnC,IAAA8H,YAAW,IACN0C,EAAUC,IAAe,IAAAtK,UAC7BJ,EAAgBsK,GAAsBK,MAAM,KAAKC,OAAOC,WAEpDC,EAAYC,IAAiB,IAAA3K,UAAS,KAC7C,IAAAmD,YAAU,KACRmH,EACG1K,EAAgBsK,GAAsBK,MAAM,KAAKC,OAAOC,YAE1D,CAAC7K,EAAiBsK,IAErB,MAAMU,GAAY,IAAA9G,UAChB,K,UACE,OAEC,QAFD,IAAsC,QAArC,EAA+B,QAA/B,EAAAkG,MAAAA,OAAU,EAAVA,EAAarD,EAASU,iBAAS,eAAEzG,YAAI,eAAEiK,SAAU,IAAIL,QACnDM,GAAMA,EAAEvK,KAAO2J,WACjB,eAAG,KACN,CAACvD,EAASU,SAAU2C,EAAYE,IAGlC,IACEF,MAAAA,OAAU,EAAVA,EAAarD,EAASU,UAAUjG,YAC/B4I,MAAAA,OAAU,EAAVA,EAAarD,EAASU,UAAUhG,SAEjC,OAAO,gBAACwD,EAAA,EAAO,MACjB,GAAImF,MAAAA,OAAU,EAAVA,EAAarD,EAASU,UAAUR,MAAO,OAAO,KAElD,IAAK+D,EAAW,OAAO,KACvB,MAAMG,EAAmBtK,IACvB,MAAM,MAAEX,EAAOkL,QAASC,GAAcxK,EAAMC,OAC5C,IAAIwK,EAAc,IAAIb,GAClBY,IAAcZ,EAASjC,SAAStI,GAClCoL,EAAY9G,KAAKtE,GAEjBoL,EAAcb,EAASG,QAAQW,GAAMA,IAAMrL,IAE7CD,EAAmB,OAAD,wBACbD,GAAe,CAClB,CAACsK,GAAYgB,EAAYE,OAAOjD,KAAK,SAIzC,OACE,4BAAU3I,UAAU,4CAClB,0BAAQA,UAAU,mBACf2K,GACAH,MAAAA,OAAU,EAAVA,EAAarD,EAASU,UAAUjG,WAC/B4I,MAAAA,OAAU,EAAVA,EAAarD,EAASU,UAAUhG,UAAW,gBAACwD,EAAA,EAAO,CAACC,KAAK,WAE5DsF,GACC,yBACE3K,KAAK,OACLa,YAAY,kBACZd,UAAU,iBACVM,MAAO4K,EACPlK,SAAWoE,GAAQ+F,EAAc/F,EAAIlE,OAAOZ,SAG/C8K,EAAUS,YACRb,QACC,EAAGtD,MAAAA,EAAOpH,MAAAA,KACO,KAAf4K,GACAxD,EAAMoE,cAAclD,SAASsC,EAAWY,gBACxCxL,EAAMwL,cAAclD,SAASsC,EAAWY,iBAE3CrG,KAAI,EAAGiC,MAAAA,EAAOpH,MAAAA,EAAOyL,MAAAA,KACpB,uBAAK/L,UAAU,wCAAwCiG,IAAK3F,GAC1D,yBACEL,KAAK,WACL+L,KAAM1L,EACNA,MAAOA,EACPS,GAAIT,EACJN,UAAU,oBACVgB,SAAUuK,EACVC,QAASX,EAASjC,SAAStI,KAE7B,yBAAON,UAAU,iBAAiBa,QAASP,GACzC,wBAAMN,UAAU,4BACb0H,E,IAAO,wBAAM1H,UAAU,aAAa+L,UCrE/CE,EAAkD,EACtD3L,MAAAA,EACAoH,MAAAA,EACAqE,MAAAA,EACAG,eAAAA,EACAC,MAAAA,EAAQ,EACRC,aAAAA,EACAb,gBAAAA,EACAc,WAAAA,MAEA,MAAOC,EAAiBC,IAAsB,IAAA/L,UAAS4L,EAAa9L,IACpE,OACE,uBACEgH,MAAO,CACLkF,WAAuB,GAARL,EAAH,QAGd,uBAAKnM,UAAU,0BACZkM,MAAAA,OAAc,EAAdA,EAAgBlI,QACf,0BACE/D,KAAK,SACLD,UAAU,cACVE,QAAS,IAAMqM,GAAoBD,IAElCA,EAAkB,IAAM,KAG3B,wBAAMtM,UAAU,wBAElB,uBAAKA,UAAU,yCACb,yBACEC,KAAK,WACL+L,KAAM1L,EACNA,MAAOA,EACPS,GAAIT,EACJN,UAAU,oBACVgB,SAAUuK,EACVC,QAASa,EAAW/L,KAEtB,yBAAON,UAAU,iBAAiBa,QAASP,GACzC,wBAAMN,UAAU,4BACb0H,E,IAAO,wBAAM1H,UAAU,aAAa+L,OAK5CG,GACCA,EAAelI,QACfsI,GACAJ,EAAezG,KACb,EACEiC,MAAO+E,EACPnM,MAAOoM,EACPX,MAAOY,EACP5F,SAAU6F,KAEV,gBAACX,EAAe,CACdhG,IAAK,GAAG3F,KAASoM,IACjBhF,MAAO+E,EACPnM,MAAO,GAAGA,KAASoM,IACnBX,MAAOY,EACPR,MAAOA,EAAQ,EACfD,eAAgBU,EAChBrB,gBAAiBA,EACjBc,WAAYA,EACZD,aAAcA,QAmF5B,EAtEqE,EACnE1B,UAAAA,EACAC,OAAAA,MAEA,MAAMxD,GAAW,WACX,WAAEqD,EAAU,gBAAEpK,EAAe,mBAAEC,IACnC,IAAA8H,YAAW,IACN0C,EAAUC,IAAe,IAAAtK,UAC7BJ,EAAgBsK,GAAsBK,MAAM,KAAKC,OAAOC,WAE3D,IAAAtH,YAAU,KACRmH,EACG1K,EAAgBsK,GAAsBK,MAAM,KAAKC,OAAOC,YAE1D,CAAC7K,EAAiBsK,IAErB,MAAMU,GAAY,IAAA9G,UAChB,K,UACE,OAEC,QAFD,IAAsC,QAArC,EAA+B,QAA/B,EAAAkG,MAAAA,OAAU,EAAVA,EAAarD,EAASU,iBAAS,eAAEzG,YAAI,eAAEiK,SAAU,IAAIL,QACnDM,GAAMA,EAAEvK,KAAO2J,WACjB,eAAG,KACN,CAACvD,EAASU,SAAU2C,EAAYE,IAGlC,IACEF,MAAAA,OAAU,EAAVA,EAAarD,EAASU,UAAUjG,YAC/B4I,MAAAA,OAAU,EAAVA,EAAarD,EAASU,UAAUhG,SAEjC,OAAO,gBAACwD,EAAA,EAAO,MACjB,GAAImF,MAAAA,OAAU,EAAVA,EAAarD,EAASU,UAAUR,MAAO,OAAO,KAElD,IAAK+D,EAAW,OAAO,KAEvB,MAAMG,EAAmBtK,IACvB,MAAM,MAAEX,EAAOkL,QAASC,GAAcxK,EAAMC,OAC5C,IAAIwK,EAAc,IAAIb,GAClBY,IAAcZ,EAASjC,SAAStI,GAClCoL,EAAY9G,KAAKtE,GAEjBoL,EAAcb,EAASG,QAAQW,GAAMA,IAAMrL,IAE7CD,EAAmB,OAAD,wBACbD,GAAe,CAClB,CAACsK,GAAYgB,EAAYE,OAAOjD,KAAK,SAIzC,OACE,4BAAU3I,UAAU,4CAClB,0BAAQA,UAAU,mBACf2K,GACAH,MAAAA,OAAU,EAAVA,EAAarD,EAASU,UAAUjG,WAC/B4I,MAAAA,OAAU,EAAVA,EAAarD,EAASU,UAAUhG,UAAW,gBAACwD,EAAA,EAAO,CAACC,KAAK,WAE5D8F,EAAUS,YAAYpG,KAAI,EAAGiC,MAAAA,EAAOpH,MAAAA,EAAOyL,MAAAA,EAAOhF,SAAAA,KACjD,gBAACkF,EAAe,CACdhG,IAAK3F,EACLoH,MAAOA,EACPpH,MAAOA,EACPyL,MAAOA,EACPG,eAAgBnF,EAChBwE,gBAAiBA,EACjBc,WAAazL,GAAMiK,EAASjC,SAAShI,GACrCwL,aAAexL,GAAMiK,EAASgC,MAAMlB,GAAMA,EAAE7D,WAAWlH,W,cCtJjE,MAAMkM,EAAW,CAACC,EAAmBC,IACnCD,EAAGrI,MAAQsI,EAAGtI,KAAOqI,EAAGE,MAAQD,EAAGC,IAwErC,EAtEsC,EACpCA,IAAAA,EACAvI,IAAAA,EACAwI,UAAAA,GAAY,EACZC,UAAAA,EAAY,KACZnM,SAAAA,EAAW,CAAC2K,GAAMA,OAElB,MAAOyB,EAAkBC,IAAuB,IAAA7M,UAAS,CACvDyM,IAAKE,GAAa,QAASA,EAAYA,EAAUF,IAAMA,EACvDvI,IAAKyI,GAAa,QAASA,EAAYA,EAAUzI,IAAMA,IAGnDjE,GAAY,IAAAC,cAAY,EAAAC,EAAA,GAASK,EAAU,KAAM,IAcvD,OAbA,IAAA2C,YAAU,KACHmJ,EAASM,EAAkBD,IAC9B1M,EAAU2M,KAGX,CAACA,KACJ,IAAAzJ,YAAU,KACHmJ,EAASM,EAAkBD,IAC9BE,EAAoBF,KAGrB,CAACA,IAGF,uBAAKnN,UAAU,yBACb,yBACEC,KAAK,QACLgN,IAAKA,EACLvI,IAAKA,EACLsH,KAAK,MACL1L,MAAO8M,EAAiBH,IACxBjN,UAAU,WACV4G,UAAWsG,EACXlM,SAAWoE,IACTiI,EAAoB,CAClBJ,IAAKnL,OAAOsD,EAAIlE,OAAOZ,OACvBoE,IAAK0I,EAAiB1I,SAI5B,yBACEzE,KAAK,QACLgN,IAAKA,EACLvI,IAAKA,EACLsH,KAAK,MACL1L,MAAO8M,EAAiB1I,IACxB1E,UAAU,QACV4G,UAAWsG,EACXlM,SAAWoE,IACTiI,EAAoB,CAClB3I,IAAK5C,OAAOsD,EAAIlE,OAAOZ,OACvB2M,IAAKG,EAAiBH,SAI5B,uBAAKjN,UAAU,UACb,uBAAKA,UAAU,aACb,4BAAOyE,KAAKwI,IAAIG,EAAiBH,IAAKG,EAAiB1I,OAEzD,uBAAK1E,UAAU,aACb,4BAAOyE,KAAKC,IAAI0I,EAAiBH,IAAKG,EAAiB1I,UChDjE,EA3BsC,EACpC3D,GAAAA,EACAC,SAAAA,EAAW,CAACJ,GAAMA,GAClB0M,KAAAA,GAAO,MAEP,MAAOhN,EAAOC,IAAY,IAAAC,UAAS8M,GAMnC,OALA,IAAA3J,YAAU,KACRpD,EAAS+M,GACTtM,EAASsM,KACR,CAACA,EAAMtM,IAGR,2BACE,yBACEhB,UAAU,YACVC,KAAK,WACLc,GAAIA,EACJyK,QAASlL,EACTU,SAAU,KACRA,GAAUV,GACVC,GAAUD,QCkCpB,GAAe,IAAAiN,OApDqB,KAClC,MAAM,gBAAEnN,EAAe,mBAAEC,IACvB,IAAA8H,YAAW,IACNqF,EAASC,IAAc,IAAAjN,YAAWJ,EAAgBsN,cAClDC,EAAOC,IAAY,IAAApN,UACvBJ,EAAgBsN,YACd3C,MAAM,KACNC,OAAOC,SACPxF,IAAI3D,SAyBT,OAvBA,IAAA6B,YAAU,KACR,MAAMkK,EAAYzN,EAAgBsN,YAC/B3C,MAAM,KACNC,OAAOC,SACPxF,IAAI3D,QACP8L,EAASC,KACR,CAACzN,EAAgBsN,cAkBlB,4BAAU1N,UAAU,kEAClB,0BAAQA,UAAU,mBAAiB,oBACnC,uBAAKA,UAAU,wBACb,gBAAC,EAAM,CAACe,GAAG,cAAcC,SAnBTkM,IACpBO,EAAWP,GACNA,GACH7M,EAAmB,OAAD,wBACbD,GAAe,CAClBsN,YAAa,OAcoCJ,KAAME,IACvD,gBAAC,EAAM,CACLP,KA1CE,GA2CFvI,IA1CE,IA2CFwI,UAAWM,EACXL,UAAW,CACTF,KAAKU,MAAAA,OAAK,EAALA,EAAQ,MA9Cb,GA+CAjJ,KAAKiJ,MAAAA,OAAK,EAALA,EAAQ,KA9Cb,KAgDF3M,SAnBa,EAAGiM,IAAAA,EAAKvI,IAAAA,MAC3BrE,EAAmB,OAAD,wBACbD,GAAe,CAClBsN,YAAa,GAAGT,KAAOvI,eCmB7B,GAAe,IAAA6I,OAjDe,KAC5B,MAAM,gBAAEnN,EAAe,mBAAEC,IACvB,IAAA8H,YAAW,IACNqF,EAASC,IAAc,IAAAjN,YAAWJ,EAAgB+L,QAClDwB,EAAOC,IAAY,IAAApN,UACvBJ,EAAgB+L,MAAiBpB,MAAM,KAAKC,OAAOC,SAASxF,IAAI3D,SAyBnE,OAvBA,IAAA6B,YAAU,KACR,MAAMkK,EAAYzN,EAAgB+L,MAC/BpB,MAAM,KACNC,OAAOC,SACPxF,IAAI3D,QACP8L,EAASC,KACR,CAACzN,EAAgB+L,QAkBlB,4BAAUnM,UAAU,4DAClB,0BAAQA,UAAU,mBAAiB,kBACnC,uBAAKA,UAAU,wBACb,gBAAC,EAAM,CAACe,GAAG,cAAcC,SAnBTkM,IACpBO,EAAWP,GACNA,GACH7M,EAAmB,OAAD,wBACbD,GAAe,CAClB+L,MAAO,OAc0CmB,KAAME,IACvD,gBAAC,EAAM,CACLP,IAvCE,EAwCFvI,IAvCE,IAwCFwI,UAAWM,EACXL,UAAW,CACTF,KAAKU,MAAAA,OAAK,EAALA,EAAQ,KA3Cb,EA4CAjJ,KAAKiJ,MAAAA,OAAK,EAALA,EAAQ,KA3Cb,KA6CF3M,SAnBa,EAAGiM,IAAAA,EAAKvI,IAAAA,MAC3BrE,EAAmB,OAAD,wBACbD,GAAe,CAClB+L,MAAO,GAAGc,KAAOvI,e,cClCvB,MAsDA,EAtD6B,KAC3B,MAAM,gBAAEtE,EAAe,mBAAEC,IACvB,IAAA8H,YAAW,IACN2F,EAAaC,IAAkB,IAAAvN,UACpCJ,EAAgB4N,OAKlB,OAHA,IAAArK,YAAU,KACRoK,EAAe3N,EAAgB4N,SAC9B,CAAC5N,EAAgB4N,QAElB,uBAAKhO,UAAU,qEACb,uBAAKA,UAAU,qBACb,uBAAKA,UAAU,mCACb,yBACEC,KAAK,OACLa,YAAY,0BACZC,GAAG,iBACHf,UAAU,oEACVM,MAAOwN,EACP9M,SAAWoE,IACT2I,EAAe3I,EAAIlE,OAAOZ,WAIhC,uBAAKN,UAAU,mCACb,0BACEC,KAAK,SACLD,UAAU,yEACVE,QAAS,KACPG,EAAmB,OAAD,wBACbD,GAAe,CAClB4N,MAAOF,OAIX,wBAAM9N,UAAU,mBAAiB,WACjC,wBAAMA,UAAU,kCAElB,0BACEC,KAAK,SACLD,UAAU,yEACVE,QAAS,KACPG,EAAmB,MAGrB,wBAAML,UAAU,mBAAiB,cACjC,wBAAMA,UAAU,4C,sDCtC5B,MAAMiO,EAAU,CACd,kBAAmB,CACjBvG,MAAO,UACP5E,QAAS,CACP,CACE/B,GAAI,WACJmN,OAAQ,YACRC,SAAWC,GAAUA,EAAMrN,GAC3BsN,KAAM,EAAG7H,KAAAA,KACP,gBAAC,KAAI,CAACoB,GAAI,YAAYpB,EAAKlG,SAAUkG,EAAKlG,QAG9C,CACES,GAAI,SACJmN,OAAQ,gBACRC,SAAWC,IAAS,QAAC,OAA0B,QAA1B,EAAa,QAAb,EAAAA,MAAAA,OAAK,EAALA,EAAOE,cAAM,eAAEC,mBAAW,eAAG,KAAM,IACxDF,KAAM,EAAG7H,KAAAA,KACP,4BACE,gBAACgI,EAAA,EAAO,CAAC1H,KAAM,KAAeN,EAAKlG,OAAQkG,EAAKlG,SAItD,CACES,GAAI,QACJmN,OAAQ,QACRC,SAAWC,IAAS,QAAC,OAAyB,QAAzB,EAAa,QAAb,EAAAA,MAAAA,OAAK,EAALA,EAAOE,cAAM,eAAEG,kBAAU,eAAE9F,KAAK,MACrD0F,KAAM,EAAG7H,KAAAA,KAAW,4BAAOA,EAAKlG,QAElC,CACES,GAAI,SACJmN,OAAQ,cACRC,SAAWC,IAAS,QAAC,OAA0B,QAA1B,EAAa,QAAb,EAAAA,MAAAA,OAAK,EAALA,EAAOE,cAAM,eAAEI,mBAAW,eAAG,IAClDL,KAAM,EAAG7H,KAAAA,KAAW,4BAAOA,EAAKlG,UAItC,kBAAmB,CACjBoH,MAAO,UACP5E,QAAS,CACP,CACE/B,GAAI,YACJmN,OAAQ,SACRC,SAAWQ,GAAWA,EAAO5N,GAC7BsN,KAAM,EAAG7H,KAAAA,KACP,gBAAC,KAAI,CAACoB,GAAI,YAAYpB,EAAKlG,SAAUkG,EAAKlG,QAG9C,CACES,GAAI,YACJmN,OAAQ,YACRC,SAAWQ,IAAU,QAAC,OAAqC,QAArC,EAAc,QAAd,EAAAA,MAAAA,OAAM,EAANA,EAAQL,cAAM,eAAEM,6BAAqB,eAAG,KAAM,IACpEP,KAAM,EAAG7H,KAAAA,KACP,gBAAC,KAAI,CAACoB,GAAI,YAAYpB,EAAKlG,SAAUkG,EAAKlG,QAG9C,CACES,GAAI,cACJmN,OAAQ,OACRW,UAAW,CAAC,mBACZV,SAAWC,IAAS,QAAC,OAAmB,QAAnB,EAAa,QAAb,EAAAA,MAAAA,OAAK,EAALA,EAAOE,cAAM,eAAEtC,YAAI,eAAG,IAC3CqC,KAAM,EAAG7H,KAAAA,KAAW,4BAAOA,EAAKlG,QAElC,CACES,GAAI,qBACJmN,OAAQ,cACRW,UAAW,CAAC,mBACZV,SAAWC,IAAS,QAAC,OAA0B,QAA1B,EAAa,QAAb,EAAAA,MAAAA,OAAK,EAALA,EAAOE,cAAM,eAAEQ,mBAAW,eAAG,IAClDT,KAAM,EAAG7H,KAAAA,KAAW,4BAAOA,EAAKlG,UAItC,mBAAoB,CAClBoH,MAAO,WACP5E,QAAS,CACP,CACE/B,GAAI,cACJmN,OAAQ,WACRC,SAAWY,IAAcA,EAAShO,IAAM,IAAIgK,MAAM,KAClDsD,KAAM,EAAG7H,KAAAA,KACP,gBAAC,KAAI,CAACoB,GAAI,aAAapB,EAAKlG,MAAM,cAAckG,EAAKlG,MAAM,MACxDkG,EAAKlG,MAAM,KAIlB,CACES,GAAI,WACJmN,OAAQ,mBACRC,SAAWY,IAAY,QAAC,OAAkC,QAAlC,EAAgB,QAAhB,EAAAA,MAAAA,OAAQ,EAARA,EAAUT,cAAM,eAAEU,wBAAgB,eAAG,KAAM,IACnEX,KAAM,EAAG7H,KAAAA,KACP,4BACE,gBAAC,KAAI,CAACoB,GAAI,cAAcpB,EAAKlG,SAAUkG,EAAKlG,SAIlD,CACES,GAAI,YACJmN,OAAQ,SACRC,SAAWY,IAAY,QAAC,OAAsC,QAAtC,EAAgB,QAAhB,EAAAA,MAAAA,OAAQ,EAARA,EAAUT,cAAM,eAAEW,4BAAoB,eAAG,IACjEZ,KAAM,EAAG7H,KAAAA,KACP,gBAAC,KAAI,CAACoB,GAAI,YAAYpB,EAAKlG,SAAUkG,EAAKlG,QAG9C,CACES,GAAI,YACJmN,OAAQ,YACRC,SAAWY,IAAY,QACrB,OAAuC,QAAvC,EAAgB,QAAhB,EAAAA,MAAAA,OAAQ,EAARA,EAAUT,cAAM,eAAEM,6BAAqB,eAAG,KAAM,IAClDP,KAAM,EAAG7H,KAAAA,KACP,gBAAC,KAAI,CAACoB,GAAI,YAAYpB,EAAKlG,SAAUkG,EAAKlG,QAG9C,CACES,GAAI,aACJmN,OAAQ,kBACRC,SAAWY,IAAY,QAAC,OAAiC,QAAjC,EAAgB,QAAhB,EAAAA,MAAAA,OAAQ,EAARA,EAAUT,cAAM,eAAEY,uBAAe,eAAG,IAC5Db,KAAM,EAAG7H,KAAAA,KAAW,4BAAOA,EAAKlG,WA8CxC,EAvC8B,KAC5B,MAAM,SAAEuH,IAAa,WACf,WAAE2C,IAAe,IAAArC,YAAW,IAC5B,KAAE/G,EAAI,QAAEQ,EAAO,MAAEyF,EAAK,QAAExF,IAAY2I,MAAAA,OAAU,EAAVA,EAAa3C,KAAa,GAG9D/E,GAAU,IAAAwB,UAAQ,KAAK,MAAC,OAAmB,QAAnB,EAAA2J,MAAAA,OAAO,EAAPA,EAAUpG,UAAS,eAAE/E,UAAS,CAAC+E,IAC7D,GAAIjG,KAAaC,IAAYT,GAAO,OAAO,gBAACiE,EAAA,EAAO,CAACC,KAAK,UACzD,GAAI+B,IAAUjG,EAAM,OAAO,gBAAC+N,EAAA,EAAU,CAAC9H,MAAOA,IAC9C,MAAM+H,EAAe,CACnBhO,KAAMA,EAAKsH,QACX2G,MAAO,GACPrM,KAAM,CACJC,WAAY,CACVC,MAAOuB,KAAK6K,KAAMlO,EAAKmO,SAhBb,IAiBVxD,MAAO,GACPpH,KAAM,KAKZ,OACE,gBAAC6K,EAAA,EAAQ,CACPrO,KAAM2B,EACN1B,KAAMgO,EACN/N,MAAO,K,MAAM,OACX,iCACsB,QAAnB,EAAA4M,MAAAA,OAAO,EAAPA,EAAUpG,UAAS,eAAEH,QAAS,GAAI,IACnC,wBAAM1H,UAAU,aAAaoB,EAAKmO,YAGtChO,YAAa,EACbvB,UAAU,mBACV4B,QAASA,EACTC,QAASA,K,wBCvJf,MAUM4N,EAAY,CAACC,EAAsBtP,IACvCsP,EACGjK,KAAKuG,IAAS2D,OATIjF,EASUsB,EAAM5L,EAAgB4L,GAPlDjB,MAAM,KACNC,OAAOC,SACPxF,KAAK7E,GAAM,GAAG8J,KAAa9J,MAC3B+H,KAAK,KALY,IAAC+B,KAUlBM,OAAOC,SACPtC,KAAK,KAEJiH,EAAkB,CACtBC,EACAzP,EACA+J,KAEA,MAAM6D,EAAQ6B,EACXpK,KAAKuG,IACJ,OAAQA,GACN,IAAK,QACH,OAAO5L,EAAgB4L,GACzB,IAAK,cACL,IAAK,QAAS,CACZ,MAAM6B,EAAYzN,EAAgB4L,GAC/BjB,MAAM,KACNC,OAAOC,SACPxF,IAAI3D,QAEP,OAA2B,IAApB+L,EAAS7J,OACZ,GAAGgI,MAASvH,KAAKwI,OAAOY,SAAgBpJ,KAAKC,OAAOmJ,MACpD,GAEN,QACE,MAAO,OAGZ7C,OAAOC,SACV,OAAI+C,EAAMhK,OAAegK,EAAMrF,KAAK,SAC7BwB,GAGH2F,EAA2D,EAC/DlI,GAAAA,EACAF,MAAAA,M,QAEA,MAAM,WAAE8C,IAAe,IAAArC,YAAW,GAClC,OACE,gCACGT,EACD,wBAAM1H,UAAU,cACS,QAAtB,EAAgB,QAAhB,EAAAwK,MAAAA,OAAU,EAAVA,EAAa5C,UAAG,eAAExG,YAAI,eAAEmO,WAAY,MAMvC9H,EAAO,CACX,CACEG,GAAI,kBACJF,MAAO,IAAM,gBAACoI,EAAe,CAAClI,GAAG,kBAAkBF,MAAM,aAE3D,CACEE,GAAI,kBACJF,MAAO,IAAM,gBAACoI,EAAe,CAAClI,GAAG,kBAAkBF,MAAM,aAE3D,CACEE,GAAI,mBACJF,MAAO,IAAM,gBAACoI,EAAe,CAAClI,GAAG,mBAAmBF,MAAM,eA0M9D,EAtMiC,KAC/B,MAAOtH,EAAiBC,IAAsB,OAAwB,CACpE2N,MAAO,GACPU,YAAa,GACbqB,MAAO,GACPrC,YAAa,GACbvB,MAAO,GACP+C,gBAAiB,GACjBc,kBAAmB,GACnBC,cAAe,GACfC,eAAgB,GAChBC,UAAW,GACXC,SAAU,GACVpB,iBAAkB,GAClBqB,GAAI,GACJC,SAAU,KAGNC,GAAoB,EAAAC,EAAA,GAAiB,wBAAyB,CAClExC,MAAO4B,EACL,CAAC,SACDxP,EACA,uCAEFkF,KApGc,GAqGdgJ,OAAQ,qCACRmC,WAAY,GACZC,YAtGgB,EAuGhBrF,OAAQoE,EAAU,CAAC,cAAe,SAAUrP,KAExCuQ,GAAoB,EAAAH,EAAA,GAAiB,uBAAwB,CACjExC,MAAO4B,EACL,CAAC,QAAS,cAAe,SACzBxP,EACA,sCAEFkF,KAhHc,GAiHdgJ,OAAQ,yCACRmC,WAAY,GACZC,YAlHgB,EAmHhBrF,OAAQoE,EACN,CACE,QACA,kBACA,gBACA,iBACA,oBACA,aAEFrP,KAGEwQ,GAAqB,EAAAJ,EAAA,GAAiB,wBAAyB,CACnExC,MAAO4B,EACL,CAAC,QAAS,cAAe,SACzBxP,EACA,uCAEFkF,KAtIc,GAuIdgJ,OACE,8EACFmC,WAAY,GACZC,YAzIgB,EA0IhBrF,OAAQoE,EACN,CACE,QACA,WACA,mBACA,kBACA,KACA,YAEFrP,KAGEyQ,GAAU,IAAAvM,UACd,KAAM,CACJkG,WAAY,CACV,kBAAmB+F,EACnB,kBAAmBI,EACnB,mBAAoBC,GAEtBxQ,gBAAAA,EACAC,mBAAAA,KAEF,CACEkQ,EACAI,EACAC,EACAxQ,EACAC,IAIJ,OACE,2BAASL,UAAU,6BACjB,0CACA,gBAAC,WAA2B,CAACM,MAAOuQ,GAClC,gBAACC,EAAU,MACX,gBAACC,EAAA,EAAI,CAACtJ,KAAMA,IACZ,2BAASzH,UAAU,WACjB,uBAAKA,UAAU,0BACb,gBAAC,KAAM,KACL,gBAAC,KAAK,CACJgR,KAAK,UACLC,QACE,gCACE,gBAACC,EAA6B,CAC5BxG,UAAU,QACVC,OAAO,UAET,gBAACwG,EAAoB,CACnBzG,UAAU,cACVC,OAAO,cACPC,mBAAiB,OAKzB,gBAAC,KAAK,CACJoG,KAAK,UACLC,QACE,gCACE,gBAACG,EAAiB,MAClB,gBAACC,EAAW,MACZ,gBAACH,EAA6B,CAC5BxG,UAAU,QACVC,OAAO,UAET,gBAACwG,EAAoB,CACnBzG,UAAU,kBACVC,OAAO,oBAET,gBAACwG,EAAoB,CACnBzG,UAAU,oBACVC,OAAO,sBAET,gBAACwG,EAAoB,CACnBzG,UAAU,gBACVC,OAAO,gBACPC,mBAAiB,IAEnB,gBAACuG,EAAoB,CACnBzG,UAAU,iBACVC,OAAO,mBAET,gBAACwG,EAAoB,CACnBzG,UAAU,YACVC,OAAO,iBAKf,gBAAC,KAAK,CACJqG,KAAK,WACLC,QACE,gCACE,gBAACG,EAAiB,MAClB,gBAACC,EAAW,MACZ,gBAACH,EAA6B,CAC5BxG,UAAU,WACVC,OAAO,aAET,gBAACuG,EAA6B,CAC5BxG,UAAU,QACVC,OAAO,UAET,gBAACwG,EAAoB,CACnBzG,UAAU,mBACVC,OAAO,qBAET,gBAACwG,EAAoB,CACnBzG,UAAU,kBACVC,OAAO,oBAET,gBAACwG,EAAoB,CACnBzG,UAAU,KACVC,OAAO,KACPC,mBAAiB,IAEnB,gBAACuG,EAAoB,CACnBzG,UAAU,WACVC,OAAO,WACPC,mBAAiB,OAKzB,gBAAC,KAAK,CAAC0G,OAAK,EAACL,QAAS,gBAAC,KAAQ,CAACrJ,GAAG,UAAUzD,SAAO,QAGxD,gBAAC,EAAW,W,8EC3Rf,MAAMoN,EAAe,0CACfC,EACX,8FACWC,EAAoB,yCACpBC,EAAkB,gDAClBC,EAAmB,2CACnBC,EAAa","sources":["webpack://mgportalv2/./src/components/UI/EMGTable/PaginationButton/index.tsx","webpack://mgportalv2/./src/components/UI/TextInputDebounced/index.tsx","webpack://mgportalv2/./src/components/UI/EMGTable/index.tsx","webpack://mgportalv2/./src/components/UI/ExtLink/index.tsx","webpack://mgportalv2/./src/components/UI/FetchError/index.tsx","webpack://mgportalv2/./src/components/UI/Tabs/index.tsx","webpack://mgportalv2/./src/hooks/data/useEBISearchData/index.tsx","webpack://mgportalv2/./src/hooks/useQueryParamState/index.tsx","webpack://mgportalv2/./src/pages/TextSearch/SearchQueryContext.tsx","webpack://mgportalv2/./src/components/Search/Filter/MultipleOption/index.tsx","webpack://mgportalv2/./src/components/Search/Filter/HierarchyMultipleOption/index.tsx","webpack://mgportalv2/./src/components/UI/Slider/index.tsx","webpack://mgportalv2/./src/components/UI/Switch/index.tsx","webpack://mgportalv2/./src/components/Search/Filter/Temperature/index.tsx","webpack://mgportalv2/./src/components/Search/Filter/Depth/index.tsx","webpack://mgportalv2/./src/components/Search/Filter/Text/index.tsx","webpack://mgportalv2/./src/components/Search/Table/index.tsx","webpack://mgportalv2/./src/pages/TextSearch/index.tsx","webpack://mgportalv2/./src/utils/urls.ts"],"sourcesContent":["import React, { MouseEventHandler } from 'react';\n\ntype PaginationButtonProps = {\n  currentPageIndex: number;\n  pageIndex: number;\n  gotoPage: (pageIndex: number) => MouseEventHandler;\n};\n\nconst PaginationButton: React.FC<PaginationButtonProps> = ({\n  currentPageIndex,\n  pageIndex,\n  gotoPage,\n}) => {\n  if (currentPageIndex === pageIndex) {\n    return (\n      <li className=\"vf-pagination__item vf-pagination__item--is-active\">\n        <span className=\"vf-pagination__label\" aria-current=\"page\">\n          <span className=\"vf-u-sr-only\">Page </span>\n          {currentPageIndex + 1}\n        </span>\n      </li>\n    );\n  }\n  return (\n    <li className=\"vf-pagination__item\">\n      <button\n        type=\"button\"\n        onClick={() => gotoPage(pageIndex)}\n        className=\"vf-button vf-button--link vf-pagination__link\"\n      >\n        <span className=\"vf-u-sr-only\"> page</span>\n        {pageIndex + 1}\n      </button>\n    </li>\n  );\n};\n\nexport default PaginationButton;\n","import React, { useState, useCallback } from 'react';\nimport { debounce } from 'lodash-es';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport './style.css';\n\ntype TextInputDebouncedProps = {\n  namespace: string;\n};\nconst TextInputDebounced: React.FC<TextInputDebouncedProps> = ({\n  namespace,\n}) => {\n  const [queryParameters, setQueryParameters] = useQueryParametersState({\n    [`${namespace}search`]: '',\n  });\n  const [value, setValue] = useState(\n    (queryParameters[`${namespace}search`] as string) || ''\n  );\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounced = useCallback(\n    debounce((v: string): void => {\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}search`]: v,\n      });\n    }, 300),\n    []\n  );\n  const handleOnChange = (event): void => {\n    const v = event.target.value;\n    setValue(v);\n    debounced(v);\n  };\n  return (\n    <div className=\"vf-form__item mg-textsearch\">\n      <label className=\"vf-form__label vf-search__label\" htmlFor=\"searchitem\">\n        Filter\n      </label>\n      <input\n        type=\"search\"\n        placeholder=\"Enter your search terms\"\n        id=\"searchitem\"\n        className=\"vf-form__input\"\n        onChange={handleOnChange}\n        value={value}\n      />\n    </div>\n  );\n};\n\nexport default TextInputDebounced;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n  useRef,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEventHandler,\n} from 'react';\nimport { Column, usePagination, useSortBy, useTable } from 'react-table';\n\nimport Loading from 'components/UI/Loading';\nimport { MGnifyResponse, MGnifyDatum } from 'src/hooks/data/useData';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport PaginationButton from './PaginationButton';\n\nimport './style.css';\nimport TextInputDebounced from '../TextInputDebounced';\n\ntype PaginationRanges = {\n  startingPages: number[];\n  endingPages: number[];\n  adjacentPages: number[];\n  hasJumpFromStart: boolean;\n  hasJumpToEnd: boolean;\n};\n\nfunction getPaginationRanges(\n  pageIndex: number,\n  pageCount: number\n): PaginationRanges {\n  const startingPages = pageCount > 1 ? [0, 1] : [0];\n\n  const adjacentPages = pageCount > 2 ? [Math.max(2, pageIndex - 2)] : [];\n  for (\n    let page = adjacentPages[0] + 1;\n    page < pageCount - 2 && adjacentPages.length < 5;\n    page += 1\n  ) {\n    adjacentPages.push(page);\n  }\n\n  let endingPages = [];\n  if (pageCount > 7) {\n    endingPages = [pageCount - 2, pageCount - 1];\n  } else if (pageCount > 6) {\n    endingPages = [pageCount - 1];\n  }\n\n  return {\n    startingPages,\n    endingPages,\n    adjacentPages,\n    hasJumpFromStart:\n      !!adjacentPages.length &&\n      adjacentPages[0] > startingPages[startingPages.length - 1] + 1,\n    hasJumpToEnd:\n      !!endingPages.length &&\n      !!adjacentPages.length &&\n      endingPages[0] > adjacentPages[adjacentPages.length - 1] + 1,\n  };\n}\n\nfunction getOrderingQueryParamFromSortedColumn(\n  tableSortBy: Array<{ id: string; desc: boolean }>\n): string {\n  if (!tableSortBy.length) return '';\n  const col = tableSortBy[0];\n  return `${col.desc ? '-' : ''}${col.id\n    .replace(/attributes./g, '')\n    .replace(/-/g, '_')}`;\n}\n\ntype EMGTableProps = {\n  cols: Column[];\n  data: MGnifyResponse | Array<MGnifyDatum>;\n  title?: string | React.ElementType;\n  showPagination?: boolean;\n  showTextFilter?: boolean;\n  initialPage?: number;\n  initialPageSize?: number;\n  className?: string;\n  namespace?: string;\n  sortable?: boolean;\n  loading?: boolean;\n  isStale?: boolean;\n};\n\nconst EMGTable: React.FC<EMGTableProps> = ({\n  cols,\n  data,\n  title: Title,\n  initialPage = 0,\n  initialPageSize = 25,\n  className = '',\n  namespace = '',\n  showPagination = true,\n  showTextFilter = false,\n  sortable = false,\n  loading = false,\n  isStale = false,\n}) => {\n  const [queryParameters, setQueryParameters] = useQueryParametersState(\n    {\n      [`${namespace}page`]: 1,\n      [`${namespace}order`]: '',\n      [`${namespace}page_size`]: initialPageSize,\n      [`${namespace}search`]: initialPageSize,\n    },\n    {\n      [`${namespace}page`]: Number,\n      [`${namespace}page_size`]: Number,\n    }\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    setPageSize,\n    nextPage,\n    previousPage,\n    state: { pageIndex, pageSize, sortBy },\n  } = useTable(\n    {\n      columns: cols,\n      data: (data as MGnifyResponse)?.data || data,\n      initialState: {\n        pageIndex: initialPage,\n        pageSize: queryParameters[`${namespace}page_size`],\n      },\n      pageCount: (data as MGnifyResponse)?.meta?.pagination?.pages || 1,\n      manualPagination: true,\n      manualSortBy: true,\n    },\n    useSortBy,\n    usePagination\n  );\n  const tableRef = useRef(null);\n  const [isChangingPage, setChangingPage] = useState(false);\n\n  useEffect(() => {\n    if (\n      showPagination &&\n      queryParameters[`${namespace}page`] !== pageIndex + 1\n    ) {\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}page`]: pageIndex + 1,\n      });\n      if (tableRef.current && isChangingPage) {\n        tableRef.current.scrollIntoView();\n        setChangingPage(false);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showPagination, setQueryParameters, pageIndex]);\n\n  useEffect(() => {\n    if (\n      showPagination &&\n      queryParameters[`${namespace}page_size`] !== pageSize\n    ) {\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}page_size`]: pageSize,\n      });\n      if (tableRef.current && isChangingPage) {\n        tableRef.current.scrollIntoView();\n        setChangingPage(false);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showPagination, setQueryParameters, pageSize]);\n\n  useEffect(() => {\n    if (sortable) {\n      const order = getOrderingQueryParamFromSortedColumn(sortBy);\n      if (order === queryParameters[`${namespace}order`]) return;\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}order`]: order,\n        [`${namespace}page`]: 1,\n      });\n      if (tableRef.current && isChangingPage) {\n        tableRef.current.scrollIntoView();\n        setChangingPage(false);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showPagination, setQueryParameters, sortBy, sortable]);\n\n  const paginationRanges = useMemo(\n    () => getPaginationRanges(pageIndex, pageCount),\n    [pageIndex, pageCount]\n  );\n  const goToPageAndScroll = (pageNumber): MouseEventHandler => {\n    setChangingPage(true);\n    return gotoPage(pageNumber);\n  };\n  const changeSizeAndScroll = (evt): void => {\n    setChangingPage(true);\n    return setPageSize(+evt.target.value);\n  };\n\n  if (loading && !isStale) return <Loading size=\"small\" />;\n\n  return (\n    <section>\n      <div className=\"mg-table-overlay-container\">\n        <div className={loading && isStale ? 'mg-table-overlay' : undefined} />\n        <table\n          {...getTableProps}\n          className={`vf-table--striped mg-table ${className}`}\n          ref={tableRef}\n        >\n          {Title && (\n            <caption className=\"vf-table__caption mg-table-caption\">\n              <div>\n                {typeof Title === 'string' ? Title : <Title />}\n                {showTextFilter && <TextInputDebounced namespace={namespace} />}\n              </div>\n            </caption>\n          )}\n          <thead className=\"vf-table__header\">\n            {headerGroups.map((headerGroup) => (\n              <tr\n                {...headerGroup.getHeaderGroupProps()}\n                className=\"vf-table__row\"\n              >\n                {headerGroup.headers.map((column) => (\n                  <th\n                    {...(sortable && column.canSort\n                      ? column.getHeaderProps(column.getSortByToggleProps())\n                      : { key: column.id })}\n                    className=\"vf-table__heading\"\n                  >\n                    {column.render('Header')}\n                    {sortable && column.canSort && (\n                      <>\n                        &nbsp;\n                        <span>\n                          {/* eslint-disable-next-line no-nested-ternary */}\n                          {column.isSorted ? (\n                            column.isSortedDesc ? (\n                              <i className=\"icon icon-common icon-sort-down\" />\n                            ) : (\n                              <i className=\"icon icon-common icon-sort-up\" />\n                            )\n                          ) : (\n                            <i className=\"icon icon-common icon-sort\" />\n                          )}\n                        </span>\n                      </>\n                    )}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"vf-table__body\">\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()} className=\"vf-table__row\">\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()} className=\"vf-table__cell\">\n                        {cell.render('Cell')}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      {showPagination && (\n        <section className=\"mg-table-footer\">\n          <label className=\"vf-form__label\">\n            Page Size:\n            <select\n              className=\"vf-form__select\"\n              value={queryParameters[`${namespace}page_size`] as number}\n              onBlur={changeSizeAndScroll}\n              onChange={changeSizeAndScroll}\n            >\n              {[10, 25, 50].map((pg) => (\n                <option key={pg} value={pg}>\n                  Show {pg}\n                </option>\n              ))}\n            </select>\n          </label>\n          <nav className=\"vf-pagination\" aria-label=\"Pagination\">\n            <ul className=\"vf-pagination__list\">\n              <li className=\"vf-pagination__item vf-pagination__item--previous-page\">\n                <button\n                  disabled={!canPreviousPage}\n                  type=\"button\"\n                  onClick={previousPage}\n                  className=\"vf-button vf-button--link vf-pagination__link\"\n                >\n                  Previous<span className=\"vf-u-sr-only\"> page</span>\n                </button>\n              </li>\n\n              {paginationRanges.startingPages.map((paginationIndex) => (\n                <PaginationButton\n                  key={paginationIndex}\n                  currentPageIndex={pageIndex}\n                  pageIndex={paginationIndex}\n                  gotoPage={goToPageAndScroll}\n                />\n              ))}\n\n              {paginationRanges.hasJumpFromStart && (\n                <li className=\"vf-pagination__item\">\n                  <span className=\"vf-pagination__label\">...</span>\n                </li>\n              )}\n\n              {paginationRanges.adjacentPages.map((paginationIndex) => (\n                <PaginationButton\n                  key={paginationIndex}\n                  currentPageIndex={pageIndex}\n                  pageIndex={paginationIndex}\n                  gotoPage={goToPageAndScroll}\n                />\n              ))}\n\n              {paginationRanges.hasJumpToEnd && (\n                <li className=\"vf-pagination__item\">\n                  <span className=\"vf-pagination__label\">...</span>\n                </li>\n              )}\n\n              {paginationRanges.endingPages.map((paginationIndex) => (\n                <PaginationButton\n                  key={paginationIndex}\n                  currentPageIndex={pageIndex}\n                  pageIndex={paginationIndex}\n                  gotoPage={goToPageAndScroll}\n                />\n              ))}\n\n              <li className=\"vf-pagination__item vf-pagination__item--next-page\">\n                <button\n                  disabled={!canNextPage}\n                  type=\"button\"\n                  onClick={nextPage}\n                  className=\"vf-button vf-button--link vf-pagination__link\"\n                >\n                  Next<span className=\"vf-u-sr-only\"> page</span>\n                </button>\n              </li>\n            </ul>\n          </nav>\n        </section>\n      )}\n    </section>\n  );\n};\n\nexport default EMGTable;\n","import React from 'react';\n\nimport './style.css';\n\ntype ExtLinkProps = {\n  href: string;\n  title?: string;\n  id?: string;\n};\nconst ExtLink: React.FC<ExtLinkProps> = ({ href, id, title, children }) => (\n  <a\n    href={href}\n    title={title}\n    id={id}\n    target=\"_blank\"\n    rel=\"noreferrer noopener\"\n    className=\"mg-ext\"\n  >\n    <span className=\"icon icon-common icon-external-link-alt\" /> {children}\n  </a>\n);\n\nexport default ExtLink;\n","import React from 'react';\nimport { ErrorFromFetch, ErrorTypes } from 'hooks/data/useData';\n\nconst refreshPage = (): void => {\n  window.location.reload();\n};\n\nconst FetchError: React.FC<{ error: ErrorFromFetch }> = ({ error }) => {\n  if (!error || error.type === ErrorTypes.NullURL) return null;\n  return (\n    <div\n      className=\"vf-box vf-box-theme--primary vf-box--easy\"\n      style={{\n        backgroundColor: 'lemonchiffon',\n      }}\n    >\n      <h3 className=\"vf-box__heading\">\n        <span className=\"icon icon-common icon-exclamation-triangle\" /> Error\n        Fetching Data\n      </h3>\n      <p className=\"vf-box__text\">\n        {error?.type === ErrorTypes.FetchError &&\n          `There were problems with the request. [${error.error}]`}\n        {error?.type === ErrorTypes.NotOK &&\n          `The response from the server was not OK [Status: ${error.status}].`}\n        {error?.type === ErrorTypes.JSONError &&\n          `The recovered resource didn't follow the expected format [${error.error}].`}\n      </p>\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--tertiary vf-button--sm \"\n          onClick={refreshPage}\n        >\n          Refresh\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FetchError;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Tab: React.FC = () => null;\n\ntype TabsProps = {\n  tabs: Array<{\n    label: string | React.ElementType;\n    to: string;\n  }>;\n};\nconst Tabs: React.FC<TabsProps> = ({ tabs }) => {\n  const location = useLocation();\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label: Label, to }) => (\n          <li className=\"vf-tabs__item\" key={to}>\n            <Link\n              className={`vf-tabs__link ${\n                to === location.pathname ||\n                (to.startsWith('#') && to === location.hash) ||\n                (to === '#' && location.hash === '')\n                  ? 'is-active'\n                  : ''\n              }`}\n              to={to}\n            >\n              {typeof Label === 'string' ? Label : <Label />}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import { useContext } from 'react';\nimport useData, { DataResponse, KeyValue } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\ninterface EBIDataResponse extends DataResponse {\n  data: KeyValue;\n}\n\nconst useEBISearchData: (\n  endpoint: string,\n  parameters?: KeyValue\n) => EBIDataResponse = (endpoint, parameters = {}) => {\n  const { config } = useContext(UserContext);\n  const defaultParameters = {\n    format: 'json',\n    start: 0,\n  };\n  const allParemeters = { ...defaultParameters, ...parameters };\n  const url = `${config.ebisearch}${endpoint}?${Object.entries(allParemeters)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')}`;\n  const data = useData([null, undefined].includes(endpoint) ? null : url);\n  return data as EBIDataResponse;\n};\n\nexport default useEBISearchData;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst useQueryParamState: <S>(\n  parameter: string,\n  defaultValue: S\n) => [string | S, (s: S) => void] = (parameter, defaultValue) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const parameters = new URLSearchParams(location.search);\n  const [value, setValue] = useState(parameters.get(parameter) || defaultValue);\n\n  // The Query parameters have changed, so we need to update the value if needed.\n  useEffect(() => {\n    const changedParameters = new URLSearchParams(location.search);\n    if (changedParameters.get(parameter) === value) return;\n    setValue(changedParameters.get(parameter) || defaultValue);\n  }, [location.search, defaultValue, parameter, value]);\n\n  // Pushes the new URL(including the new parameter value) into history\n  const setParameterInURL: (newValue: unknown) => void = (newValue) => {\n    if (String(newValue) === String(value)) return;\n    const parametersToChange = new URLSearchParams(location.search);\n    parametersToChange.set(parameter, String(newValue));\n    // The default value is not displayed in the URL\n    if (newValue === defaultValue) {\n      parametersToChange.delete(parameter);\n    }\n    location.search = parametersToChange.toString();\n    navigate(location);\n  };\n\n  return [value, setParameterInURL];\n};\n\nexport type QueryState = {\n  [parameter: string]: unknown;\n};\ntype SerializersType = {\n  [parameter: string]: (str: string) => unknown;\n};\n\nconst getQueryStateFromURL = (\n  state: QueryState,\n  searchStr: string,\n  serializers: SerializersType\n): QueryState => {\n  const innerState = {};\n  const parametersFromURL = new URLSearchParams(searchStr);\n  Object.entries(state).forEach(([parameter, value]) => {\n    const serializer = serializers[parameter] || String;\n    innerState[parameter] = serializer(\n      parametersFromURL.get(parameter) || (value as string)\n    );\n  });\n  return innerState;\n};\nexport const useQueryParametersState: (\n  initialState: QueryState,\n  serializers?: SerializersType\n) => [QueryState, (s: QueryState) => void] = (\n  initialState,\n  serializers = {}\n) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const stateWithURL = useMemo(\n    () => getQueryStateFromURL(initialState, location.search, serializers),\n    [initialState, location.search, serializers]\n  );\n  const [currentState, setCurrentState] = useState(stateWithURL);\n\n  // The Query parameters have changed, so we need to update the value if needed.\n  useEffect(() => {\n    const newState = getQueryStateFromURL(\n      initialState,\n      location.search,\n      serializers\n    );\n    if (JSON.stringify(newState) === JSON.stringify(currentState)) return;\n    setCurrentState(newState);\n  }, [location.search, currentState, initialState, serializers]);\n\n  // Pushes the new URL(including the new parameter value) into history\n  const setParametersInURL: (newState: QueryState) => void = (newState) => {\n    if (JSON.stringify(newState) === JSON.stringify(currentState)) return;\n    const parametersToChange = new URLSearchParams(location.search);\n\n    let changed = false;\n    Object.entries(initialState).forEach(([parameter, defaultValue]) => {\n      const newValue =\n        parameter in newState ? newState[parameter] : defaultValue;\n      if (newState[parameter] !== currentState[parameter]) {\n        parametersToChange.set(parameter, String(newValue));\n        if (newValue === defaultValue) {\n          parametersToChange.delete(parameter);\n        }\n        changed = true;\n      }\n    });\n\n    // The default value is not displayed in the URL\n    if (changed) {\n      location.search = parametersToChange.toString();\n      navigate(location);\n    }\n  };\n\n  return [currentState, setParametersInURL];\n};\n\nexport default useQueryParamState;\n","import React from 'react';\nimport { QueryState } from 'hooks/useQueryParamState';\nimport { noop } from 'lodash-es';\n\nconst SearchQueryContext = React.createContext({\n  searchData: {\n    '/search/studies': {\n      data: null,\n      loading: false,\n      error: null,\n    },\n    '/search/samples': {\n      data: null,\n      loading: false,\n      error: null,\n    },\n    '/search/analyses': {\n      data: null,\n      loading: false,\n      error: null,\n    },\n  },\n  queryParameters: {} as QueryState,\n  setQueryParameters: noop as (s: QueryState) => void,\n});\n\nexport default SearchQueryContext;\n","import React, { useContext, useMemo, useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SearchQueryContext from 'pages/TextSearch/SearchQueryContext';\nimport Loading from 'components/UI/Loading';\nimport 'styles/filters.css';\n\ntype MultipleOptionProps = {\n  facetName: string;\n  header: string;\n  includeTextFilter?: boolean;\n};\nconst MultipleOptionFilter: React.FC<MultipleOptionProps> = ({\n  facetName,\n  header,\n  includeTextFilter = false,\n}) => {\n  const location = useLocation();\n  const { searchData, queryParameters, setQueryParameters } =\n    useContext(SearchQueryContext);\n  const [selected, setSelected] = useState(\n    (queryParameters[facetName] as string).split(',').filter(Boolean)\n  );\n  const [textFilter, setTextFilter] = useState('');\n  useEffect(() => {\n    setSelected(\n      (queryParameters[facetName] as string).split(',').filter(Boolean)\n    );\n  }, [queryParameters, facetName]);\n\n  const facetData = useMemo(\n    () =>\n      (searchData?.[location.pathname]?.data?.facets || []).filter(\n        (f) => f.id === facetName\n      )?.[0],\n    [location.pathname, searchData, facetName]\n  );\n\n  if (\n    searchData?.[location.pathname].loading &&\n    !searchData?.[location.pathname].isStale\n  )\n    return <Loading />;\n  if (searchData?.[location.pathname].error) return null;\n\n  if (!facetData) return null;\n  const handleSelection = (event): void => {\n    const { value, checked: isChecked } = event.target as HTMLInputElement;\n    let newSelected = [...selected];\n    if (isChecked && !selected.includes(value)) {\n      newSelected.push(value);\n    } else {\n      newSelected = selected.filter((s) => s !== value);\n    }\n    setQueryParameters({\n      ...queryParameters,\n      [facetName]: newSelected.sort().join(','),\n    });\n  };\n\n  return (\n    <fieldset className=\"vf-form__fieldset vf-stack vf-stack--400\">\n      <legend className=\"vf-form__legend\">\n        {header}\n        {searchData?.[location.pathname].loading &&\n          searchData?.[location.pathname].isStale && <Loading size=\"small\" />}\n      </legend>\n      {includeTextFilter && (\n        <input\n          type=\"text\"\n          placeholder=\"Filter the list\"\n          className=\"vf-form__input\"\n          value={textFilter}\n          onChange={(evt) => setTextFilter(evt.target.value)}\n        />\n      )}\n      {facetData.facetValues\n        .filter(\n          ({ label, value }) =>\n            textFilter === '' ||\n            label.toLowerCase().includes(textFilter.toLowerCase()) ||\n            value.toLowerCase().includes(textFilter.toLowerCase())\n        )\n        .map(({ label, value, count }) => (\n          <div className=\"vf-form__item vf-form__item--checkbox\" key={value}>\n            <input\n              type=\"checkbox\"\n              name={value}\n              value={value}\n              id={value}\n              className=\"vf-form__checkbox\"\n              onChange={handleSelection}\n              checked={selected.includes(value)}\n            />\n            <label className=\"vf-form__label\" htmlFor={value}>\n              <span className=\"mg-filter-checkbox-label\">\n                {label} <span className=\"mg-number\">{count}</span>\n              </span>\n            </label>\n          </div>\n        ))}\n    </fieldset>\n  );\n};\nexport default MultipleOptionFilter;\n","import React, { useContext, useMemo, useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport SearchQueryContext from 'pages/TextSearch/SearchQueryContext';\nimport Loading from 'components/UI/Loading';\nimport './style.css';\nimport 'styles/filters.css';\n\ninterface OptionDataType {\n  value: string;\n  label: string;\n  count: number;\n  optionChildren?: OptionDataType[];\n  // eslint-disable-next-line react/no-unused-prop-types\n  children?: OptionDataType[];\n}\ninterface HierarchyOptionProps extends OptionDataType {\n  depth?: number;\n  shouldExpand: (value: string) => boolean;\n  handleSelection: (evt: {\n    target: {\n      value?: string;\n      checked?: boolean;\n    };\n  }) => void;\n  isSelected: (value: string) => boolean;\n}\nconst HierarchyOption: React.FC<HierarchyOptionProps> = ({\n  value,\n  label,\n  count,\n  optionChildren,\n  depth = 0,\n  shouldExpand,\n  handleSelection,\n  isSelected,\n}) => {\n  const [displayChildren, setDisplayChildren] = useState(shouldExpand(value));\n  return (\n    <div\n      style={{\n        marginLeft: `${depth * 0.5}rem`,\n      }}\n    >\n      <div className=\"mg-hierarchy-selector\">\n        {optionChildren?.length ? (\n          <button\n            type=\"button\"\n            className=\"mg-expander\"\n            onClick={() => setDisplayChildren(!displayChildren)}\n          >\n            {displayChildren ? '▾' : '▸'}\n          </button>\n        ) : (\n          <span className=\"mg-hierarchy-spacer\" />\n        )}\n        <div className=\"vf-form__item vf-form__item--checkbox\">\n          <input\n            type=\"checkbox\"\n            name={value}\n            value={value}\n            id={value}\n            className=\"vf-form__checkbox\"\n            onChange={handleSelection}\n            checked={isSelected(value)}\n          />\n          <label className=\"vf-form__label\" htmlFor={value}>\n            <span className=\"mg-filter-checkbox-label\">\n              {label} <span className=\"mg-number\">{count}</span>\n            </span>\n          </label>\n        </div>\n      </div>\n      {optionChildren &&\n        optionChildren.length &&\n        displayChildren &&\n        optionChildren.map(\n          ({\n            label: childLabel,\n            value: childValue,\n            count: childCount,\n            children: childChildren,\n          }) => (\n            <HierarchyOption\n              key={`${value}/${childValue}`}\n              label={childLabel}\n              value={`${value}/${childValue}`}\n              count={childCount}\n              depth={depth + 1}\n              optionChildren={childChildren}\n              handleSelection={handleSelection}\n              isSelected={isSelected}\n              shouldExpand={shouldExpand}\n            />\n          )\n        )}\n    </div>\n  );\n};\n\ntype MultipleOptionProps = {\n  facetName: string;\n  header: string;\n};\n\nconst HierarchyMultipleOptionFilter: React.FC<MultipleOptionProps> = ({\n  facetName,\n  header,\n}) => {\n  const location = useLocation();\n  const { searchData, queryParameters, setQueryParameters } =\n    useContext(SearchQueryContext);\n  const [selected, setSelected] = useState(\n    (queryParameters[facetName] as string).split(',').filter(Boolean)\n  );\n  useEffect(() => {\n    setSelected(\n      (queryParameters[facetName] as string).split(',').filter(Boolean)\n    );\n  }, [queryParameters, facetName]);\n\n  const facetData = useMemo(\n    () =>\n      (searchData?.[location.pathname]?.data?.facets || []).filter(\n        (f) => f.id === facetName\n      )?.[0],\n    [location.pathname, searchData, facetName]\n  );\n\n  if (\n    searchData?.[location.pathname].loading &&\n    !searchData?.[location.pathname].isStale\n  )\n    return <Loading />;\n  if (searchData?.[location.pathname].error) return null;\n\n  if (!facetData) return null;\n\n  const handleSelection = (event): void => {\n    const { value, checked: isChecked } = event.target as HTMLInputElement;\n    let newSelected = [...selected];\n    if (isChecked && !selected.includes(value)) {\n      newSelected.push(value);\n    } else {\n      newSelected = selected.filter((s) => s !== value);\n    }\n    setQueryParameters({\n      ...queryParameters,\n      [facetName]: newSelected.sort().join(','),\n    });\n  };\n\n  return (\n    <fieldset className=\"vf-form__fieldset vf-stack vf-stack--400\">\n      <legend className=\"vf-form__legend\">\n        {header}\n        {searchData?.[location.pathname].loading &&\n          searchData?.[location.pathname].isStale && <Loading size=\"small\" />}\n      </legend>\n      {facetData.facetValues.map(({ label, value, count, children }) => (\n        <HierarchyOption\n          key={value}\n          label={label}\n          value={value}\n          count={count}\n          optionChildren={children}\n          handleSelection={handleSelection}\n          isSelected={(v) => selected.includes(v)}\n          shouldExpand={(v) => selected.some((s) => s.startsWith(v))}\n        />\n      ))}\n    </fieldset>\n  );\n};\n\nexport default HierarchyMultipleOptionFilter;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { debounce } from 'lodash-es';\nimport './style.css';\n\ntype SelectionType = {\n  min: number;\n  max: number;\n};\n\ntype SliderProps = {\n  min: number;\n  max: number;\n  selection?: SelectionType;\n  isEnabled?: boolean;\n  onChange?: (selection: SelectionType) => void;\n};\n\nconst areEqual = (s1: SelectionType, s2: SelectionType): boolean =>\n  s1.max === s2.max && s1.min === s2.min;\n\nconst Slider: React.FC<SliderProps> = ({\n  min,\n  max,\n  isEnabled = true,\n  selection = null,\n  onChange = (s) => s,\n}) => {\n  const [currentSelection, setCurrentSelection] = useState({\n    min: selection && 'min' in selection ? selection.min : min,\n    max: selection && 'max' in selection ? selection.max : max,\n  });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounced = useCallback(debounce(onChange, 300), []);\n  useEffect(() => {\n    if (!areEqual(currentSelection, selection)) {\n      debounced(currentSelection);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentSelection]);\n  useEffect(() => {\n    if (!areEqual(currentSelection, selection)) {\n      setCurrentSelection(selection);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selection]);\n\n  return (\n    <div className=\"mg-multirange-wrapper\">\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        name=\"min\"\n        value={currentSelection.min}\n        className=\"original\"\n        disabled={!isEnabled}\n        onChange={(evt) => {\n          setCurrentSelection({\n            min: Number(evt.target.value),\n            max: currentSelection.max,\n          });\n        }}\n      />\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        name=\"max\"\n        value={currentSelection.max}\n        className=\"ghost\"\n        disabled={!isEnabled}\n        onChange={(evt) => {\n          setCurrentSelection({\n            max: Number(evt.target.value),\n            min: currentSelection.min,\n          });\n        }}\n      />\n      <div className=\"labels\">\n        <div className=\"label-min\">\n          <span>{Math.min(currentSelection.min, currentSelection.max)}</span>\n        </div>\n        <div className=\"label-max\">\n          <span>{Math.max(currentSelection.min, currentSelection.max)}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;\n","import React, { useState, useEffect } from 'react';\nimport './style.css';\n\ntype SwitchProps = {\n  id: string;\n  isOn?: boolean;\n  onChange?: (v: boolean) => void;\n};\nconst Switch: React.FC<SwitchProps> = ({\n  id,\n  onChange = (v) => v,\n  isOn = false,\n}) => {\n  const [value, setValue] = useState(isOn);\n  useEffect(() => {\n    setValue(isOn);\n    onChange(isOn);\n  }, [isOn, onChange]);\n\n  return (\n    <div>\n      <input\n        className=\"mg-switch\"\n        type=\"checkbox\"\n        id={id}\n        checked={value}\n        onChange={() => {\n          onChange(!value);\n          setValue(!value);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Switch;\n","import React, { useEffect, useState, useContext, memo } from 'react';\n\nimport SearchQueryContext from 'pages/TextSearch/SearchQueryContext';\n\nimport Slider from 'src/components/UI/Slider';\nimport Switch from 'src/components/UI/Switch';\n\nconst MIN = -20;\nconst MAX = 100;\n\nconst TemperatureFilter: React.FC = () => {\n  const { queryParameters, setQueryParameters } =\n    useContext(SearchQueryContext);\n  const [enabled, setEnabled] = useState(!!queryParameters.temperature);\n  const [range, setRange] = useState(\n    (queryParameters.temperature as string)\n      .split(',')\n      .filter(Boolean)\n      .map(Number)\n  );\n  useEffect(() => {\n    const newRange = (queryParameters.temperature as string)\n      .split(',')\n      .filter(Boolean)\n      .map(Number);\n    setRange(newRange);\n  }, [queryParameters.temperature]);\n\n  const handleSwitch = (isEnabled: boolean): void => {\n    setEnabled(isEnabled);\n    if (!isEnabled) {\n      setQueryParameters({\n        ...queryParameters,\n        temperature: '',\n      });\n    }\n  };\n  const handleSlider = ({ min, max }): void => {\n    setQueryParameters({\n      ...queryParameters,\n      temperature: `${min},${max}`,\n    });\n  };\n  return (\n    <fieldset className=\"vf-form__fieldset vf-stack vf-stack--400 mg-temperature-filter\">\n      <legend className=\"vf-form__legend\">Temperature (°C)</legend>\n      <div className=\"mg-switch-and-slider\">\n        <Switch id=\"temp_filter\" onChange={handleSwitch} isOn={enabled} />\n        <Slider\n          min={MIN}\n          max={MAX}\n          isEnabled={enabled}\n          selection={{\n            min: range?.[0] || MIN,\n            max: range?.[1] || MAX,\n          }}\n          onChange={handleSlider}\n        />\n      </div>\n    </fieldset>\n  );\n};\nexport default memo(TemperatureFilter);\n","import React, { useEffect, useState, useContext, memo } from 'react';\n\nimport SearchQueryContext from 'pages/TextSearch/SearchQueryContext';\n\nimport Slider from 'src/components/UI/Slider';\nimport Switch from 'src/components/UI/Switch';\n\nconst MIN = 0;\nconst MAX = 2000;\n\nconst DepthFilter: React.FC = () => {\n  const { queryParameters, setQueryParameters } =\n    useContext(SearchQueryContext);\n  const [enabled, setEnabled] = useState(!!queryParameters.depth);\n  const [range, setRange] = useState(\n    (queryParameters.depth as string).split(',').filter(Boolean).map(Number)\n  );\n  useEffect(() => {\n    const newRange = (queryParameters.depth as string)\n      .split(',')\n      .filter(Boolean)\n      .map(Number);\n    setRange(newRange);\n  }, [queryParameters.depth]);\n\n  const handleSwitch = (isEnabled: boolean): void => {\n    setEnabled(isEnabled);\n    if (!isEnabled) {\n      setQueryParameters({\n        ...queryParameters,\n        depth: '',\n      });\n    }\n  };\n  const handleSlider = ({ min, max }): void => {\n    setQueryParameters({\n      ...queryParameters,\n      depth: `${min},${max}`,\n    });\n  };\n  return (\n    <fieldset className=\"vf-form__fieldset vf-stack vf-stack--400 mg-depth-filter\">\n      <legend className=\"vf-form__legend\">Depth (meters)</legend>\n      <div className=\"mg-switch-and-slider\">\n        <Switch id=\"temp_filter\" onChange={handleSwitch} isOn={enabled} />\n        <Slider\n          min={MIN}\n          max={MAX}\n          isEnabled={enabled}\n          selection={{\n            min: range?.[0] || MIN,\n            max: range?.[1] || MAX,\n          }}\n          onChange={handleSlider}\n        />\n      </div>\n    </fieldset>\n  );\n};\nexport default memo(DepthFilter);\n","import React, { useEffect, useState, useContext } from 'react';\nimport SearchQueryContext from 'pages/TextSearch/SearchQueryContext';\n\nconst TextSearch: React.FC = () => {\n  const { queryParameters, setQueryParameters } =\n    useContext(SearchQueryContext);\n  const [searchTerms, setSearchTerms] = useState(\n    queryParameters.query as string\n  );\n  useEffect(() => {\n    setSearchTerms(queryParameters.query as string);\n  }, [queryParameters.query]);\n  return (\n    <div className=\"vf-form vf-form--search vf-sidebar vf-sidebar--end mg-text-search\">\n      <div className=\"vf-sidebar__inner\">\n        <div className=\"vf-form__item | vf-search__item\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter your search terms\"\n            id=\"mg-text-search\"\n            className=\"vf-form__input | st-default-search-input mg-text-search-textfield\"\n            value={searchTerms}\n            onChange={(evt) => {\n              setSearchTerms(evt.target.value);\n            }}\n          />\n        </div>\n        <div className=\"vf-form__item | vf-search__item\">\n          <button\n            type=\"button\"\n            className=\"vf-search__button | vf-button vf-button--primary mg-text-search-button\"\n            onClick={() => {\n              setQueryParameters({\n                ...queryParameters,\n                query: searchTerms,\n              });\n            }}\n          >\n            <span className=\"vf-button__text\">Search </span>\n            <span className=\"icon icon-common icon-search\" />\n          </button>\n          <button\n            type=\"button\"\n            className=\"vf-search__button | vf-button vf-button--tertiary mg-text-search-clear\"\n            onClick={() => {\n              setQueryParameters({});\n            }}\n          >\n            <span className=\"vf-button__text\">Clear All </span>\n            <span className=\"icon icon-common icon-times-circle\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TextSearch;\n","import React, { useMemo, useContext } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport ExtLink from 'components/UI/ExtLink';\nimport SearchQueryContext from 'pages/TextSearch/SearchQueryContext';\nimport { ENA_VIEW_URL } from 'utils/urls';\n\n// import './style.css';\n\nconst dataFor = {\n  '/search/studies': {\n    label: 'Studies',\n    columns: [\n      {\n        id: 'study_id',\n        Header: 'MGnify ID',\n        accessor: (study) => study.id,\n        Cell: ({ cell }) => (\n          <Link to={`/studies/${cell.value}`}>{cell.value}</Link>\n        ),\n      },\n      {\n        id: 'ena_id',\n        Header: 'ENA accession',\n        accessor: (study) => study?.fields?.ENA_PROJECT?.[0] || '',\n        Cell: ({ cell }) => (\n          <span>\n            <ExtLink href={ENA_VIEW_URL + cell.value}>{cell.value}</ExtLink>\n          </span>\n        ),\n      },\n      {\n        id: 'biome',\n        Header: 'Biome',\n        accessor: (study) => study?.fields?.biome_name?.join(':'),\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n      {\n        id: 'centre',\n        Header: 'Centre name',\n        accessor: (study) => study?.fields?.centre_name?.[0],\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n    ],\n  },\n  '/search/samples': {\n    label: 'Samples',\n    columns: [\n      {\n        id: 'sample_id',\n        Header: 'Sample',\n        accessor: (sample) => sample.id,\n        Cell: ({ cell }) => (\n          <Link to={`/samples/${cell.value}`}>{cell.value}</Link>\n        ),\n      },\n      {\n        id: 'mgnify_id',\n        Header: 'MGnify ID',\n        accessor: (sample) => sample?.fields?.METAGENOMICS_PROJECTS?.[0] || '',\n        Cell: ({ cell }) => (\n          <Link to={`/studies/${cell.value}`}>{cell.value}</Link>\n        ),\n      },\n      {\n        id: 'sample_name',\n        Header: 'Name',\n        pathnames: ['/search/studies'],\n        accessor: (study) => study?.fields?.name?.[0],\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n      {\n        id: 'sample_description',\n        Header: 'Description',\n        pathnames: ['/search/studies'],\n        accessor: (study) => study?.fields?.description?.[0],\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n    ],\n  },\n  '/search/analyses': {\n    label: 'Analyses',\n    columns: [\n      {\n        id: 'analyses_id',\n        Header: 'Analysis',\n        accessor: (analysis) => (analysis.id || '').split('_'),\n        Cell: ({ cell }) => (\n          <Link to={`/analyses/${cell.value[0]}?version=${cell.value[1]}`}>\n            {cell.value[0]}\n          </Link>\n        ),\n      },\n      {\n        id: 'pipeline',\n        Header: 'Pipeline version',\n        accessor: (analysis) => analysis?.fields?.pipeline_version?.[0] || '',\n        Cell: ({ cell }) => (\n          <span>\n            <Link to={`/pipelines/${cell.value}`}>{cell.value}</Link>\n          </span>\n        ),\n      },\n      {\n        id: 'sample_id',\n        Header: 'Sample',\n        accessor: (analysis) => analysis?.fields?.METAGENOMICS_SAMPLES?.[0],\n        Cell: ({ cell }) => (\n          <Link to={`/samples/${cell.value}`}>{cell.value}</Link>\n        ),\n      },\n      {\n        id: 'mgnify_id',\n        Header: 'MGnify ID',\n        accessor: (analysis) =>\n          analysis?.fields?.METAGENOMICS_PROJECTS?.[0] || '',\n        Cell: ({ cell }) => (\n          <Link to={`/studies/${cell.value}`}>{cell.value}</Link>\n        ),\n      },\n      {\n        id: 'experiment',\n        Header: 'Experiment type',\n        accessor: (analysis) => analysis?.fields?.experiment_type?.[0],\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n    ],\n  },\n};\nconst PAGE_SIZE = 25; // TODO: move to table\n\nconst SearchTable: React.FC = () => {\n  const { pathname } = useLocation();\n  const { searchData } = useContext(SearchQueryContext);\n  const { data, loading, error, isStale } = searchData?.[pathname] || {};\n  // console.log({loading});\n\n  const columns = useMemo(() => dataFor?.[pathname]?.columns, [pathname]);\n  if (loading && (!isStale || !data)) return <Loading size=\"large\" />;\n  if (error || !data) return <FetchError error={error} />;\n  const fomattedData = {\n    data: data.entries as Record<string, unknown>[],\n    links: {},\n    meta: {\n      pagination: {\n        pages: Math.ceil((data.hitCount as number) / PAGE_SIZE),\n        count: 25,\n        page: 1,\n      },\n    },\n  };\n\n  return (\n    <EMGTable\n      cols={columns}\n      data={fomattedData}\n      title={() => (\n        <>\n          {dataFor?.[pathname]?.label || ''}{' '}\n          <span className=\"mg-number\">{data.hitCount}</span>\n        </>\n      )}\n      initialPage={0}\n      className=\"mg-search-result\"\n      loading={loading}\n      isStale={isStale}\n    />\n  );\n};\n\nexport default SearchTable;\n","import React, { useContext, useMemo } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport MultipleOptionFilter from 'components/Search/Filter/MultipleOption';\nimport HierarchyMultipleOptionFilter from 'src/components/Search/Filter/HierarchyMultipleOption';\nimport TemperatureFilter from 'components/Search/Filter/Temperature';\nimport DepthFilter from 'components/Search/Filter/Depth';\nimport Tabs from 'components/UI/Tabs';\nimport TextSearch from 'src/components/Search/Filter/Text';\nimport SearchTable from 'src/components/Search/Table';\nimport useEBISearchData from 'hooks/data/useEBISearchData';\nimport { QueryState, useQueryParametersState } from 'hooks/useQueryParamState';\nimport SearchQueryContext from './SearchQueryContext';\n\nimport './style.css';\n\nconst PAGE_SIZE = 25;\nconst FACET_DEPTH = 4;\n\nconst formatToFacet = (facetName: string, strValue: string): string =>\n  strValue\n    .split(',')\n    .filter(Boolean)\n    .map((v) => `${facetName}:${v}`)\n    .join(',');\n\nconst getFacets = (facetNames: string[], queryParameters: QueryState): string =>\n  facetNames\n    .map((name) => formatToFacet(name, queryParameters[name] as string))\n    .filter(Boolean)\n    .join(',');\n\nconst getSamplesQuery = (\n  names: string[],\n  queryParameters: QueryState,\n  defaultValue: string\n): string => {\n  const query = names\n    .map((name) => {\n      switch (name) {\n        case 'query':\n          return queryParameters[name];\n        case 'temperature':\n        case 'depth': {\n          const newRange = (queryParameters[name] as string)\n            .split(',')\n            .filter(Boolean)\n            .map(Number);\n\n          return newRange.length === 2\n            ? `${name}:[${Math.min(...newRange)} TO ${Math.max(...newRange)}]`\n            : '';\n        }\n        default:\n          return '';\n      }\n    })\n    .filter(Boolean);\n  if (query.length) return query.join(' AND ');\n  return defaultValue;\n};\n\nconst TextSearchCount: React.FC<{ to: string; label: string }> = ({\n  to,\n  label,\n}) => {\n  const { searchData } = useContext(SearchQueryContext);\n  return (\n    <>\n      {label}\n      <span className=\"mg-number\">\n        {searchData?.[to]?.data?.hitCount || ''}\n      </span>\n    </>\n  );\n};\n\nconst tabs = [\n  {\n    to: '/search/studies',\n    label: () => <TextSearchCount to=\"/search/studies\" label=\"Studies\" />,\n  },\n  {\n    to: '/search/samples',\n    label: () => <TextSearchCount to=\"/search/samples\" label=\"Samples\" />,\n  },\n  {\n    to: '/search/analyses',\n    label: () => <TextSearchCount to=\"/search/analyses\" label=\"Analyses\" />,\n  },\n];\n\nconst TextSearchPage: React.FC = () => {\n  const [queryParameters, setQueryParameters] = useQueryParametersState({\n    query: '',\n    centre_name: '',\n    biome: '',\n    temperature: '',\n    depth: '',\n    experiment_type: '',\n    sequencing_method: '',\n    location_name: '',\n    disease_status: '',\n    phenotype: '',\n    organism: '',\n    pipeline_version: '',\n    GO: '',\n    INTERPRO: '',\n  });\n\n  const searchDataStudies = useEBISearchData('metagenomics_projects', {\n    query: getSamplesQuery(\n      ['query'],\n      queryParameters,\n      'domain_source:metagenomics_projects'\n    ),\n    size: PAGE_SIZE,\n    fields: 'ENA_PROJECT,biome_name,centre_name',\n    facetcount: 10,\n    facetsdepth: FACET_DEPTH,\n    facets: getFacets(['centre_name', 'biome'], queryParameters),\n  });\n  const searchDataSamples = useEBISearchData('metagenomics_samples', {\n    query: getSamplesQuery(\n      ['query', 'temperature', 'depth'],\n      queryParameters,\n      'domain_source:metagenomics_samples'\n    ),\n    size: PAGE_SIZE,\n    fields: 'METAGENOMICS_PROJECTS,name,description',\n    facetcount: 10,\n    facetsdepth: FACET_DEPTH,\n    facets: getFacets(\n      [\n        'biome',\n        'experiment_type',\n        'location_name',\n        'disease_status',\n        'sequencing_method',\n        'phenotype',\n      ],\n      queryParameters\n    ),\n  });\n  const searchDataAnalyses = useEBISearchData('metagenomics_analyses', {\n    query: getSamplesQuery(\n      ['query', 'temperature', 'depth'],\n      queryParameters,\n      'domain_source:metagenomics_analyses'\n    ),\n    size: PAGE_SIZE,\n    fields:\n      'METAGENOMICS_PROJECTS,METAGENOMICS_SAMPLES,pipeline_version,experiment_type',\n    facetcount: 10,\n    facetsdepth: FACET_DEPTH,\n    facets: getFacets(\n      [\n        'biome',\n        'organism',\n        'pipeline_version',\n        'experiment_type',\n        'GO',\n        'INTERPRO',\n      ],\n      queryParameters\n    ),\n  });\n  const context = useMemo(\n    () => ({\n      searchData: {\n        '/search/studies': searchDataStudies,\n        '/search/samples': searchDataSamples,\n        '/search/analyses': searchDataAnalyses,\n      },\n      queryParameters,\n      setQueryParameters,\n    }),\n    [\n      searchDataStudies,\n      searchDataSamples,\n      searchDataAnalyses,\n      queryParameters,\n      setQueryParameters,\n    ]\n  );\n\n  return (\n    <section className=\"vf-content mg-page-search\">\n      <h2>Text Search.</h2>\n      <SearchQueryContext.Provider value={context}>\n        <TextSearch />\n        <Tabs tabs={tabs} />\n        <section className=\"vf-grid\">\n          <div className=\"vf-stack vf-stack--200\">\n            <Routes>\n              <Route\n                path=\"studies\"\n                element={\n                  <>\n                    <HierarchyMultipleOptionFilter\n                      facetName=\"biome\"\n                      header=\"Biome\"\n                    />\n                    <MultipleOptionFilter\n                      facetName=\"centre_name\"\n                      header=\"Centre Name\"\n                      includeTextFilter\n                    />\n                  </>\n                }\n              />\n              <Route\n                path=\"samples\"\n                element={\n                  <>\n                    <TemperatureFilter />\n                    <DepthFilter />\n                    <HierarchyMultipleOptionFilter\n                      facetName=\"biome\"\n                      header=\"Biome\"\n                    />\n                    <MultipleOptionFilter\n                      facetName=\"experiment_type\"\n                      header=\"Experiment type\"\n                    />\n                    <MultipleOptionFilter\n                      facetName=\"sequencing_method\"\n                      header=\"Sequencing method\"\n                    />\n                    <MultipleOptionFilter\n                      facetName=\"location_name\"\n                      header=\"Location name\"\n                      includeTextFilter\n                    />\n                    <MultipleOptionFilter\n                      facetName=\"disease_status\"\n                      header=\"Disease status\"\n                    />\n                    <MultipleOptionFilter\n                      facetName=\"phenotype\"\n                      header=\"Phenotype\"\n                    />\n                  </>\n                }\n              />\n              <Route\n                path=\"analyses\"\n                element={\n                  <>\n                    <TemperatureFilter />\n                    <DepthFilter />\n                    <HierarchyMultipleOptionFilter\n                      facetName=\"organism\"\n                      header=\"Organism\"\n                    />\n                    <HierarchyMultipleOptionFilter\n                      facetName=\"biome\"\n                      header=\"Biome\"\n                    />\n                    <MultipleOptionFilter\n                      facetName=\"pipeline_version\"\n                      header=\"Pipeline version\"\n                    />\n                    <MultipleOptionFilter\n                      facetName=\"experiment_type\"\n                      header=\"Experiment type\"\n                    />\n                    <MultipleOptionFilter\n                      facetName=\"GO\"\n                      header=\"GO\"\n                      includeTextFilter\n                    />\n                    <MultipleOptionFilter\n                      facetName=\"INTERPRO\"\n                      header=\"InterPro\"\n                      includeTextFilter\n                    />\n                  </>\n                }\n              />\n              <Route index element={<Navigate to=\"studies\" replace />} />\n            </Routes>\n          </div>\n          <SearchTable />\n        </section>\n      </SearchQueryContext.Provider>\n    </section>\n  );\n};\n\nexport default TextSearchPage;\n","export const ENA_VIEW_URL = 'https://www.ebi.ac.uk/ena/browser/view/';\nexport const IMG_URL =\n  ' https://img.jgi.doe.gov/cgi-bin/m/main.cgi?section=TaxonDetail&page=taxonDetail&taxon_oid=';\nexport const NCBI_ASSEMBLY_URL = 'https://www.ncbi.nlm.nih.gov/assembly/';\nexport const NCBI_SAMPLE_URL = 'https://www.ncbi.nlm.nih.gov/biosample/?term=';\nexport const NCBI_PROJECT_URL = 'https://www.ncbi.nlm.nih.gov/bioproject/';\nexport const PATRIC_URL = 'https://www.patricbrc.org/view/Genome/';\n"],"names":["currentPageIndex","pageIndex","gotoPage","className","type","onClick","namespace","queryParameters","setQueryParameters","value","setValue","useState","debounced","useCallback","debounce","v","htmlFor","placeholder","id","onChange","event","target","cols","data","title","Title","initialPage","initialPageSize","showPagination","showTextFilter","sortable","loading","isStale","Number","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","canPreviousPage","canNextPage","pageCount","setPageSize","nextPage","previousPage","state","pageSize","sortBy","useTable","columns","initialState","meta","pagination","pages","manualPagination","manualSortBy","useSortBy","usePagination","tableRef","useRef","isChangingPage","setChangingPage","useEffect","current","scrollIntoView","order","tableSortBy","length","col","desc","replace","getOrderingQueryParamFromSortedColumn","paginationRanges","useMemo","startingPages","adjacentPages","Math","max","page","push","endingPages","hasJumpFromStart","hasJumpToEnd","getPaginationRanges","goToPageAndScroll","pageNumber","changeSizeAndScroll","evt","Loading","size","undefined","ref","map","headerGroup","getHeaderGroupProps","headers","column","canSort","getHeaderProps","getSortByToggleProps","key","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","onBlur","pg","disabled","paginationIndex","href","children","rel","refreshPage","window","location","reload","error","style","backgroundColor","status","tabs","label","Label","to","pathname","startsWith","hash","endpoint","parameters","config","useContext","allParemeters","format","start","url","ebisearch","Object","entries","join","includes","getQueryStateFromURL","searchStr","serializers","innerState","parametersFromURL","URLSearchParams","forEach","parameter","serializer","String","get","useQueryParametersState","navigate","stateWithURL","search","currentState","setCurrentState","newState","JSON","stringify","parametersToChange","changed","defaultValue","newValue","set","delete","toString","searchData","noop","facetName","header","includeTextFilter","selected","setSelected","split","filter","Boolean","textFilter","setTextFilter","facetData","facets","f","handleSelection","checked","isChecked","newSelected","s","sort","facetValues","toLowerCase","count","name","HierarchyOption","optionChildren","depth","shouldExpand","isSelected","displayChildren","setDisplayChildren","marginLeft","childLabel","childValue","childCount","childChildren","some","areEqual","s1","s2","min","isEnabled","selection","currentSelection","setCurrentSelection","isOn","memo","enabled","setEnabled","temperature","range","setRange","newRange","searchTerms","setSearchTerms","query","dataFor","Header","accessor","study","Cell","fields","ENA_PROJECT","ExtLink","biome_name","centre_name","sample","METAGENOMICS_PROJECTS","pathnames","description","analysis","pipeline_version","METAGENOMICS_SAMPLES","experiment_type","FetchError","fomattedData","links","ceil","hitCount","EMGTable","getFacets","facetNames","formatToFacet","getSamplesQuery","names","TextSearchCount","biome","sequencing_method","location_name","disease_status","phenotype","organism","GO","INTERPRO","searchDataStudies","useEBISearchData","facetcount","facetsdepth","searchDataSamples","searchDataAnalyses","context","Text","Tabs","path","element","HierarchyMultipleOption","MultipleOption","Temperature","Depth","index","ENA_VIEW_URL","IMG_URL","NCBI_ASSEMBLY_URL","NCBI_SAMPLE_URL","NCBI_PROJECT_URL","PATRIC_URL"],"sourceRoot":""}