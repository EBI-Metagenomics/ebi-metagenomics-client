{"version":3,"file":"js/397.a0936178.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/UI/TabsForQueryParameter/index.tsx","webpack://mgportalv2/./node_modules/lodash-es/_baseFilter.js","webpack://mgportalv2/./node_modules/lodash-es/filter.js","webpack://mgportalv2/./node_modules/lodash-es/_arrayAggregator.js","webpack://mgportalv2/./node_modules/lodash-es/_baseAggregator.js","webpack://mgportalv2/./node_modules/lodash-es/groupBy.js","webpack://mgportalv2/./node_modules/lodash-es/_createAggregator.js","webpack://mgportalv2/./node_modules/lodash-es/_baseMap.js","webpack://mgportalv2/./node_modules/lodash-es/map.js","webpack://mgportalv2/./node_modules/lodash-es/_isFlattenable.js","webpack://mgportalv2/./node_modules/lodash-es/_baseFlatten.js","webpack://mgportalv2/./node_modules/lodash-es/flatMap.js","webpack://mgportalv2/./src/components/UI/BiomeSelector/index.tsx","webpack://mgportalv2/./src/components/Browse/Studies/index.tsx","webpack://mgportalv2/./src/components/Browse/SuperStudies/index.tsx","webpack://mgportalv2/./src/components/Browse/Samples/index.tsx","webpack://mgportalv2/./src/components/Browse/Publications/index.tsx","webpack://mgportalv2/./src/components/Browse/Genomes/CataloguesList/index.tsx","webpack://mgportalv2/./src/components/Browse/Genomes/TextSearch/index.tsx","webpack://mgportalv2/./src/components/Browse/Genomes/index.tsx","webpack://mgportalv2/./src/components/Browse/Biomes/index.tsx","webpack://mgportalv2/./src/pages/Browse/index.tsx","webpack://mgportalv2/./node_modules/lodash-es/findIndex.js","webpack://mgportalv2/./node_modules/lodash-es/find.js","webpack://mgportalv2/./node_modules/lodash-es/_createFind.js","webpack://mgportalv2/./node_modules/lodash-es/_baseFindIndex.js","webpack://mgportalv2/./node_modules/lodash-es/_baseSome.js","webpack://mgportalv2/./node_modules/lodash-es/some.js","webpack://mgportalv2/./node_modules/lodash-es/toFinite.js","webpack://mgportalv2/./node_modules/lodash-es/toInteger.js","webpack://mgportalv2/./node_modules/lodash-es/_trimmedEndIndex.js","webpack://mgportalv2/./node_modules/lodash-es/_baseTrim.js","webpack://mgportalv2/./node_modules/lodash-es/toNumber.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport useQueryParamState from 'hooks/queryParamState/useQueryParamState';\n\ntype TabsProps = {\n  tabs: Array<{\n    label: string | React.ElementType;\n    to: string;\n  }>;\n  queryParameter: string;\n  defaultValue: string;\n};\nconst TabsForQueryParameter: React.FC<TabsProps> = ({\n  tabs,\n  queryParameter,\n  defaultValue,\n}) => {\n  const [tabQp, setTabQp] = useQueryParamState(queryParameter, defaultValue);\n  const [, setPage] = useQueryParamState('page', 1, Number);\n\n  useEffect(() => {\n    if (tabQp === '') {\n      setTabQp(defaultValue);\n      setPage(1);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tabQp, queryParameter]);\n\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label: Label, to }) => (\n          <li className=\"vf-tabs__item\" key={to}>\n            <button\n              type=\"button\"\n              className={`vf-tabs__link mg-button-as-tab ${\n                to === tabQp ? 'is-active' : ''\n              }`}\n              onClick={() => {\n                setTabQp(to);\n                setPage(1);\n              }}\n            >\n              {typeof Label === 'string' ? Label : <Label />}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TabsForQueryParameter;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default filter;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n","import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React, { useEffect, useState } from 'react';\n\nimport { groupBy, split, map, flatMap, find, filter } from 'lodash-es';\nimport Select from 'react-select';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList, MGnifyDatum } from 'hooks/data/useData';\nimport { getBiomeIcon } from 'utils/biomes';\nimport {\n  reactSelectStyles,\n  reactSelectTheme,\n} from 'styles/react-select-styles';\n\ntype BiomeSelectorProps = {\n  onSelect: (lineage: string) => void;\n  initialValue?: string;\n  lineageFilter?: (lineage: string) => boolean;\n};\n\ntype OptionProps = {\n  value: MGnifyDatum | string;\n  label: string | number | Record<string, unknown> | [];\n};\n\nconst OptionLabel: React.FC<OptionProps> = ({ value, label }) => (\n  <div className=\"vf-flag vf-flag--middle vf-flag--200\">\n    <div className=\"vf-flag__media\">\n      <span\n        className={`biome_icon icon_xxs ${getBiomeIcon(\n          typeof value === 'string' ? value : value.id\n        )}`}\n        style={{ float: 'initial' }}\n      />\n    </div>\n    <div className=\"vf-flag__body\">{label}</div>\n  </div>\n);\n\nconst BiomeSelector: React.FC<BiomeSelectorProps> = ({\n  onSelect,\n  initialValue,\n  lineageFilter = () => true,\n}) => {\n  const { data: biomes, loading } = useMGnifyData(\n    'biomes/root/children?depth_gte=1&depth_lte=4&page_size=200'\n  );\n  const [value, setValue] = useState<OptionProps | undefined>();\n  const options = React.useMemo(() => {\n    if (loading) {\n      return [{ label: 'Loading...', value: 'root' }];\n    }\n    const filteredBiomes = filter(\n      (biomes as MGnifyResponseList).data,\n      (biome) => lineageFilter(biome.attributes.lineage as string)\n    );\n    const groupedLineages = groupBy(filteredBiomes, (biome) =>\n      split(biome.id.replace('root:', ''), ':', 1).join(':')\n    );\n    return map(groupedLineages, (childBiomes, lineageLabel) => ({\n      label: lineageLabel,\n      options: childBiomes.map((biome) => ({\n        value: biome,\n        label: `${\n          (biome.attributes.lineage as string).replace(/[^:]/g, '').length > 2\n            ? '↳  '\n            : ''\n        }${\n          lineageLabel === biome.attributes['biome-name']\n            ? `All ${lineageLabel}`\n            : biome.attributes['biome-name']\n        }\n            `,\n      })),\n    }));\n  }, [biomes, loading, lineageFilter]);\n\n  useEffect(() => {\n    if (initialValue && options?.length && !loading) {\n      setValue(\n        find(flatMap(options, 'options'), (o) => {\n          return o.value.id === initialValue;\n        })\n      );\n    }\n  }, [initialValue, options, loading]);\n\n  return (\n    <div style={{ flexGrow: 1, maxWidth: '320px' }}>\n      <label className=\"vf-form__label\" htmlFor=\"biome-select\">\n        Filter biome\n      </label>\n      <Select\n        theme={reactSelectTheme}\n        styles={reactSelectStyles}\n        placeholder=\"Filter by biome\"\n        value={value}\n        onChange={(option, action) => {\n          if (action.action === 'select-option') {\n            setValue(option);\n            onSelect(\n              typeof option.value === 'string' ? option.value : option.value.id\n            );\n          }\n        }}\n        formatOptionLabel={OptionLabel}\n        isLoading={loading}\n        isSearchable\n        name=\"biome\"\n        inputId=\"biome-select\"\n        options={options}\n      />\n    </div>\n  );\n};\n\nexport default BiomeSelector;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport EMGTable from 'components/UI/EMGTable';\nimport BiomeSelector from 'components/UI/BiomeSelector';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList } from 'hooks/data/useData';\nimport { getBiomeIcon } from 'utils/biomes';\nimport Loading from 'components/UI/Loading';\nimport useQueryParamState from 'hooks/queryParamState/useQueryParamState';\n\nconst BrowseStudies: React.FC = () => {\n  const [page, setPage] = useQueryParamState('page', 1, Number);\n  const [order] = useQueryParamState('order', '');\n  const [biome, setBiome] = useQueryParamState('biome', 'root');\n  const [pageSize] = useQueryParamState('page_size', 25, Number);\n  const [search] = useQueryParamState('search', '');\n\n  const [hasData, setHasData] = useState(false);\n  const {\n    data: studiesList,\n    loading,\n    isStale,\n    downloadURL,\n  } = useMGnifyData('studies', {\n    page,\n    ordering: order,\n    lineage: biome,\n    page_size: pageSize,\n    search: search || undefined,\n  });\n\n  const columns = React.useMemo(\n    () => [\n      {\n        id: 'biome',\n        Header: 'Biome',\n        accessor: (study) => study.relationships.biomes.data?.[0]?.id,\n        Cell: ({ cell }) => (\n          <span\n            className={`biome_icon icon_xs ${getBiomeIcon(cell.value)}`}\n            style={{ float: 'initial' }}\n          />\n        ),\n        disableSortBy: true,\n        className: 'mg-biome',\n      },\n      {\n        id: 'study_id',\n        Header: 'Accession',\n        accessor: 'attributes.accession',\n        Cell: ({ cell }) => (\n          <Link to={`/studies/${cell.value}`}>{cell.value}</Link>\n        ),\n      },\n      {\n        Header: 'Study name',\n        accessor: 'attributes.study-name',\n      },\n      {\n        Header: 'Samples',\n        accessor: 'attributes.samples-count',\n      },\n      {\n        id: 'last_update',\n        Header: 'Last Updated',\n        accessor: 'attributes.last-update',\n        Cell: ({ cell }) => new Date(cell.value).toLocaleDateString(),\n      },\n    ],\n    []\n  );\n\n  useEffect(() => {\n    setHasData(!!studiesList);\n  }, [studiesList]);\n  if (!studiesList && loading) return <Loading />;\n  return (\n    <section className=\"mg-browse-section\">\n      <div>\n        <BiomeSelector\n          onSelect={async (biomeSelected) => {\n            await setHasData(false);\n            setBiome(biomeSelected);\n            setPage(1);\n            await studiesList;\n            setHasData(true);\n          }}\n          initialValue={biome}\n        />\n      </div>\n      <div style={{ height: '2rem' }} />\n      {hasData && (\n        <EMGTable\n          cols={columns}\n          data={studiesList as MGnifyResponseList}\n          Title={`Studies (${studiesList.meta.pagination.count})`}\n          initialPage={(page as number) - 1}\n          sortable\n          loading={loading}\n          isStale={isStale}\n          showTextFilter\n          downloadURL={downloadURL}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default BrowseStudies;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList } from 'hooks/data/useData';\nimport Loading from 'components/UI/Loading';\nimport useQueryParamState from 'hooks/queryParamState/useQueryParamState';\n\nconst BrowseSuperStudies: React.FC = () => {\n  const [page] = useQueryParamState('page', 1, Number);\n  const [order] = useQueryParamState('order', '');\n  const [biome] = useQueryParamState('biome', 'root');\n  const [pageSize] = useQueryParamState('page_size', 25, Number);\n  const [hasData, setHasData] = useState(false);\n  const {\n    data: superStudiesList,\n    loading,\n    isStale,\n    downloadURL,\n  } = useMGnifyData('super-studies', {\n    page,\n    ordering: order,\n    lineage: biome,\n    page_size: pageSize,\n  });\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Title',\n        accessor: 'attributes.title',\n        Cell: ({ cell }) => (\n          <Link\n            to={`/super-studies/${cell.row.original.attributes['url-slug']}`}\n          >\n            {cell.value}\n          </Link>\n        ),\n      },\n      {\n        Header: 'Description',\n        accessor: 'attributes.description',\n        disableSortBy: true,\n      },\n    ],\n    []\n  );\n\n  useEffect(() => {\n    setHasData(!!superStudiesList);\n  }, [superStudiesList]);\n  if (!superStudiesList && loading) return <Loading />;\n\n  return (\n    <section className=\"mg-browse-section\">\n      {hasData && (\n        <EMGTable\n          cols={columns}\n          data={superStudiesList as MGnifyResponseList}\n          Title={`Super Studies (${superStudiesList.meta.pagination.count})`}\n          initialPage={(page as number) - 1}\n          sortable\n          loading={loading}\n          isStale={isStale}\n          showPagination={false}\n          downloadURL={downloadURL}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default BrowseSuperStudies;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport EMGTable from 'components/UI/EMGTable';\nimport BiomeSelector from 'components/UI/BiomeSelector';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList } from 'hooks/data/useData';\nimport { getBiomeIcon } from 'utils/biomes';\nimport Loading from 'components/UI/Loading';\nimport useQueryParamState from 'hooks/queryParamState/useQueryParamState';\n\nconst BrowseSamples: React.FC = () => {\n  const [page, setPage] = useQueryParamState('page', 1, Number);\n  const [order] = useQueryParamState('order', '');\n  const [biome, setBiome] = useQueryParamState('biome', 'root');\n  const [pageSize] = useQueryParamState('page_size', 25, Number);\n  const [search] = useQueryParamState('search', '');\n\n  const [hasData, setHasData] = useState(false);\n  const {\n    data: samplesList,\n    loading,\n    isStale,\n    downloadURL,\n  } = useMGnifyData('samples', {\n    page: page as number,\n    ordering: order as string,\n    lineage: biome as string,\n    page_size: pageSize as number,\n    search: (search as string) || undefined,\n  });\n\n  const columns = React.useMemo(\n    () => [\n      {\n        id: 'biome',\n        Header: 'Biome',\n        accessor: (sample) => sample.relationships.biome.data?.id,\n        Cell: ({ cell }) => (\n          <span\n            className={`biome_icon icon_xs ${getBiomeIcon(cell.value)}`}\n            style={{ float: 'initial' }}\n          />\n        ),\n        disableSortBy: true,\n        className: 'mg-biome',\n      },\n      {\n        Header: 'Accession',\n        accessor: 'attributes.accession',\n        Cell: ({ cell }) => (\n          <Link to={`/samples/${cell.value}`}>{cell.value}</Link>\n        ),\n      },\n      {\n        Header: 'Sample name',\n        accessor: 'attributes.sample-name',\n      },\n      {\n        Header: 'Description',\n        accessor: 'attributes.sample-desc',\n        disableSortBy: true,\n      },\n      {\n        id: 'last_update',\n        Header: 'Last Updated',\n        accessor: 'attributes.last-update',\n        Cell: ({ cell }) => new Date(cell.value).toLocaleDateString(),\n      },\n    ],\n    []\n  );\n\n  useEffect(() => {\n    setHasData(!!samplesList);\n  }, [samplesList]);\n  if (!samplesList && loading) return <Loading />;\n\n  return (\n    <section className=\"mg-browse-section\">\n      <div>\n        <BiomeSelector\n          onSelect={async (newBiome) => {\n            await setHasData(false);\n            setBiome(newBiome);\n            setPage(1);\n            await samplesList;\n            setHasData(true);\n          }}\n          initialValue={biome}\n        />\n      </div>\n      <div style={{ height: '2rem' }} />\n      {hasData && (\n        <EMGTable\n          cols={columns}\n          data={samplesList as MGnifyResponseList}\n          Title={`Samples (${samplesList.meta.pagination.count})`}\n          initialPage={(page as number) - 1}\n          sortable\n          loading={loading}\n          isStale={isStale}\n          showTextFilter\n          downloadURL={downloadURL}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default BrowseSamples;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport EMGTable from 'components/UI/EMGTable';\nimport ExtLink from 'components/UI/ExtLink';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList } from 'hooks/data/useData';\nimport Loading from 'components/UI/Loading';\nimport useQueryParamState from 'hooks/queryParamState/useQueryParamState';\n\nconst BrowsePublications: React.FC = () => {\n  const [page] = useQueryParamState('page', 1, Number);\n  const [order] = useQueryParamState('order', '');\n  const [pageSize] = useQueryParamState('page_size', 25, Number);\n  const [search] = useQueryParamState('search', '');\n  const [hasData, setHasData] = useState(false);\n  const {\n    data: publicationsList,\n    loading,\n    isStale,\n    downloadURL,\n  } = useMGnifyData('publications', {\n    page,\n    ordering: order,\n    page_size: pageSize,\n    search: (search as string) || undefined,\n  });\n\n  const columns = React.useMemo(\n    () => [\n      {\n        id: 'pubmed_id',\n        Header: 'PMID',\n        accessor: 'id',\n        Cell: ({ cell }) => (\n          <ExtLink href={`https://europepmc.org/abstract/MED/${cell.value}`}>\n            {cell.value}\n          </ExtLink>\n        ),\n      },\n      {\n        Header: 'Publication title',\n        accessor: 'attributes.pub-title',\n        disableSortBy: true,\n      },\n      {\n        Header: 'Studies',\n        accessor: 'attributes.studies-count',\n      },\n      {\n        Header: 'Year of pub.',\n        accessor: 'attributes.published-year',\n      },\n      {\n        Header: 'Link',\n        accessor: 'attributes.pubmed-id',\n        Cell: ({ cell }) => (\n          <Link\n            to={`/publications/${cell.value}`}\n            className=\"vf-button vf-button--primary vf-button--sm \"\n          >\n            View details\n          </Link>\n        ),\n        disableSortBy: true,\n      },\n    ],\n    []\n  );\n\n  useEffect(() => {\n    setHasData(!!publicationsList);\n  }, [publicationsList]);\n  if (!publicationsList && loading) return <Loading />;\n\n  return (\n    <section className=\"mg-browse-section\">\n      {hasData && (\n        <EMGTable\n          cols={columns}\n          data={publicationsList as MGnifyResponseList}\n          Title={`Publications (${publicationsList.meta.pagination.count})`}\n          initialPage={(page as number) - 1}\n          sortable\n          loading={loading}\n          isStale={isStale}\n          showTextFilter\n          downloadURL={downloadURL}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default BrowsePublications;\n","import React, { useEffect, useState } from 'react';\nimport useQueryParamState from 'hooks/queryParamState/useQueryParamState';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { getBiomeIcon } from 'utils/biomes';\nimport { Link } from 'react-router-dom';\nimport Loading from 'components/UI/Loading';\nimport EMGTable from 'components/UI/EMGTable';\nimport { MGnifyDatum, MGnifyResponseList } from 'hooks/data/useData';\nimport BiomeSelector from 'components/UI/BiomeSelector';\nimport { some } from 'lodash-es';\n\nconst BrowseGenomesByCatalogue: React.FC = () => {\n  const [page] = useQueryParamState('page', 1, Number);\n  const [order] = useQueryParamState('order', '');\n  const [pageSize] = useQueryParamState('page_size', 25, Number);\n  const [hasData, setHasData] = useState(false);\n  const [biome, setBiome] = useQueryParamState('biome', 'root');\n  const {\n    data: genomesList,\n    loading,\n    isStale,\n    downloadURL,\n  } = useMGnifyData('genome-catalogues', {\n    page,\n    ordering: order,\n    page_size: pageSize,\n    lineage: biome,\n  });\n\n  const { data: allCatalogues } = useMGnifyData('genome-catalogues', {\n    page_size: 50,\n  });\n\n  const columns = React.useMemo(\n    () => [\n      {\n        id: 'biome',\n        Header: 'Biome',\n        accessor: (catalogue) => catalogue.relationships.biome.data?.id,\n        Cell: ({ cell }) => (\n          <span\n            className={`biome_icon icon_xs ${getBiomeIcon(cell.value)}`}\n            style={{ float: 'initial' }}\n          />\n        ),\n        disableSortBy: true,\n        className: 'mg-biome',\n      },\n      {\n        Header: 'Catalogue ID',\n        accessor: 'id',\n        Cell: ({ cell }) => (\n          <Link to={`/genome-catalogues/${cell.value}`}>{cell.value}</Link>\n        ),\n      },\n      {\n        Header: 'Catalogue name',\n        accessor: 'attributes.name',\n      },\n      {\n        Header: 'Catalogue version',\n        accessor: 'attributes.version',\n      },\n      {\n        Header: 'Species count',\n        accessor: 'attributes.genome-count',\n      },\n      {\n        Header: 'Total genomes count',\n        accessor: 'attributes.unclustered-genome-count',\n      },\n      {\n        id: 'last_update',\n        Header: 'Last Updated',\n        accessor: 'attributes.last-update',\n        Cell: ({ cell }) => new Date(cell.value).toLocaleDateString(),\n      },\n    ],\n    []\n  );\n\n  useEffect(() => {\n    setHasData(!!genomesList);\n  }, [genomesList]);\n\n  const isBiomeCatalogued = (lineage) => {\n    if (!allCatalogues.data) return true;\n    return some(allCatalogues.data, (catalogue) => {\n      return (catalogue as MGnifyDatum).relationships.biome.data.id.startsWith(\n        lineage\n      );\n    });\n  };\n\n  if (!genomesList && loading) return <Loading />;\n  return (\n    <section className=\"mg-browse-section\">\n      <p className=\"vf-text-body vf-text-body--3\">\n        Select a catalogue in the table to browse or search its genomes.\n      </p>\n      <BiomeSelector\n        onSelect={async (newBiome) => {\n          await setHasData(false);\n          setBiome(newBiome);\n        }}\n        initialValue={biome}\n        lineageFilter={isBiomeCatalogued}\n      />\n      {hasData && (\n        <EMGTable\n          cols={columns}\n          data={genomesList as MGnifyResponseList}\n          initialPage={(page as number) - 1}\n          sortable\n          loading={loading}\n          isStale={isStale}\n          downloadURL={downloadURL}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default BrowseGenomesByCatalogue;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList } from 'hooks/data/useData';\nimport Loading from 'components/UI/Loading';\nimport useQueryParamState from 'hooks/queryParamState/useQueryParamState';\nimport { getBiomeIcon } from 'utils/biomes';\nimport { cleanTaxLineage, getSimpleTaxLineage } from 'utils/taxon';\nimport FetchError from 'components/UI/FetchError';\nimport Tooltip from 'components/UI/Tooltip';\n\nconst GenomesTextSearch: React.FC = () => {\n  const [page] = useQueryParamState('page', 1, Number);\n  const [order] = useQueryParamState('order', '');\n  const [pageSize] = useQueryParamState('page_size', 25, Number);\n  const [search] = useQueryParamState('search', '');\n  const {\n    data: genomesList,\n    loading,\n    isStale,\n    downloadURL,\n    error,\n  } = useMGnifyData('genomes', {\n    page,\n    ordering: order,\n    page_size: pageSize,\n    search: (search as string) || undefined,\n  });\n\n  const columns = [\n    {\n      id: 'biome_id',\n      Header: 'Biome',\n      accessor: (genome) => genome.relationships.biome.data?.id,\n      Cell: ({ cell }) => (\n        <span\n          className={`biome_icon icon_xs ${getBiomeIcon(cell.value)}`}\n          style={{ float: 'initial' }}\n        />\n      ),\n      disableSortBy: true,\n      className: 'mg-biome',\n    },\n    {\n      id: 'genome',\n      Header: 'Accession',\n      accessor: 'id',\n      Cell: ({ cell }) => (\n        <Link to={`/genomes/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'catalogue',\n      Header: 'Catalogue',\n      accessor: (genome) => genome.relationships.catalogue.data?.id,\n      Cell: ({ cell }) => (\n        <Link to={`/genome-catalogues/${cell.value}`}>{cell.value}</Link>\n      ),\n      disableSortBy: true,\n    },\n    {\n      Header: 'Type',\n      accessor: 'attributes.type',\n      disableSortBy: true,\n    },\n    {\n      Header: 'Taxonomy',\n      accessor: 'attributes.taxon-lineage',\n      Cell: ({ cell }) => (\n        <>\n          {getSimpleTaxLineage(cell.value, true)}{' '}\n          <Tooltip content={cleanTaxLineage(cell.value, ' > ')}>\n            <sup>\n              <span className=\"icon icon-common icon-info\" />\n            </sup>\n          </Tooltip>\n        </>\n      ),\n      disableSortBy: true,\n    },\n  ];\n\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !genomesList) return <FetchError error={error} />;\n\n  return (\n    <div>\n      <p className=\"vf-text-body vf-text-body--3\">\n        Search for genomes across all catalogues.\n      </p>\n      <EMGTable\n        cols={columns}\n        data={genomesList as MGnifyResponseList}\n        Title={`Genomes (${genomesList.meta.pagination.count})`}\n        initialPage={(page as number) - 1}\n        sortable\n        loading={loading}\n        isStale={isStale}\n        showTextFilter\n        downloadURL={downloadURL}\n      />\n    </div>\n  );\n};\n\nexport default GenomesTextSearch;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React from 'react';\n\nimport CataloguesList from 'components/Browse/Genomes/CataloguesList';\nimport TabsForQueryParameter from 'components/UI/TabsForQueryParameter';\nimport useQueryParamState from 'hooks/queryParamState/useQueryParamState';\nimport GenomesTextSearch from 'components/Browse/Genomes/TextSearch';\nimport CobsSearch from 'components/Genomes/Cobs';\nimport SourmashSearch from 'components/Genomes/Sourmash';\n\nconst PARAMETER_NAME = 'browse-by';\nconst PARAMETER_DEFAULT = 'biome';\nconst tabs = [\n  { label: 'Catalogues list', to: 'biome' },\n  { label: 'All genomes', to: 'search-all' },\n  { label: 'Gene search', to: 'gene-search' },\n  { label: 'MAG search', to: 'mag-search' },\n];\n\nconst BrowseGenomes: React.FC = () => {\n  const [browseBy] = useQueryParamState(PARAMETER_NAME, PARAMETER_DEFAULT);\n\n  return (\n    <section className=\"mg-browse-section\">\n      <div>\n        <p>\n          Genome catalogues are biome-specific collections of\n          metagenomic-assembled and isolate genomes. The latest version of each\n          catalogue is shown on this website. Data for current and previous\n          versions are available on the{' '}\n          <a href=\"https://ftp.ebi.ac.uk/pub/databases/metagenomics/mgnify_genomes/\">\n            FTP server\n          </a>\n          .\n        </p>\n      </div>\n      <TabsForQueryParameter\n        tabs={tabs}\n        queryParameter={PARAMETER_NAME}\n        defaultValue={PARAMETER_DEFAULT}\n      />\n      <div className=\"vf-tabs-content\">\n        <div style={{ height: '1rem' }} />\n        {browseBy === 'biome' && <CataloguesList />}\n        {browseBy === 'search-all' && <GenomesTextSearch />}\n        {browseBy === 'gene-search' && <CobsSearch />}\n        {browseBy === 'mag-search' && <SourmashSearch />}\n      </div>\n    </section>\n  );\n};\n\nexport default BrowseGenomes;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList } from 'hooks/data/useData';\nimport { getBiomeIcon } from 'utils/biomes';\nimport Loading from 'components/UI/Loading';\nimport useQueryParamState from 'hooks/queryParamState/useQueryParamState';\n\nconst BrowseBiomes: React.FC = () => {\n  const [page] = useQueryParamState('page', 1, Number);\n  const [order] = useQueryParamState('order', '');\n  const [pageSize] = useQueryParamState('page_size', 25, Number);\n  const [search] = useQueryParamState('search', '');\n  const [hasData, setHasData] = useState(false);\n  const {\n    data: biomesList,\n    loading,\n    isStale,\n    downloadURL,\n  } = useMGnifyData('biomes', {\n    page,\n    ordering: order,\n    page_size: pageSize,\n    search: (search as string) || undefined,\n  });\n\n  const columns = React.useMemo(\n    () => [\n      {\n        id: 'biome',\n        Header: '',\n        accessor: 'id',\n        Cell: ({ cell }) => (\n          <span className={`biome_icon icon_xs ${getBiomeIcon(cell.value)}`} />\n        ),\n        disableSortBy: true,\n        className: 'mg-biome',\n      },\n      {\n        id: 'biome_name',\n        Header: 'Biome name and lineage',\n        accessor: (biome) => ({\n          lineage: biome.attributes.lineage,\n          name: biome.attributes['biome-name'],\n        }),\n        Cell: ({ cell }) => (\n          <>\n            <Link to={`/browse/studies?biome=${cell.value.lineage}`}>\n              {cell.value.name}\n            </Link>\n            <br />\n            {cell.value.lineage}\n          </>\n        ),\n      },\n      {\n        Header: 'Samples excluding sub-lineages',\n        id: 'samples_count',\n        accessor: (biome) => ({\n          lineage: biome.attributes.lineage,\n          count: biome.attributes['samples-count'],\n        }),\n        Cell: ({ cell }) => (\n          <Link to={`/browse/samples?biome=${cell.value.lineage}`}>\n            {cell.value.count}\n          </Link>\n        ),\n      },\n    ],\n    []\n  );\n\n  useEffect(() => {\n    setHasData(!!biomesList);\n  }, [biomesList]);\n  if (!biomesList && loading) return <Loading />;\n\n  return (\n    <section className=\"mg-browse-section\">\n      {hasData && (\n        <EMGTable\n          cols={columns}\n          data={biomesList as MGnifyResponseList}\n          Title={`Biomes (${biomesList.meta.pagination.count})`}\n          initialPage={(page as number) - 1}\n          sortable\n          loading={loading}\n          isStale={isStale}\n          showTextFilter\n          downloadURL={downloadURL}\n        />\n      )}\n    </section>\n  );\n};\n\nexport default BrowseBiomes;\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport BrowseStudies from 'components/Browse/Studies';\nimport BrowseSuperStudies from 'components/Browse/SuperStudies';\nimport BrowseSamples from 'components/Browse/Samples';\nimport BrowsePublications from 'components/Browse/Publications';\nimport BrowseGenomes from 'components/Browse/Genomes';\nimport BrowseBiomes from 'components/Browse/Biomes';\nimport Tabs from 'components/UI/Tabs';\n\nconst tabs = [\n  { label: 'Super Studies', to: '/browse/super-studies' },\n  { label: 'Studies', to: '/browse/studies' },\n  { label: 'Samples', to: '/browse/samples' },\n  { label: 'Publications', to: '/browse/publications' },\n  { label: 'Genomes', to: '/browse/genomes' },\n  { label: 'Biomes', to: '/browse/biomes' },\n];\n\nconst Browse: React.FC = () => {\n  return (\n    <section className=\"vf-content\">\n      <h2>Browse MGnify</h2>\n      <Tabs tabs={tabs} />\n      <div className=\"vf-u-padding__top--600\">\n        <Routes>\n          <Route path=\"super-studies\" element={<BrowseSuperStudies />} />\n          <Route path=\"studies\" element={<BrowseStudies />} />\n          <Route path=\"samples\" element={<BrowseSamples />} />\n          <Route path=\"publications\" element={<BrowsePublications />} />\n          <Route path=\"genomes\" element={<BrowseGenomes />} />\n          <Route path=\"biomes\" element={<BrowseBiomes />} />\n          <Route index element={<Navigate to=\"super-studies\" replace />} />\n        </Routes>\n      </div>\n    </section>\n  );\n};\n\nexport default Browse;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n"],"names":["tabs","queryParameter","defaultValue","tabQp","setTabQp","setPage","Number","useEffect","className","map","label","Label","to","key","type","onClick","collection","predicate","result","value","index","push","isArray","array","setter","iteratee","accumulator","length","Object","prototype","hasOwnProperty","call","func","initializer","isArrayLike","Array","spreadableSymbol","undefined","isArguments","baseFlatten","depth","isStrict","OptionLabel","id","style","float","onSelect","initialValue","lineageFilter","data","biomes","loading","useMGnifyData","setValue","useState","options","filteredBiomes","biome","attributes","lineage","groupedLineages","split","replace","join","childBiomes","lineageLabel","find","o","flexGrow","maxWidth","htmlFor","theme","styles","placeholder","onChange","option","action","formatOptionLabel","isLoading","isSearchable","name","inputId","page","useQueryParamState","order","setBiome","pageSize","search","hasData","setHasData","studiesList","isStale","downloadURL","ordering","page_size","columns","Header","accessor","study","relationships","Cell","cell","disableSortBy","Date","toLocaleDateString","Loading","biomeSelected","height","EMGTable","cols","Title","meta","pagination","count","initialPage","sortable","showTextFilter","superStudiesList","row","original","showPagination","samplesList","sample","newBiome","publicationsList","ExtLink","href","genomesList","allCatalogues","catalogue","some","startsWith","error","genome","Tooltip","content","size","FetchError","PARAMETER_NAME","PARAMETER_DEFAULT","browseBy","TabsForQueryParameter","CataloguesList","Cobs","Sourmash","biomesList","Tabs","path","element","nativeMax","Math","max","findIndexFunc","fromIndex","toInteger","fromRight","iterable","keys","guard","toNumber","remainder","reWhitespace","reTrimStart","string","slice","test","charAt","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","isSymbol","isObject","other","valueOf","isBinary"],"sourceRoot":""}