"use strict";(self.webpackChunkmgportalv2=self.webpackChunkmgportalv2||[]).push([[400],{1274:(e,t,l)=>{l.d(t,{Z:()=>r});var n=l(7294),a=l(6974);const r=({hash:e,isDefault:t=!1,children:l})=>{const r=(0,a.TH)(),c=(0,a.s0)();return(0,n.useEffect)((()=>{""===r.hash&&""!==e&&t&&c(e,{replace:!0})})),r.hash===e?n.createElement("div",{id:`tab-${e.slice(1)||"default"}`},l):null}},4821:(e,t,l)=>{l.d(t,{Z:()=>c});var n=l(7294),a=l(6974),r=l(9711);const c=({tabs:e,preservedQueryParameters:t})=>{const l=(0,a.TH)(),c=(0,n.useMemo)((()=>{if(!t)return"";const e=new URLSearchParams,n=new URLSearchParams(l.search);let a=!1;return t.forEach((t=>{n.has(t)&&e.append(t,n.get(t)),a=!0})),a?`?${e.toString()}`:""}),[t,l.search]);return n.createElement("div",{className:"vf-tabs mg-search-tabs"},n.createElement("ul",{className:"vf-tabs__list"},e.map((({label:e,to:t})=>n.createElement("li",{className:"vf-tabs__item",key:t},n.createElement(r.rU,{className:"vf-tabs__link "+(t===l.pathname||t.startsWith("#")&&t===l.hash||"#"===t&&""===l.hash?"is-active":""),to:t+c},"string"==typeof e?e:n.createElement(e,null)))))))}},964:(e,t,l)=>{l.d(t,{Z:()=>a});var n=l(6974);const a=()=>{const e=(0,n.TH)();let{pathname:t}=e;t.trim().endsWith("/")&&(t=t.trim().slice(0,-1));const l=t.split("/");return null==l?void 0:l[l.length-1]}},6400:(e,t,l)=>{l.r(t),l.d(t,{default:()=>h});var n=l(7294),a=l(9711),r=l(6438),c=l(4262),s=l(1769),m=l(4821),o=l(1274);const i=[{label:"Amplicon",to:"#"},{label:"Raw reads",to:"#raw"},{label:"Assembly",to:"#assembly"}];var d=l(2531);const u={1:{Chart:({onHoverStep:e=(()=>null)})=>n.createElement("div",{className:"block_wrapper"},n.createElement("div",{className:"block_container"},n.createElement("div",{className:"mainbranch"},n.createElement("div",{className:"block-lb"},"Raw reads"),n.createElement("div",{className:"arrow_pip "}),n.createElement("div",{className:"block small step0",onMouseOver:()=>e(0),onFocus:()=>e(0)},"SeqPrep"),n.createElement("div",{className:"arrow_pip "}),n.createElement("div",{className:"block-lb"},"Initial reads"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step1",onMouseOver:()=>e(1),onFocus:()=>e(1)},"QC",n.createElement("div",{className:"qclist"},n.createElement("ul",null,n.createElement("li",null,"Trim low quality (Trimmomatic)"),n.createElement("li",null,"Length filtering (Biopython)"),n.createElement("li",null,"Duplicate Removal (UCLUST & Prefix)"),n.createElement("li",null,"Filtering low complexity region (RepeatMasker)")))),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"Processed reads"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step2",onMouseOver:()=>e(2),onFocus:()=>e(2)},"rRNASelector")),n.createElement("div",{className:"branch"},n.createElement("div",{className:"branch1"},n.createElement("div",{className:"arrow_pip rotate_f"}),n.createElement("div",{className:"block-lb"},"Reads without rRNA"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step3 function",onMouseOver:()=>e(3),onFocus:()=>e(3)},"FragGeneScan"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"Predicted CDS"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step4 function",onMouseOver:()=>e(4),onFocus:()=>e(4)},"InterProScan"),n.createElement("div",{className:"block-nt"},"Functional analysis")),n.createElement("div",{className:"branch2"},n.createElement("div",{className:"arrow_pip rotate_t"}),n.createElement("div",{className:"block-lb"},"Reads with rRNA"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"16s rRNA"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step5 taxon",onMouseOver:()=>e(5),onFocus:()=>e(5)},"QIIME"),n.createElement("div",{className:"block-nt"},"Taxonomic analysis"))))),Table:({onHoverStep:e=(()=>null)})=>n.createElement("table",{className:"pipeline_table"},n.createElement("thead",null,n.createElement("tr",null,n.createElement("th",null,"Â "),n.createElement("th",null,"Tools"),n.createElement("th",null,"Version"),n.createElement("th",null,"Description"),n.createElement("th",null,"How we use it"))),n.createElement("tbody",null,n.createElement("tr",{className:"step0 row-cb",onMouseOver:()=>e(0),onFocus:()=>e(0)},n.createElement("td",null,"1"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/jstjohn/SeqPrep"},"SeqPrep")),n.createElement("td",null,"1.1"),n.createElement("td",null,"A program to merge paired end Illumina reads that are overlapping into a single longer read."),n.createElement("td",null,"Paired-end overlapping reads are merged - we do not perform assembly.")),n.createElement("tr",{className:"step1 row-cb",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("td",null,"2.1"),n.createElement("td",null,n.createElement(d.Z,{href:"http://www.usadellab.org/cms/?page=trimmomatic"},"Trimmomatic")),n.createElement("td",null,"0.32"),n.createElement("td",null,"A flexible read trimming tool."),n.createElement("td",null,"Low quality trimming (low quality ends and sequences with > 10% undetermined nucleotides removed).")),n.createElement("tr",{className:"step1 row-cb",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("td",null,"2.2"),n.createElement("td",null,n.createElement(d.Z,{href:"http://www.biopython.org/"},"Biopython")),n.createElement("td",null,"1.54"),n.createElement("td",null,"A set of freely available tools for biological computation written in Python."),n.createElement("td",null,"Sequences < 100 nucleotides in length removed.")),n.createElement("tr",{className:"step1 row-cb",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("td",null,"2.3"),n.createElement("td",null,n.createElement(d.Z,{href:"http://www.drive5.com/uclust/downloads1_1_579.html"},"UCLUST")),n.createElement("td",null,"1.1.579"),n.createElement("td",null,"A high-performance clustering, alignment and search algorithm."),n.createElement("td",null,"Duplicate sequences removed - clustered on 99% identity for LS454 or on 50 nucleotides prefix identity (using pick_otus.py script in Qiime v1.15).")),n.createElement("tr",{className:"step1 row-cb",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("td",null,"2.4"),n.createElement("td",null,n.createElement(d.Z,{href:"http://www.repeatmasker.org/"},"RepeatMasker")),n.createElement("td",null,"3.2.2"),n.createElement("td",null,"A program that screens DNA sequences for interspersed repeats and low complexity DNA sequences."),n.createElement("td",null,"Repeat masked - removed reads with 50% or more nucleotides masked.")),n.createElement("tr",{className:"step2 row-cb",onMouseOver:()=>e(2),onFocus:()=>e(2)},n.createElement("td",null,"3"),n.createElement("td",null,n.createElement(d.Z,{href:"http://www.ezbiocloud.net/sw/rrnaselector"},"rRNASelector")),n.createElement("td",null,"1.0.0"),n.createElement("td",null,"A computer program for selecting ribosomal RNA encoding sequences from metagenomic and metatranscriptomic shotgun libraries."),n.createElement("td",null,"Prokaryotic rRNA reads are filtered. We use the hidden Markov models to identify rRNA sequences.")),n.createElement("tr",{className:"step3 row-function",onMouseOver:()=>e(3),onFocus:()=>e(3)},n.createElement("td",null,"4"),n.createElement("td",null,n.createElement(d.Z,{href:"http://omics.informatics.indiana.edu/FragGeneScan/"},"FragGeneScan")),n.createElement("td",null,"1.15"),n.createElement("td",null,"An application for finding fragmented genes in short reads."),n.createElement("td",null,"Reads with predicted coding sequences (pCDS) above 60 nucleotides in length.")),n.createElement("tr",{className:"step4 row-function",onMouseOver:()=>e(4),onFocus:()=>e(4)},n.createElement("td",null,"5"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/ebi-pf-team/interproscan/wiki"},"InterProScan")),n.createElement("td",null,"5.0-beta"),n.createElement("td",null,"A sequence analysis application (nucleotide and protein sequences) that combines different protein signature recognition methods into one resource."),n.createElement("td",null,"Matches are generated against predicted CDS, using a sub set of databases (Pfam, TIGRFAM, PRINTS, PROSITE patterns, Gene3d) from InterPro release 31.0. A summary of Gene Ontology (GO) terms derived from InterPro matches to your sample is provided. It is generated using a reduced list of GO terms called GO slim (version"," ",n.createElement(d.Z,{href:"https://www.ebi.ac.uk/metagenomics/geneontology/subsets/goslim_metagenomics_may2012.obo"},"goslim_goa 2012"),").")),n.createElement("tr",{className:"step5 row-taxon",onMouseOver:()=>e(5),onFocus:()=>e(5)},n.createElement("td",null,"6"),n.createElement("td",null,n.createElement(d.Z,{href:"http://qiime.org/"},"QIIME")),n.createElement("td",null,"1.5.0"),n.createElement("td",null,"An open-source bioinformatics pipeline for performing taxonomic analysis from raw DNA sequencing data."),n.createElement("td",null,"16s rRNA are annotated using the Greengenes reference database (default de novo OTU picking protocol with Greengenes 12.10 reference with reverse strand matching enabled)."))))},2:{Chart:({onHoverStep:e=(()=>null)})=>n.createElement("div",{className:"block_wrapper"},n.createElement("div",{className:"block_container"},n.createElement("div",{className:"mainbranch"},n.createElement("div",{className:"block-lb"},"Raw reads"),n.createElement("div",{className:"arrow_pip "}),n.createElement("div",{className:"block small step0",onMouseOver:()=>e(0),onFocus:()=>e(0)},"SeqPrep"),n.createElement("div",{className:"arrow_pip "}),n.createElement("div",{className:"block-lb"},"Initial reads"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step1",onMouseOver:()=>e(1),onFocus:()=>e(1)},"QC",n.createElement("div",{className:"qclist"},n.createElement("ul",null,n.createElement("li",null,"Trim low quality (Trimmomatic)"),n.createElement("li",null,"Length filtering (Biopython)")))),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"Processed reads"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step2",onMouseOver:()=>e(2),onFocus:()=>e(2)},"rRNASelector")),n.createElement("div",{className:"branch"},n.createElement("div",{className:"branch1"},n.createElement("div",{className:"arrow_pip rotate_f"}),n.createElement("div",{className:"block-lb"},"Reads with rRNA masked"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step3 function",onMouseOver:()=>e(3),onFocus:()=>e(3)},"FragGeneScan"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"Predicted CDS"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step4 function",onMouseOver:()=>e(4),onFocus:()=>e(4)},"InterProScan"),n.createElement("div",{className:"block-nt"},"Functional analysis")),n.createElement("div",{className:"branch2"},n.createElement("div",{className:"arrow_pip rotate_t"}),n.createElement("div",{className:"block-lb"},"Reads with rRNA"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"16s rRNA"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step5 taxon",onMouseOver:()=>e(5),onFocus:()=>e(5)},"QIIME"),n.createElement("div",{className:"block-nt"},"Taxonomic analysis"))))),Table:({onHoverStep:e=(()=>null)})=>n.createElement("table",{className:"pipeline_table"},n.createElement("thead",null,n.createElement("tr",null,n.createElement("th",null,"Â "),n.createElement("th",null,"Tools"),n.createElement("th",null,"Version"),n.createElement("th",null,"Description"),n.createElement("th",null,"How we use it"))),n.createElement("tbody",null,n.createElement("tr",{className:"step0 row-cb",onMouseOver:()=>e(0),onFocus:()=>e(0)},n.createElement("td",null,"1"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/jstjohn/SeqPrep"},"SeqPrep")),n.createElement("td",null,"1.1"),n.createElement("td",null,"A program to merge paired end Illumina reads that are overlapping into a single longer read."),n.createElement("td",null,"Paired-end overlapping reads are merged - we do not perform assembly.")),n.createElement("tr",{className:"step1 row-cb",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("td",null,"2.1"),n.createElement("td",null,n.createElement(d.Z,{href:"http://www.usadellab.org/cms/?page=trimmomatic"},"Trimmomatic")),n.createElement("td",null,"0.32"),n.createElement("td",null,"A flexible read trimming tool."),n.createElement("td",null,"Low quality trimming (low quality ends and sequences with > 10% undetermined nucleotides removed).")),n.createElement("tr",{className:"step1 row-cb",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("td",null,"2.2"),n.createElement("td",null,n.createElement(d.Z,{href:"http://biopython.org/wiki/Biopython"},"Biopython")),n.createElement("td",null,"1.65"),n.createElement("td",null,"A set of freely available tools for biological computation written in Python."),n.createElement("td",null,"Sequences < 100 nucleotides in length removed.")),n.createElement("tr",{className:"step2 row-cb",onMouseOver:()=>e(2),onFocus:()=>e(2)},n.createElement("td",null,"3"),n.createElement("td",null,n.createElement(d.Z,{href:"http://www.ezbiocloud.net/sw/rrnaselector"},"rRNASelector")),n.createElement("td",null,"1.0.1"),n.createElement("td",null,"A computer program for selecting ribosomal RNA encoding sequences from metagenomic and metatranscriptomic shotgun libraries."),n.createElement("td",null,"Prokaryotic rRNA reads are filtered. We use the hidden Markov models to identify rRNA sequences.")),n.createElement("tr",{className:"step3 row-function",onMouseOver:()=>e(3),onFocus:()=>e(3)},n.createElement("td",null,"4"),n.createElement("td",null,n.createElement(d.Z,{href:"http://omics.informatics.indiana.edu/FragGeneScan/"},"FragGeneScan")),n.createElement("td",null,"1.15"),n.createElement("td",null,"An application for finding fragmented genes in short reads."),n.createElement("td",null,"Reads with predicted coding sequences (pCDS) above 60 nucleotides in length.")),n.createElement("tr",{className:"step4 row-function",onMouseOver:()=>e(4),onFocus:()=>e(4)},n.createElement("td",null,"5"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/ebi-pf-team/interproscan/wiki"},"InterProScan")),n.createElement("td",null,"5.9-50.0"),n.createElement("td",null,"A sequence analysis application (nucleotide and protein sequences) that combines different protein signature recognition methods into one resource."),n.createElement("td",null,"Matches are generated against predicted CDS, using a sub set of databases (Pfam, TIGRFAM, PRINTS, PROSITE patterns, Gene3d) from InterPro release 31.0. A summary of Gene Ontology (GO) terms derived from InterPro matches to your sample is provided. It is generated using a reduced list of GO terms called GO slim (version"," ",n.createElement(d.Z,{href:"https://www.ebi.ac.uk/metagenomics/geneontology/subsets/goslim_metagenomics_may2012.obo"},"goslim_goa 2012"),").")),n.createElement("tr",{className:"step5 row-taxon",onMouseOver:()=>e(5),onFocus:()=>e(5)},n.createElement("td",null,"6"),n.createElement("td",null,n.createElement(d.Z,{href:"http://qiime.org/"},"QIIME")),n.createElement("td",null,"1.9.0"),n.createElement("td",null,"An open-source bioinformatics pipeline for performing taxonomic analysis from raw DNA sequencing data."),n.createElement("td",null,"16s rRNA are annotated using the Greengenes reference database (default closed-reference OTU picking protocol with Greengenes 13.8 reference with reverse strand matching enabled)."))))},3:{Chart:({onHoverStep:e=(()=>null)})=>n.createElement("div",{className:"block_wrapper"},n.createElement("div",{className:"block_container pipe_v3"},n.createElement("div",{className:"mainbranch"},n.createElement("div",{className:"block-lb"},"Raw reads"),n.createElement("div",{className:"arrow_pip "}),n.createElement("div",{className:"block small step0",onMouseOver:()=>e(0),onFocus:()=>e(0)},n.createElement("div",{className:"children"},"SeqPrep")),n.createElement("div",{className:"arrow_pip "}),n.createElement("div",{className:"block-lb"},"Initial reads"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step1",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("div",{className:"children"},"QC")),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"Processed reads"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step2",onMouseOver:()=>e(2),onFocus:()=>e(2)},n.createElement("div",{className:"children_l"},"ncRNA selection"))),n.createElement("div",{className:"lowbranch"},n.createElement("div",{className:"lowbranch_func"},n.createElement("div",{className:"arrow_pip rotate_f"}),n.createElement("div",{className:"block-lb"},"Reads with rRNA & tRNA masked"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step3 function",onMouseOver:()=>e(3),onFocus:()=>e(3)},n.createElement("div",{className:"children_l"},"ORF predictions")),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"Predicted CDS"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step4 function",onMouseOver:()=>e(4),onFocus:()=>e(4)},n.createElement("div",{className:"children_l"},"Functional analysis")),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"IPR matches & GO terms")),n.createElement("div",{className:"lowbranch_tax"},n.createElement("div",{className:"arrow_pip rotate_t"}),n.createElement("div",{className:"block-lb"},"Reads with rRNA"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"16s rRNA"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step5 taxon",onMouseOver:()=>e(5),onFocus:()=>e(5)},n.createElement("div",{className:"children_l"},"Taxonomic analysis")),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"OTUs & taxonomic lineage")),n.createElement("div",{className:"lowbranch_trna"},n.createElement("div",{className:"arrow_pip rotate_t"}),n.createElement("div",{className:"block-lb"},"Reads with tRNA"))))),Table:({onHoverStep:e=(()=>null)})=>n.createElement("table",{className:"pipeline_table"},n.createElement("thead",null,n.createElement("tr",null,n.createElement("th",null,"Â "),n.createElement("th",null,"Tools"),n.createElement("th",null,"Version"),n.createElement("th",null,"Description"),n.createElement("th",null,"How we use it"))),n.createElement("tbody",null,n.createElement("tr",{className:"step0 row-cb",onMouseOver:()=>e(0),onFocus:()=>e(0)},n.createElement("td",null,"1"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/jstjohn/SeqPrep"},"SeqPrep")),n.createElement("td",null,"1.1"),n.createElement("td",null,"A program to merge paired end Illumina reads that are overlapping into a single longer read."),n.createElement("td",null,"Paired-end overlapping reads are merged - we do not perform assembly.")),n.createElement("tr",{className:"step1 row-cb",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("td",null,"2.1"),n.createElement("td",null,n.createElement(d.Z,{href:"http://www.usadellab.org/cms/?page=trimmomatic"},"Trimmomatic")),n.createElement("td",null,"0.35"),n.createElement("td",null,"A flexible read trimming tool."),n.createElement("td",null,"Low quality trimming (low quality ends and sequences with > 10% undetermined nucleotides removed).")),n.createElement("tr",{className:"step1 row-cb",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("td",null,"2.2"),n.createElement("td",null,n.createElement(d.Z,{href:"http://biopython.org/wiki/Biopython"},"Biopython")),n.createElement("td",null,"1.65"),n.createElement("td",null,"A set of freely available tools for biological computation written in Python."),n.createElement("td",null,"Sequences < 100 nucleotides in length removed.")),n.createElement("tr",{className:"step2 row-cb",onMouseOver:()=>e(2),onFocus:()=>e(2)},n.createElement("td",null,"3"),n.createElement("td",null,n.createElement(d.Z,{href:"http://hmmer.org"},"HMMER")),n.createElement("td",null,"v3.1b1"),n.createElement("td",null,"A computer program for biosequence analysis using profile hidden Markov models."),n.createElement("td",null,"Identification and masking of ncRNAs.")),n.createElement("tr",{className:"step3 row-function",onMouseOver:()=>e(3),onFocus:()=>e(3)},n.createElement("td",null,"4"),n.createElement("td",null,n.createElement(d.Z,{href:"https://sourceforge.net/projects/fraggenescan/"},"FragGeneScan")),n.createElement("td",null,"1.20"),n.createElement("td",null,"An application for finding (fragmented) genes in short reads."),n.createElement("td",null,"Reads with predicted coding sequences (pCDS) above 60 nucleotides in length.")),n.createElement("tr",{className:"step4 row-function",onMouseOver:()=>e(4),onFocus:()=>e(4)},n.createElement("td",null,"5"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/ebi-pf-team/interproscan/wiki"},"InterProScan")),n.createElement("td",null,"5.19-58.0"),n.createElement("td",null,"A sequence analysis application (nucleotide and protein sequences) that combines different protein signature recognition methods into one resource."),n.createElement("td",null,"Matches are generated against predicted CDS, using a sub set of databases (Pfam, TIGRFAM, PRINTS, PROSITE patterns, Gene3d) from InterPro release 58.0. A summary of Gene Ontology (GO) terms derived from InterPro matches to your sample is provided. It is generated using a reduced list of GO terms called GO slim (version"," ",n.createElement(d.Z,{href:"http://www.geneontology.org/ontology/subsets/goslim_metagenomics.obo"},"goslim_goa"),").")),n.createElement("tr",{className:"step5 row-taxon",onMouseOver:()=>e(5),onFocus:()=>e(5)},n.createElement("td",null,"6"),n.createElement("td",null,n.createElement(d.Z,{href:"http://qiime.org/"},"QIIME")),n.createElement("td",null,"1.9.1"),n.createElement("td",null,"An open-source bioinformatics pipeline for performing taxonomic analysis from raw DNA sequencing data."),n.createElement("td",null,"16s rRNA are annotated using the Greengenes reference database (default closed-reference OTU picking protocol with Greengenes 13.8 reference with reverse strand matching enabled)."))))},4:{Chart:({onHoverStep:e=(()=>null)})=>n.createElement("div",{className:"block_wrapper"},n.createElement("div",{className:"block_container pipe_v3"},n.createElement("div",{className:"mainbranch"},n.createElement("div",{className:"block-lb"},"Raw reads"),n.createElement("div",{className:"arrow_pip "}),n.createElement("div",{className:"block small step0",onMouseOver:()=>e(0),onFocus:()=>e(0)},n.createElement("div",{className:"children"},"SeqPrep")),n.createElement("div",{className:"arrow_pip "}),n.createElement("div",{className:"block-lb"},"Initial reads"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step1",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("div",{className:"children"},"QC")),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"Processed reads"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step2",onMouseOver:()=>e(2),onFocus:()=>e(2)},n.createElement("div",{className:"children_l"},"ncRNA selection"))),n.createElement("div",{className:"lowbranch"},n.createElement("div",{className:"lowbranch_func"},n.createElement("div",{className:"arrow_pip rotate_f"}),n.createElement("div",{className:"block-lb"},"Reads with ncRNA reads filtered out"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step3 function",onMouseOver:()=>e(3),onFocus:()=>e(3)},n.createElement("div",{className:"children_l"},"ORF predictions")),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"Predicted CDS"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step4 function",onMouseOver:()=>e(4),onFocus:()=>e(4)},n.createElement("div",{className:"children_l"},"Functional analysis")),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"IPR matches & GO terms")),n.createElement("div",{className:"lowbranch_tax"},n.createElement("div",{className:"arrow_pip rotate_t"}),n.createElement("div",{className:"block-lb"},"Reads with rRNA"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"SSU/LSU rRNA"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step5 taxon",onMouseOver:()=>e(5),onFocus:()=>e(5)},n.createElement("div",{className:"children_l"},"Taxonomic analysis")),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"OTUs & taxonomic lineage")),n.createElement("div",{className:"lowbranch_trna"},n.createElement("div",{className:"arrow_pip rotate_t"}),n.createElement("div",{className:"block-lb"},"Reads with tRNA"))))),Table:({onHoverStep:e=(()=>null)})=>n.createElement("table",{className:"pipeline_table"},n.createElement("thead",null,n.createElement("tr",null,n.createElement("th",null,"Â "),n.createElement("th",null,"Tools"),n.createElement("th",null,"Version"),n.createElement("th",null,"Description"),n.createElement("th",null,"How we use it"))),n.createElement("tbody",null,n.createElement("tr",{className:"step0 row-cb",onMouseOver:()=>e(0),onFocus:()=>e(0)},n.createElement("td",null,"1"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/jstjohn/SeqPrep"},"SeqPrep")),n.createElement("td",null,"1.1"),n.createElement("td",null,"A program to merge paired end Illumina reads that are overlapping into a single longer read."),n.createElement("td",null,"Paired-end overlapping reads are merged - we do not perform assembly.")),n.createElement("tr",{className:"step1 row-cb",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("td",null,"2.1"),n.createElement("td",null,n.createElement(d.Z,{href:"http://www.usadellab.org/cms/?page=trimmomatic"},"Trimmomatic")),n.createElement("td",null,"0.35"),n.createElement("td",null,"A flexible read trimming tool."),n.createElement("td",null,"Low quality trimming (low quality ends and sequences with > 10% undetermined nucleotides removed). Adapter sequences removed using Biopython SeqIO package.")),n.createElement("tr",{className:"step1 row-cb",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("td",null,"2.2"),n.createElement("td",null,n.createElement(d.Z,{href:"http://biopython.org/wiki/Biopython"},"Biopython")),n.createElement("td",null,"1.65"),n.createElement("td",null,"A set of freely available tools for biological computation written in Python."),n.createElement("td",null,"Sequences < 100 nucleotides in length removed.")),n.createElement("tr",{className:"step2 row-cb",onMouseOver:()=>e(2),onFocus:()=>e(2)},n.createElement("td",null,"3.1"),n.createElement("td",null,n.createElement(d.Z,{href:"http://eddylab.org/infernal/"},"Infernal")),n.createElement("td",null,"1.1.2"),n.createElement("td",null,'Infernal ("INFERence of RNA ALignment") is for searching DNA sequence databases for RNA structure and sequence similarities. It is an implementation of a special case of profile stochastic context-free grammars called covariance models (CMs). A CM is like a sequence profile, but it scores a combination of sequence consensus and RNA secondary structure consensus, so in many cases, it is more capable of identifying RNA homologs that conserve their secondary structure more than their primary sequence.'),n.createElement("td",null,"Identification of ncRNAs.")),n.createElement("tr",{className:"step2 row-cb",onMouseOver:()=>e(2),onFocus:()=>e(2)},n.createElement("td",null,"3.2"),n.createElement("td",null,n.createElement(d.Z,{href:"https://raw.githubusercontent.com/nawrockie/cmsearch_tblout_deoverlap/master/cmsearch-deoverlap.pl"},"cmsearch deoverlap script")),n.createElement("td",null,"1.0"),n.createElement("td",null,"A tool, which removes lower scoring overlaps from cmsearch --tblout files."),n.createElement("td",null,"Removes lower scoring overlaps from cmsearch --tblout files.")),n.createElement("tr",{className:"step3 row-function",onMouseOver:()=>e(3),onFocus:()=>e(3)},n.createElement("td",null,"4.1"),n.createElement("td",null,n.createElement(d.Z,{href:"https://sourceforge.net/projects/fraggenescan/"},"FragGeneScan")),n.createElement("td",null,"1.20"),n.createElement("td",null,"An application for finding (fragmented) genes in short reads."),n.createElement("td",null,"Run as a combined gene caller component, giving priority to Prodigal predictions in the case of assembled sequences or FragGeneScan for short reads (all predictions from the higher priority caller are used, supplemented by any non-overlapping regions predicted by the other).")),n.createElement("tr",{className:"step3 row-function",onMouseOver:()=>e(3),onFocus:()=>e(3)},n.createElement("td",null,"4.2"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/hyattpd/prodigal/wiki"},"Prodigal")),n.createElement("td",null,"2.6.3"),n.createElement("td",null,"Prodigal (Prokaryotic Dynamic Programming Genefinding Algorithm) is a microbial (bacterial and archaeal) gene finding program."),n.createElement("td",null)),n.createElement("tr",{className:"step4 row-function",onMouseOver:()=>e(4),onFocus:()=>e(4)},n.createElement("td",null,"5"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/ebi-pf-team/interproscan/wiki"},"InterProScan")),n.createElement("td",null,"5.25-64.0"),n.createElement("td",null,"A sequence analysis application (nucleotide and protein sequences) that combines different protein signature recognition methods into one resource."),n.createElement("td",null,"Matches are generated against predicted CDS, using a sub set of databases (Pfam, TIGRFAM, PRINTS, PROSITE patterns, Gene3d) from InterPro release 64.0. A summary of Gene Ontology (GO) terms derived from InterPro matches to your sample is provided. It is generated using a reduced list of GO terms called GO slim (version"," ",n.createElement(d.Z,{href:"http://www.geneontology.org/ontology/subsets/goslim_metagenomics.obo"},"goslim_goa"),").")),n.createElement("tr",{className:"step5 row-taxon",onMouseOver:()=>e(5),onFocus:()=>e(5)},n.createElement("td",null,"6"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/jfmrod/MAPseq/"},"MAPseq")),n.createElement("td",null,"1.2"),n.createElement("td",null,"MAPseq is a set of fast and accurate sequence read classification tools designed to assign taxonomy and OTU classifications to ribosomal RNA sequences."),n.createElement("td",null,"SSU and LSU rRNA are annotated using SILVAs SSU/LSU version 128 reference database, enabling classification of eukaryotes, remapped to a 7-level taxonomy."))))},4.1:{Chart:({onHoverStep:e=(()=>null)})=>n.createElement("div",{className:"block_wrapper"},n.createElement("div",{className:"block_container pipe_v3"},n.createElement("div",{className:"mainbranch"},n.createElement("div",{className:"block-lb"},"Raw reads"),n.createElement("div",{className:"arrow_pip "}),n.createElement("div",{className:"block small step0",onMouseOver:()=>e(0),onFocus:()=>e(0)},n.createElement("div",{className:"children"},"SeqPrep")),n.createElement("div",{className:"arrow_pip "}),n.createElement("div",{className:"block-lb"},"Initial reads"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step1",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("div",{className:"children"},"QC")),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"Processed reads"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step2",onMouseOver:()=>e(2),onFocus:()=>e(2)},n.createElement("div",{className:"children_l"},"ncRNA selection"))),n.createElement("div",{className:"lowbranch"},n.createElement("div",{className:"lowbranch_func"},n.createElement("div",{className:"arrow_pip rotate_f"}),n.createElement("div",{className:"block-lb"},"Reads with ncRNA reads filtered out"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step3 function",onMouseOver:()=>e(3),onFocus:()=>e(3)},n.createElement("div",{className:"children_l"},"ORF predictions")),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"Predicted CDS"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step4 function",onMouseOver:()=>e(4),onFocus:()=>e(4)},n.createElement("div",{className:"children_l"},"Functional analysis")),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"IPR matches & GO terms")),n.createElement("div",{className:"lowbranch_tax"}," ",n.createElement("div",{className:"arrow_pip rotate_t"}),n.createElement("div",{className:"block-lb"},"Reads with rRNA"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"SSU/LSU rRNA"),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block step5 taxon",onMouseOver:()=>e(5),onFocus:()=>e(5)},n.createElement("div",{className:"children_l"},"Taxonomic analysis")),n.createElement("div",{className:"arrow_pip"}),n.createElement("div",{className:"block-lb"},"OTUs & taxonomic lineage")),n.createElement("div",{className:"lowbranch_trna"},n.createElement("div",{className:"arrow_pip rotate_t"}),n.createElement("div",{className:"block-lb"},"Reads with tRNA"))))),Table:({onHoverStep:e=(()=>null)})=>n.createElement("table",{className:"pipeline_table"},n.createElement("thead",null,n.createElement("tr",null,n.createElement("th",null,"Â "),n.createElement("th",null,"Tools"),n.createElement("th",null,"Version"),n.createElement("th",null,"Description"),n.createElement("th",null,"How we use it"))),n.createElement("tbody",null,n.createElement("tr",{className:"step0 row-cb",onMouseOver:()=>e(0),onFocus:()=>e(0)},n.createElement("td",null,"1"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/jstjohn/SeqPrep"},"SeqPrep")),n.createElement("td",null,"1.2"),n.createElement("td",null,"A program to merge paired end Illumina reads that are overlapping into a single longer read."),n.createElement("td",null,"Paired-end overlapping reads are merged - if you want your data assembled, email us.")),n.createElement("tr",{className:"step1 row-cb",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("td",null,"2.1"),n.createElement("td",null,n.createElement(d.Z,{href:"http://www.usadellab.org/cms/?page=trimmomatic"},"Trimmomatic")),n.createElement("td",null,"0.35"),n.createElement("td",null,"A flexible read trimming tool."),n.createElement("td",null,"Low quality trimming (low quality ends and sequences with > 10% undetermined nucleotides removed). Adapter sequences removed using Biopython SeqIO package.")),n.createElement("tr",{className:"step1 row-cb",onMouseOver:()=>e(1),onFocus:()=>e(1)},n.createElement("td",null,"2.2"),n.createElement("td",null,n.createElement(d.Z,{href:"http://biopython.org/wiki/Biopython"},"Biopython")),n.createElement("td",null,"1.65"),n.createElement("td",null,"A set of freely available tools for biological computation written in Python."),n.createElement("td",null,"Sequences < 100 nucleotides in length removed.")),n.createElement("tr",{className:"step2 row-cb",onMouseOver:()=>e(2),onFocus:()=>e(2)},n.createElement("td",null,"3.1"),n.createElement("td",null,n.createElement(d.Z,{href:"http://eddylab.org/infernal/"},"Infernal")),n.createElement("td",null,"1.1.2"),n.createElement("td",null,'Infernal ("INFERence of RNA ALignment") is for searching DNA sequence databases for RNA structure and sequence similarities. It is an implementation of a special case of profile stochastic context-free grammars called covariance models (CMs). A CM is like a sequence profile, but it scores a combination of sequence consensus and RNA secondary structure consensus, so in many cases, it is more capable of identifying RNA homologs that conserve their secondary structure more than their primary sequence.'),n.createElement("td",null,"Identification of ncRNAs.")),n.createElement("tr",{className:"step2 row-cb",onMouseOver:()=>e(2),onFocus:()=>e(2)},n.createElement("td",null,"3.2"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/nawrockie/cmsearch_tblout_deoverlap"},"cmsearch deoverlap script")),n.createElement("td",null,"0.01"),n.createElement("td",null,"A tool, which removes lower scoring overlaps from cmsearch --tblout files."),n.createElement("td",null,"Removes lower scoring overlaps from cmsearch --tblout files.")),n.createElement("tr",{className:"step3 row-function",onMouseOver:()=>e(3),onFocus:()=>e(3)},n.createElement("td",null,"4.1"),n.createElement("td",null,n.createElement(d.Z,{href:"https://sourceforge.net/projects/fraggenescan/"},"FragGeneScan")),n.createElement("td",null,"1.20"),n.createElement("td",null,"An application for finding (fragmented) genes in short reads."),n.createElement("td",null,"Run as a combined gene caller component, giving priority to Prodigal predictions in the case of assembled sequences or FragGeneScan for short reads (all predictions from the higher priority caller are used, supplemented by any non-overlapping regions predicted by the other).")),n.createElement("tr",{className:"step3 row-function",onMouseOver:()=>e(3),onFocus:()=>e(3)},n.createElement("td",null,"4.2"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/hyattpd/prodigal/wiki"},"Prodigal")),n.createElement("td",null,"2.6.3"),n.createElement("td",null,"Prodigal (Prokaryotic Dynamic Programming Genefinding Algorithm) is a microbial (bacterial and archaeal) gene finding program."),n.createElement("td",null)),n.createElement("tr",{className:"step4 row-function",onMouseOver:()=>e(4),onFocus:()=>e(4)},n.createElement("td",null,"5"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/ebi-pf-team/interproscan/wiki"},"InterProScan")),n.createElement("td",null,"5.25-64.0"),n.createElement("td",null,"A sequence analysis application (nucleotide and protein sequences) that combines different protein signature recognition methods into one resource."),n.createElement("td",null,"Matches are generated against predicted CDS, using a sub set of databases (Pfam, TIGRFAM, PRINTS, PROSITE patterns, Gene3d) from InterPro release 64.0. A summary of Gene Ontology (GO) terms derived from InterPro matches to your sample is provided. It is generated using a reduced list of GO terms called GO slim (version"," ",n.createElement(d.Z,{href:"http://www.geneontology.org/ontology/subsets/goslim_metagenomics.obo"},"goslim_goa"),").")),n.createElement("tr",{className:"step5 row-taxon",onMouseOver:()=>e(5),onFocus:()=>e(5)},n.createElement("td",null,"6"),n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/jfmrod/MAPseq/"},"MAPseq")),n.createElement("td",null,"1.2.2"),n.createElement("td",null,"MAPseq is a set of fast and accurate sequence read classification tools designed to assign taxonomy and OTU classifications to ribosomal RNA sequences."),n.createElement("td",null,"SSU and LSU rRNA are annotated using SILVAs SSU/LSU version 132 reference database, enabling classification of eukaryotes, remapped to a 8-level taxonomy."))))},5:{Chart:()=>n.createElement("section",null,n.createElement("p",null,"This version of the MGnify analysis service offers specialised workflows for three different data types: amplicon, raw metagenomic/metatranscriptomic reads, and assembly."),n.createElement(m.Z,{tabs:i}),n.createElement(o.Z,{hash:"",isDefault:!0},n.createElement("div",null,n.createElement("h4",null,"Amplicon analysis pipeline"),n.createElement("img",{src:r,alt:"Amplicon flow diagram",style:{maxHeight:"60vh"}}))),n.createElement(o.Z,{hash:"#raw"},n.createElement("div",null,n.createElement("h4",null,"Raw reads analysis pipeline"),n.createElement("img",{src:s,alt:"Raw reads flow diagram",style:{maxHeight:"60vh"}}))),n.createElement(o.Z,{hash:"#assembly"},n.createElement("div",null,n.createElement("h4",null,"Assembly analysis pipeline"),n.createElement("img",{src:c,alt:"Assembly flow diagram",style:{maxHeight:"60vh"}})))),Table:()=>n.createElement("table",{className:"stack hover responsive-table"},n.createElement("thead",null,n.createElement("tr",null,n.createElement("th",null,"Tool/Database"),n.createElement("th",null,"Version"),n.createElement("th",null,"Purpose"),n.createElement("th",null,"Amplicon"),n.createElement("th",null,"Raw reads"),n.createElement("th",null,"Assemblies"))),n.createElement("tbody",null,n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/jstjohn/SeqPrep"},"SeqPrep")),n.createElement("td",null,n.createElement("em",null,"1.2")),n.createElement("td",null,"Merging paired end reads"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",null,"Â ")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"http://www.usadellab.org/cms/?page=trimmomatic"},"Trimmomatic")),n.createElement("td",null,n.createElement("em",null,"0.36")),n.createElement("td",null,"Quality control"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",null,"Â ")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"http://biopython.org/wiki/Biopython"},"Biopython")),n.createElement("td",null,n.createElement("em",null,"1.74")),n.createElement("td",null,"Quality control"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/arq5x/bedtools2"},"bedtools")),n.createElement("td",null,n.createElement("em",null,"2.28.0")),n.createElement("td",null,"SSU/LSU rRNA masking for ITS"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",null,"Â "),n.createElement("td",null,"Â ")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/EddyRivasLab/easel"},"Easel")),n.createElement("td",null,n.createElement("em",null,"0.45h")),n.createElement("td",null,"Sequence extraction"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"http://eddylab.org/infernal/"},"Infernal")),n.createElement("td",null,n.createElement("em",null,"1.1.2")),n.createElement("td",null,"RNA prediction"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://rfam.xfam.org/"},"Rfam")),n.createElement("td",null,n.createElement("em",null,"13.0")),n.createElement("td",null,"Identification of SSU/LSU rRNA and other ncRNA"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/jfmrod/MAPseq/"},"MAPseq")),n.createElement("td",null,n.createElement("em",null,"1.2.3")),n.createElement("td",null,"Taxonomic assignment of SSU/LSU rRNA and ITS"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/marbl/Krona/wiki"},"Kronatools")),n.createElement("td",null,n.createElement("em",null,"2.7.1")),n.createElement("td",null,"Visualisation of taxonomic analyses"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/biocore/biom-format"},"biom-format")),n.createElement("td",null,n.createElement("em",null,"2.1.6")),n.createElement("td",null,"Formatting of taxonomic analyses"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://motu-tool.org/"},"mOTUs2")),n.createElement("td",null,n.createElement("em",null,"2.5.1")),n.createElement("td",null,"Phylogenetic marker gene based taxonomic profiling"),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",null,"Â ")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/EBI-Metagenomics/FragGeneScan"},"FragGeneScan")),n.createElement("td",null,n.createElement("em",null,"1.20")),n.createElement("td",null,"Protein coding sequence prediction"),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/hyattpd/prodigal/wiki"},"Prodigal")),n.createElement("td",null,n.createElement("em",null,"2.6.3")),n.createElement("td",null,"Protein coding sequence prediction"),n.createElement("td",null,"Â "),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/ebi-pf-team/interproscan/wiki"},"InterProScan")),n.createElement("td",null,n.createElement("em",null,"75.0")),n.createElement("td",null,"Protein function annotation with separate Pfam results"),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/EBI-Metagenomics/pipeline-v5/tree/master/tools/GO-slim"},"GO terms in-house scripts")),n.createElement("td",null,n.createElement("em",null,"N/A")),n.createElement("td",null,"Assign gene ontology terms"),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"http://eggnog5.embl.de"},"eggNOG")),n.createElement("td",null,n.createElement("em",null,"4.5.1")),n.createElement("td",null,"Protein function annotation"),n.createElement("td",null,"Â "),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/eggnogdb/eggnog-mapper"},"eggNOG-mapper")),n.createElement("td",null,n.createElement("em",null,"1.0.3")),n.createElement("td",null,"Protein function annotation"),n.createElement("td",null,"Â "),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/EddyRivasLab/hmmer"},"HMMER")),n.createElement("td",null,n.createElement("em",null,"3.2.1")),n.createElement("td",null,"KEGG Ortholog prediction"),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"ftp://ftp.ebi.ac.uk/pub/databases/metagenomics/kegg_dbs/"},"KOfam - a modified version based on KEGG 90.0")),n.createElement("td",null,n.createElement("em",null,"2019-04-06")),n.createElement("td",null,"KEGG Ortholog prediction"),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/EBI-Metagenomics/pipeline-v5/tree/master/tools/Assembly/KEGG_analysis"},"KEGG and in-house scripts")),n.createElement("td",null,n.createElement("em",null,"90.0")),n.createElement("td",null,"KEGG pathway predictions"),n.createElement("td",null,"Â "),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/ebi-pf-team/genome-properties"},"Genome Properties")),n.createElement("td",null,n.createElement("em",null,"2.0.1")),n.createElement("td",null,"Systems and pathways annotation"),n.createElement("td",null,"Â "),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/antismash/antismash"},"antiSMASH")),n.createElement("td",null,n.createElement("em",null,"4.2.0")),n.createElement("td",null,"Secondary metabolite biosynthetic gene cluster annotation"),n.createElement("td",null,"Â "),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://www.wsi.uni-tuebingen.de/lehrstuehle/algorithms-in-bioinformatics/software/diamond/"},"DIAMOND")),n.createElement("td",null,n.createElement("em",null,"0.9.25.126")),n.createElement("td",null,"Protein sequence-based taxonomic analysis"),n.createElement("td",null,"Â "),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://www.arb-silva.de/download/archive/"},"SILVA release")),n.createElement("td",null,n.createElement("em",null,"132")),n.createElement("td",null,"SSU/LSU rRNA taxonomic database"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"http://itsonedb.cloud.ba.infn.it/"},"ITSoneDB")),n.createElement("td",null,n.createElement("em",null,"1.138")),n.createElement("td",null,"ITS1 taxonomic database"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",null,"Â "),n.createElement("td",null,"Â ")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://unite.ut.ee/"},"UNITE")),n.createElement("td",null,n.createElement("em",null,"8.0")),n.createElement("td",null,"ITS taxonomic database"),n.createElement("td",{className:"text-center"},"Yes"),n.createElement("td",null,"Â "),n.createElement("td",null,"Â ")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://www.uniprot.org/uniref/"},"UniRef90")),n.createElement("td",null,n.createElement("em",null,"2019_11")),n.createElement("td",null,"Protein sequence-based taxonomic analysis"),n.createElement("td",null,"Â "),n.createElement("td",null,"Â "),n.createElement("td",{className:"text-center"},"Yes")),n.createElement("tr",null,n.createElement("td",null,n.createElement(d.Z,{href:"https://github.com/ablab/spades"},"metaSPAdes")),n.createElement("td",null,n.createElement("em",null,"3.15")),n.createElement("td",null,"Assembly of raw reads (available on request)"),n.createElement("td",{className:"text-center"},"N/A"),n.createElement("td",{className:"text-center"},"N/A"),n.createElement("td",{className:"text-center"},"N/A"))))}},E=({version:e})=>{const[t,l]=(0,n.useState)(-1);if(!u[Number(e)])return null;const{Chart:a,Table:r}=u[Number(e)];return n.createElement("section",{className:`vf-content highlight-step-${t}`},n.createElement("h2",null,"Pipeline ",e),n.createElement(a,{onHoverStep:l}),n.createElement("h3",null,"Pipeline tools & steps"),n.createElement("div",{onMouseLeave:()=>l(-1)},n.createElement(r,{onHoverStep:l})))};var p=l(964);const h=()=>{const e=(0,p.Z)();return"pipelines"!==e.toLowerCase()?n.createElement(E,{version:e}):n.createElement("section",{className:"vf-content"},n.createElement("h2",null,"Pipeline release archive"),n.createElement("p",null,"You will find here the list of pipelines that were used to run the analyses."),n.createElement("h3",null,n.createElement("span",null,n.createElement(a.rU,{to:"/pipelines/5"},"Pipeline v.5.0"))," ","(06-Nov-2019)"),n.createElement("ul",null,n.createElement("li",null,"Major upgrade. This version offers specialised workflows for three different data types: amplicon, raw metagenomic/metatranscriptomic reads, and assembly. Each workflow is defined in common workflow language (CWL) and available in the"," ",n.createElement(d.Z,{href:"https://github.com/EBI-Metagenomics/pipeline-v5"},"MGnify v5.0 CWL repository"),". All databases are available from an"," ",n.createElement(d.Z,{href:"https://ftp.ebi.ac.uk/pub/databases/metagenomics/pipeline-5.0/ref-dbs"},"FTP link"),".")),n.createElement("h3",null,n.createElement("span",null,n.createElement(a.rU,{to:"/pipelines/4.1"},"Pipeline v.4.1"))," ","(17-Jan-2018)"),n.createElement("ul",null,n.createElement("li",null,"Upgraded SeqPrep to v1.2 with increased sequence length parameter to deal with longer reads"),n.createElement("li",null,"Upgraded MAPseq to v1.2.2"),n.createElement("li",null,"Rebuilt taxonomic reference database based on SILVA v132"),n.createElement("li",null,"Taxonomic assignments now also available in HDF5 format"),n.createElement("li",null,"Applied fix to the coding sequence prediction step")),n.createElement("h3",null,n.createElement("span",null,n.createElement(a.rU,{to:"/pipelines/4.0"},"Pipeline v.4.0"))," ","(04-Sep-2017)"),n.createElement("ul",null,n.createElement("li",null,"Updated tools: InterProScan"),n.createElement("li",null,"rRNASelector (used to identify 16S rRNA genes) was replaced with Infernal for SSU and LSU gene identification"),n.createElement("li",null,"The QIIME taxonomic classification component was replaced with MAPseq"),n.createElement("li",null,"The Greengenes reference database was replaced with SILVA SSU / LSU version 128, enabling classification of eukaryotes, remapped to a 8-level taxonomy"),n.createElement("li",null,"Prodigal was added to run alongside FragGeneScan as part of a combined gene caller when processing assembled sequences")),n.createElement("h3",null,n.createElement("span",null,n.createElement(a.rU,{to:"/pipelines/3.0"},"Pipeline v.3.0"))," ","(30-Jun-2016)"),n.createElement("ul",null,n.createElement("li",null,"Updated tools: InterProScan, FraGeneScan, QIIME and Trimmomatic"),n.createElement("li",null,"Updated GO slim, based on the analysis of over 22 billion (22x10^9) billion functional annotations"),n.createElement("li",null,"Added identification and masking of transfer RNA genes"),n.createElement("li",null,"Improved quality control statistics (sequence length summary, GC and nucleotide distribution)")),n.createElement("h3",null,n.createElement("span",null,n.createElement(a.rU,{to:"/pipelines/2.0"},"Pipeline v.2.0"))," ","(15-Feb-2015)"),n.createElement("ul",null,n.createElement("li",null,"Removed clustering step during the Quality control (QC)"),n.createElement("li",null,"Added step to mask rRNA on reads (instead of removing reads with rRNA)"),n.createElement("li",null,"Improved performance and tools update")),n.createElement("h3",null,n.createElement("span",null,n.createElement(a.rU,{to:"/pipelines/1.0"},"Pipeline v.1.0"))," ","(09-Dec-2009)"))}},6438:(e,t,l)=>{e.exports=l.p+"static/3676e6a78a387078a81d.png"},4262:(e,t,l)=>{e.exports=l.p+"static/5e55649e459d5f26ee6c.png"},1769:(e,t,l)=>{e.exports=l.p+"static/1dcb2cb9630a52236adc.png"}}]);
//# sourceMappingURL=400.dcb30f15.chunk.js.map