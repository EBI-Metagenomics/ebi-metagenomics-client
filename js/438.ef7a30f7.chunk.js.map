{"version":3,"file":"js/438.ef7a30f7.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/Analysis/Analyses/index.tsx","webpack://mgportalv2/./src/components/Assembly/Assemblies/index.tsx","webpack://mgportalv2/./src/components/UI/KeyValueList/index.tsx","webpack://mgportalv2/./src/pages/Run/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { unescape } from 'lodash';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList, MGnifyDatum } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport { getBiomeIcon } from 'utils/biomes';\n\nconst initialPageSize = 10;\ntype AssociatedAnaysesProps = {\n  rootEndpoint: string;\n};\n\nconst AnalysesTable: React.FC<AssociatedAnaysesProps> = ({ rootEndpoint }) => {\n  const accession = useURLAccession();\n  const [queryParameters] = useQueryParametersState(\n    {\n      'analyses-page': 1,\n      'analyses-page_size': initialPageSize,\n      'analyses-order': '',\n    },\n    {\n      'analyses-page': Number,\n      'analyses-page_size': Number,\n    }\n  );\n  const { data, loading, error, isStale } = useMGnifyData(\n    `${rootEndpoint}/${accession}/analyses`,\n    {\n      include: 'sample',\n      page: queryParameters['analyses-page'] as number,\n      ordering: queryParameters['analyses-order'] as string,\n      page_size: queryParameters['analyses-page_size'] as number,\n    }\n  );\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !data) return <FetchError error={error} />;\n\n  if (!(data.data as MGnifyDatum[]).length) return null;\n\n  const samples = {};\n  data.included\n    ?.filter(({ type }) => type === 'samples')\n    .forEach((sample) => {\n      samples[sample.id as string] = {\n        description: sample.attributes['sample-desc'],\n        biome: (\n          sample.relationships as Record<string, { data: { id: string } }>\n        ).biome.data.id,\n      };\n    });\n  const columns = [\n    {\n      id: 'biome_id',\n      Header: 'Biome',\n      accessor: (analysis) =>\n        samples?.[analysis?.relationships?.sample?.data?.id]?.biome || '',\n      Cell: ({ cell }) => (\n        <span\n          className={`biome_icon icon_xs ${getBiomeIcon(cell.value)}`}\n          style={{ float: 'initial' }}\n        />\n      ),\n    },\n    {\n      id: 'sample',\n      Header: 'Sample accession',\n      accessor: (analysis) => analysis?.relationships?.sample?.data?.id,\n      Cell: ({ cell }) => (\n        <Link to={`/samples/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'description_id',\n      Header: 'Sample description',\n      accessor: (analysis) =>\n        samples?.[analysis?.relationships?.sample?.data?.id]?.description || '',\n      Cell: ({ cell }) => unescape(cell.value),\n    },\n    {\n      id: 'assembly_id',\n      Header: ' Run / Assembly accession',\n      accessor: (analysis) => analysis?.relationships?.assembly?.data?.id || '',\n      Cell: ({ cell }) => (\n        <Link to={`/assemblies/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'pipeline_id',\n      Header: 'Pipeline version',\n      accessor: (analysis) => analysis.attributes['pipeline-version'],\n      Cell: ({ cell }) => (\n        <Link to={`/pipelines/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'analysis_id',\n      Header: 'Analysis accession',\n      accessor: (analysis) => analysis.id,\n      Cell: ({ cell }) => (\n        <Link to={`/analyses/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n  ];\n  const showPagination = (data.meta?.pagination?.count || 1) > initialPageSize;\n  return (\n    <EMGTable\n      cols={columns}\n      data={data as MGnifyResponseList}\n      title=\"Analyses\"\n      initialPage={(queryParameters['analyses-page'] as number) - 1}\n      initialPageSize={initialPageSize}\n      className=\"mg-anlyses-table\"\n      loading={loading}\n      isStale={isStale}\n      namespace=\"analyses-\"\n      showPagination={showPagination}\n    />\n  );\n};\n\nexport default AnalysesTable;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, MGnifyResponseList } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\n\nconst initialPageSize = 10;\n\nconst getURLByEndpoint = (endpoint: string, accession: string): string => {\n  if (endpoint === 'runs') return `runs/${accession}/assemblies`;\n  return 'assemblies';\n};\ntype AssociatedAssembliesProps = {\n  rootEndpoint: string;\n};\n\nconst AssociatedAssemblies: React.FC<AssociatedAssembliesProps> = ({\n  rootEndpoint,\n}) => {\n  const accession = useURLAccession();\n  const [queryParameters] = useQueryParametersState(\n    {\n      'assembly-page': 1,\n      'assembly-page_size': initialPageSize,\n      'assembly-order': '',\n    },\n    {\n      'assembly-page': Number,\n      'assembly-page_size': Number,\n    }\n  );\n  const url = getURLByEndpoint(rootEndpoint, accession);\n  const { data, loading, error, isStale } = useMGnifyData(url, {\n    sample_accession: rootEndpoint === 'samples' ? accession : undefined,\n    page: queryParameters['assembly-page'] as number,\n    ordering: queryParameters['assembly-order'] as string,\n    page_size: queryParameters['assembly-page_size'] as number,\n  });\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !data) return <FetchError error={error} />;\n  if (!(data.data as MGnifyDatum[]).length) return null;\n\n  const columns = [\n    {\n      Header: 'Assembly ID',\n      accessor: 'id',\n      Cell: ({ cell }) => (\n        <Link to={`/assemblies/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      Header: 'Experiment type',\n      accessor: 'attributes.experiment-type',\n    },\n    {\n      Header: 'WGS ID',\n      accessor: 'attributes.wgs-accession',\n    },\n    {\n      Header: 'Legacy ID',\n      accessor: 'attributes.legacy-accession',\n    },\n    {\n      Header: 'Pipeline versions',\n      accessor: 'relationships.pipelines.data',\n      Cell: ({ cell }) =>\n        (cell.value as { id: string }[]).map(({ id }) => id).join(', '),\n    },\n  ];\n  const showPagination = (data.meta?.pagination?.count || 1) > initialPageSize;\n\n  return (\n    <EMGTable\n      cols={columns}\n      data={data as MGnifyResponseList}\n      initialPage={(queryParameters['assembly-page'] as number) - 1}\n      initialPageSize={initialPageSize}\n      className=\"mg-assembly-table\"\n      loading={loading}\n      isStale={isStale}\n      namespace=\"assembly-\"\n      showPagination={showPagination}\n    />\n  );\n};\n\nexport default AssociatedAssemblies;\n","import React from 'react';\n\ntype KeyValueProps = {\n  list: { key: string; value: string | React.ElementType }[];\n};\n\nconst KeyValueList: React.FC<KeyValueProps> = ({ list }) => (\n  <div\n    className=\"vf-grid vf-grid__col-2\"\n    style={{\n      gridTemplateColumns: '1fr 2fr',\n      rowGap: '0.5rem',\n    }}\n  >\n    {list.map(({ key, value: Value }) => (\n      <React.Fragment key={key}>\n        <div style={{ textAlign: 'right' }}>{key}:</div>\n        <div>{typeof Value === 'string' ? Value : <Value />}</div>\n      </React.Fragment>\n    ))}\n  </div>\n);\n\nexport default KeyValueList;\n","import React from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Box from 'components/UI/Box';\nimport KeyValueList from 'components/UI/KeyValueList';\nimport ExtLink from 'components/UI/ExtLink';\nimport { Link } from 'react-router-dom';\nimport AssociatedAssemblies from 'src/components/Assembly/Assemblies';\nimport AssociatedAnalyses from 'src/components/Analysis/Analyses';\n\nconst ENA_VIEW_URL = 'https://www.ebi.ac.uk/ena/browser/view/';\n\nconst RunPage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`runs/${accession}`);\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: runData } = data as MGnifyResponseObj;\n\n  const details = [\n    {\n      key: 'Study',\n      value: () => (\n        <Link to={`/studies/${runData.relationships.study.data.id}`}>\n          {runData.relationships.study.data.id}\n        </Link>\n      ),\n    },\n    {\n      key: 'Sample',\n      value: () => (\n        <Link to={`/samples/${runData.relationships.sample.data.id}`}>\n          {runData.relationships.sample.data.id}\n        </Link>\n      ),\n    },\n    {\n      key: 'ENA accession',\n      value: () => (\n        <ExtLink href={`${ENA_VIEW_URL}${runData.id}`}>{runData.id}</ExtLink>\n      ),\n    },\n    {\n      key: 'Experiment type',\n      value: String(runData.attributes['experiment-type']),\n    },\n    {\n      key: 'Instrument model',\n      value: String(runData.attributes['instrument-model']),\n    },\n    {\n      key: '\tInstrument platform type',\n      value: String(runData.attributes['instrument-platform']),\n    },\n  ];\n  return (\n    <section className=\"vf-content\">\n      <h2>Run: {runData?.attributes?.['pub-title'] || ''}</h2>\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <Box label=\"Publication details\">\n            <KeyValueList list={details} />\n          </Box>\n          <Box label=\"Associated analyses\">\n            <AssociatedAnalyses rootEndpoint=\"runs\" />\n          </Box>\n          <Box label=\"Associated assemblies\">\n            <AssociatedAssemblies rootEndpoint=\"runs\" />\n          </Box>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default RunPage;\n"],"names":["rootEndpoint","accession","queryParameters","Number","data","loading","error","isStale","include","page","ordering","page_size","size","length","samples","included","filter","type","forEach","sample","id","description","attributes","biome","relationships","columns","Header","accessor","analysis","Cell","cell","className","value","style","float","to","unescape","assembly","showPagination","meta","pagination","count","cols","title","initialPage","initialPageSize","namespace","url","endpoint","getURLByEndpoint","sample_accession","undefined","map","join","list","gridTemplateColumns","rowGap","key","Value","textAlign","runData","details","study","href","String","label"],"sourceRoot":""}