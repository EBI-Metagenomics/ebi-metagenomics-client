{"version":3,"sources":["webpack://mgportalv2/./src/components/UI/ArrowForLink/index.tsx","webpack://mgportalv2/./src/components/UI/InnerCard/index.tsx","webpack://mgportalv2/./src/components/UI/OutterCard/index.tsx","webpack://mgportalv2/./src/hooks/useMGnifyData/index.tsx","webpack://mgportalv2/./src/components/UI/FetchError/index.tsx","webpack://mgportalv2/./src/components/Home/SearchBy/DataType/index.tsx","webpack://mgportalv2/./src/utils/biomes.ts","webpack://mgportalv2/./src/components/Home/SearchBy/Biomes/index.tsx","webpack://mgportalv2/./src/components/Home/SearchBy/index.tsx","webpack://mgportalv2/./src/components/Home/Request/LatestStudies/index.tsx","webpack://mgportalv2/./src/components/Home/Request/index.tsx","webpack://mgportalv2/./src/components/Home/BlogExcerpts/index.tsx","webpack://mgportalv2/./src/components/Publications/index.tsx","webpack://mgportalv2/./src/pages/Home/index.tsx"],"names":["className","width","height","xmlns","d","fill","fillRule","title","label","to","image","imageAltText","externalLink","src","alt","loading","href","children","ErrorTypes","useData","url","state","setFullState","useState","data","error","setPartialState","updatedValues","prevState","useEffect","updateState","response","json","fetch","type","FetchError","ok","JSONError","status","NotOK","fetchData","useEBISearchData","endpoint","parameters","allParemeters","format","start","config","Object","entries","map","key","value","join","useMGnifyData","keys","length","refreshPage","window","location","reload","style","backgroundColor","onClick","DataAnalysesTypeRow","link","query","size","fields","facetcount","facetsdepth","facets","Loading","textAlign","hitCount","DataTypeRow","fontSize","biomeIconMapD2","biomeIconMapD3","biomeIconMapD4","biomeIconMapD5","biomeIconMapD6","getBiomeIcon","lineage","lineageList","split","x","toLowerCase","lineageD2","slice","lineageD3","lineageD4","lineageD5","lineageD6","Biome","name","count","gridRowGap","float","ordering","id","attributes","LatestStudy","abstract","icon","substring","relationships","biomes","BlogExcerpt","header","excerpt","text","replace","trim","spotlight","tools","marginTop","Publication","journal","year","doi","authors","MainPublication","publication","pub","main","showMore","setShowMore","recent","Request"],"mappings":"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","file":"js/501.a11a8cee.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\n\nconst ArrowForLink: React.FC = () => (\n  <svg\n    aria-hidden=\"true\"\n    className=\"vf-card__heading__icon | vf-icon vf-icon-arrow--inline-end\"\n    width=\"1em\"\n    height=\"1em\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M0 12c0 6.627 5.373 12 12 12s12-5.373 12-12S18.627 0 12 0C5.376.008.008 5.376 0 12zm13.707-5.209l4.5 4.5a1 1 0 010 1.414l-4.5 4.5a1 1 0 01-1.414-1.414l2.366-2.367a.25.25 0 00-.177-.424H6a1 1 0 010-2h8.482a.25.25 0 00.177-.427l-2.366-2.368a1 1 0 011.414-1.414z\"\n      fill=\"currentColor\"\n      fillRule=\"nonzero\"\n    />\n  </svg>\n);\n\nexport default ArrowForLink;\n","import React from 'react';\nimport ArrowForLink from 'components/UI/ArrowForLink';\nimport { Link } from 'react-router-dom';\n\ntype InnerCardProps = {\n  title: string;\n  label: string;\n  to: string;\n  image?: string;\n  imageAltText?: string;\n  externalLink?: boolean;\n};\n\nconst InnerCard: React.FC<InnerCardProps> = ({\n  title,\n  label,\n  to,\n  image,\n  imageAltText,\n  externalLink = false,\n}) => {\n  return (\n    <article className=\"vf-card vf-card--striped vf-card--bordered\">\n      {image && (\n        <img\n          src={image}\n          alt={imageAltText}\n          className=\"vf-card__image\"\n          loading=\"lazy\"\n        />\n      )}\n      <div className=\"vf-card__content | vf-stack vf-stack--400\">\n        <h3 className=\"vf-card__heading\">\n          {externalLink ? (\n            <a className=\"vf-card__link\" href={to}>\n              {title} <ArrowForLink />\n            </a>\n          ) : (\n            <Link className=\"vf-card__link\" to={to}>\n              {title} <ArrowForLink />\n            </Link>\n          )}\n        </h3>\n        <p className=\"vf-card__text\">{label}</p>\n      </div>\n    </article>\n  );\n};\n\nexport default InnerCard;\n","import React from 'react';\n\nconst OutterCard: React.FC<{\n  className?: string;\n  image?: string;\n  imageAltText?: string;\n}> = ({ children, className = '', image = null, imageAltText = '' }) => {\n  return (\n    <article\n      className={`vf-card vf-card--brand vf-card--bordered ${className}`}\n    >\n      {image && (\n        <img\n          src={image}\n          alt={imageAltText}\n          className=\"vf-card__image\"\n          loading=\"lazy\"\n        />\n      )}\n      <div className=\"vf-card__content | vf-stack vf-stack--400\">\n        {children}\n      </div>\n    </article>\n  );\n};\n\nexport default OutterCard;\n","import { useState, useEffect } from 'react';\nimport config from 'config.json';\n\ntype KeyValue = {\n  [key: string]: string | number | Record<string, unknown> | [];\n};\ntype MGnifyResponse = {\n  data: Array<{\n    attributes: KeyValue;\n    id: string;\n    links: KeyValue;\n    type: string;\n    relationships: {\n      biomes?: {\n        data?: Array<{\n          id: string;\n        }>;\n      };\n      [key: string]: unknown;\n    };\n  }>;\n  links: {\n    first?: string;\n    last?: string;\n    next?: string;\n    prev?: string;\n  };\n  meta: {\n    pagination: {\n      count: number;\n      page: number;\n      pages: number;\n    };\n  };\n};\n\ntype BlogResponse = {\n  [category: string]: {\n    title: string;\n    url: string;\n    image: string;\n    excerpt: string;\n    category: string;\n    published: string;\n    emg: {\n      text: string;\n      url: string;\n    };\n  };\n};\n\nexport type ErrorFromFetch = {\n  status?: number;\n  response?: Promise<Response>;\n  type: ErrorTypes;\n  error?: unknown;\n};\nexport enum ErrorTypes {\n  FetchError,\n  NotOK,\n  JSONError,\n}\n\ninterface DataResponse {\n  data: null | KeyValue | MGnifyResponse | BlogResponse;\n  error: ErrorFromFetch | null;\n  loading: boolean;\n}\n\ninterface EBIDataResponse extends DataResponse {\n  data: KeyValue;\n}\ninterface MgnifyDataResponse extends DataResponse {\n  data: MGnifyResponse;\n}\ninterface BlogDataResponse extends DataResponse {\n  data: BlogResponse;\n}\n\nasync function fetchData(\n  url: string,\n  updateState: (DataResponse) => void\n): Promise<void> {\n  let response = null;\n  let json = null;\n  try {\n    response = await fetch(url);\n  } catch (error) {\n    updateState({\n      error: {\n        error,\n        type: ErrorTypes.FetchError,\n      },\n      loading: false,\n    });\n    return;\n  }\n  if (!response.ok) {\n    updateState({\n      error: {\n        status: response.status,\n        response,\n        type: ErrorTypes.NotOK,\n      },\n      loading: false,\n    });\n    return;\n  }\n  try {\n    json = await response.json();\n  } catch (error) {\n    updateState({\n      error: {\n        error,\n        type: ErrorTypes.JSONError,\n      },\n      loading: false,\n    });\n    return;\n  }\n\n  updateState({ data: json, loading: false });\n}\n\nconst useData: (url: string) => DataResponse = (url) => {\n  const [state, setFullState] = useState({\n    data: null,\n    loading: true,\n    error: null,\n  });\n  const setPartialState = (updatedValues): void => {\n    setFullState((prevState) => ({\n      ...prevState,\n      ...updatedValues,\n    }));\n  };\n  useEffect(() => {\n    fetchData(url, setPartialState);\n  }, [url]);\n  return state;\n};\n\nexport const useEBISearchData: (\n  endpoint: string,\n  parameters?: KeyValue\n) => EBIDataResponse = (endpoint, parameters = {}) => {\n  const defaultParameters = {\n    format: 'json',\n    start: 0,\n  };\n  const allParemeters = { ...defaultParameters, ...parameters };\n  const url = `${config.ebisearch}${endpoint}?${Object.entries(allParemeters)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')}`;\n  const data = useData(url);\n  return data as EBIDataResponse;\n};\n\nexport const useMGnifyData: (\n  endpoint: string,\n  parameters?: KeyValue\n) => MgnifyDataResponse = (endpoint, parameters = {}) => {\n  const defaultParameters = {};\n  const allParemeters = { ...defaultParameters, ...parameters };\n  let url = `${config.api}${endpoint}`;\n  if (Object.keys(allParemeters).length > 0)\n    url += `?${Object.entries(allParemeters)\n      .map(([key, value]) => `${key}=${value}`)\n      .join('&')}`;\n  const data = useData(url);\n  return data as MgnifyDataResponse;\n};\n\nexport const useBlogData: (resource: string) => BlogDataResponse = (\n  resource\n) => {\n  const data = useData(`${config.blog}${resource}`);\n  return data as BlogDataResponse;\n};\n\nexport default useData;\n","import React from 'react';\nimport { ErrorFromFetch, ErrorTypes } from 'hooks/useMGnifyData';\n\nconst refreshPage = (): void => {\n  window.location.reload();\n};\n\nconst FetchError: React.FC<{ error: ErrorFromFetch }> = ({ error }) => (\n  <div\n    className=\"vf-box vf-box-theme--primary vf-box--easy\"\n    style={{\n      backgroundColor: 'lemonchiffon',\n    }}\n  >\n    <h3 className=\"vf-box__heading\">\n      <span className=\"icon icon-common icon-exclamation-triangle\" /> Error\n      Fetching Data\n    </h3>\n    <p className=\"vf-box__text\">\n      {error.type === ErrorTypes.FetchError &&\n        `There were problems with the request. [${error.error}]`}\n      {error.type === ErrorTypes.NotOK &&\n        `The response from the server was not OK [Status: ${error.status}].`}\n      {error.type === ErrorTypes.JSONError &&\n        `The recovered resource didn't follow the expected format [${error.error}].`}\n    </p>\n    <div className=\"mg-right\">\n      <button\n        type=\"button\"\n        className=\"vf-button vf-button--tertiary vf-button--sm \"\n        onClick={refreshPage}\n      >\n        Refresh\n      </button>\n    </div>\n  </div>\n);\n\nexport default FetchError;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from 'components/UI/Loading';\nimport { useEBISearchData } from 'hooks/useMGnifyData';\nimport FetchError from 'components/UI/FetchError';\nimport './style.css';\n\nconst DataAnalysesTypeRow: React.FC<{\n  type: string;\n  label: string;\n  link: string;\n}> = ({ type, label, link }) => {\n  const { data, loading, error } = useEBISearchData('metagenomics_analyses', {\n    query: 'domain_source:metagenomics_analyses',\n    size: 0,\n    fields: 'id,name,description,biome_name,metagenomics_samples',\n    facetcount: 0,\n    facetsdepth: 5,\n    facets: `experiment_type:${type}`,\n  });\n  if (loading)\n    return (\n      <tr>\n        <td>\n          <Loading size=\"small\" />\n        </td>\n      </tr>\n    );\n  if (error) return <FetchError error={error} />;\n  return (\n    <tr className=\"vf-table__row\">\n      <td className=\"vf-table__cell\" style={{ textAlign: 'right' }}>\n        <Link to={link} className=\"mg-link\">\n          {data?.hitCount || '...'}\n        </Link>\n      </td>\n      <td className=\"vf-table__cell\">{label}</td>\n    </tr>\n  );\n};\nconst DataTypeRow: React.FC<{ label: string; endpoint: string; link: string }> =\n  ({ label, endpoint, link }) => {\n    const { data, loading, error } = useEBISearchData(endpoint, {\n      query: `domain_source:${endpoint}`,\n      size: 0,\n      fields: 'id,name,description,biome_name,metagenomics_samples',\n      facetcount: 0,\n      facetsdepth: 5,\n    });\n    if (error) return <FetchError error={error} />;\n    return (\n      <tr className=\"vf-table__row\">\n        <td className=\"vf-table__cell\" style={{ textAlign: 'right' }}>\n          {loading ? (\n            <Loading size=\"small\" />\n          ) : (\n            <Link to={link} className=\"mg-link\">\n              {data?.hitCount || '??'}\n            </Link>\n          )}\n        </td>\n        <td className=\"vf-table__cell\">{label}</td>\n      </tr>\n    );\n  };\n\nconst DataType: React.FC = () => {\n  const analysesTypes = [\n    { type: 'amplicon', label: 'amplicon', link: '' },\n    { type: 'assembly', label: 'assemblies', link: '' },\n    { type: 'metabarcoding', label: 'metabarcoding', link: '' },\n    { type: 'metagenomic', label: 'metagenomes', link: '' },\n    { type: 'metatranscriptomic', label: 'metatranscriptomics', link: '' },\n  ];\n  const types = [\n    {\n      label: 'studies',\n      endpoint: 'metagenomics_projects',\n      link: '/search#projects',\n    },\n    {\n      label: 'samples',\n      endpoint: 'metagenomics_samples',\n      link: '/search#samples',\n    },\n    {\n      label: 'analyses',\n      endpoint: 'metagenomics_analyses',\n      link: '/search#analyses',\n    },\n  ];\n\n  return (\n    <div className=\"vf-grid vf-grid__col-4\" style={{ fontSize: '0.7rem' }}>\n      <div style={{ textAlign: 'right' }}>\n        <span\n          className=\"icon icon-conceptual icon-c3\"\n          style={{ fontSize: '2rem' }}\n          data-icon=\"d\"\n        />\n      </div>\n      <table className=\"vf-table mg-small-table\">\n        <tbody className=\"vf-table__body\">\n          {analysesTypes.map(({ type, label, link }) => (\n            <DataAnalysesTypeRow\n              type={type}\n              label={label}\n              link={link}\n              key={type}\n            />\n          ))}\n        </tbody>\n      </table>\n      <div style={{ textAlign: 'right' }}>\n        <span\n          className=\"icon icon-functional icon-c9\"\n          style={{ fontSize: '2rem' }}\n          data-icon=\"U\"\n        />\n      </div>\n      <table className=\"vf-table mg-small-table\">\n        <tbody className=\"vf-table__body\">\n          {types.map(({ endpoint, label, link }) => (\n            <DataTypeRow\n              endpoint={endpoint}\n              label={label}\n              link={link}\n              key={endpoint}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default DataType;\n","const biomeIconMapD2 = {\n  'root:engineered': 'engineered_b',\n};\nconst biomeIconMapD3 = {\n  'root:engineered:wastewater': 'wastewater_b',\n  'root:environmental:air': 'air_b',\n  'root:host-associated:amphibia': 'amphibian_b',\n  'root:host-associated:arthropoda': 'arthropoda_b',\n  'root:host-associated:fish': 'fish_b',\n  'root:host-associated:human': 'human_host_b',\n  'root:host-associated:insecta': 'insect_b',\n  'root:host-associated:mammals': 'mammals_b',\n  'root:host-associated:mollusca': 'mollusca_b',\n  'root:host-associated:plants': 'plant_host_b',\n  'root:host-associated:porifera': 'porifera_b',\n};\nconst biomeIconMapD4 = {\n  'root:environmental:aquatic:freshwater': 'freshwater_b',\n  'root:environmental:aquatic:marine': 'marine_b',\n  'root:environmental:aquatic:thermal springs': 'hotspring_b',\n  'root:environmental:terrestrial:soil': 'soil_b',\n  'root:environmental:terrestrial:volcanic': 'vulcano_b',\n  'root:host-associated:human:digestive system': 'human_gut_b',\n  'root:host-associated:human:skin': 'skin_b',\n};\n\nconst biomeIconMapD5 = {\n  'root:environmental:aquatic:freshwater:drinking water': 'drinking_water_b',\n  'root:environmental:aquatic:freshwater:groundwater': 'groundwater_b',\n  'root:environmental:aquatic:freshwater:ice': 'ice_b',\n  'root:environmental:aquatic:freshwater:lake': 'lake_b',\n  'root:environmental:aquatic:freshwater:lotic': 'river_b',\n  'root:environmental:aquatic:marine:hydrothermal vents':\n    'hydrothermal_vents_b',\n  'root:environmental:terrestrial:soil:wetlands': 'wetlands_b',\n  'root:host-associated:human:digestive system:oral': 'mouth_b',\n  'root:host-associated:human:respiratory system:pulmonary system': 'lung_b',\n  'root:host-associated:mammals:nervous system:brain': 'brain_b',\n};\n\nconst biomeIconMapD6 = {\n  'root:environmental:aquatic:freshwater:groundwater:cave water': 'cave_b',\n  'root:environmental:aquatic:freshwater:ice:glacier': 'glacier_b',\n  'root:environmental:terrestrial:soil:grasslands': 'grassland_b',\n  'root:environmental:terrestrial:soil:loam:forest soil': 'forest_b',\n  'root:environmental:terrestrial:soil:sand:desert': 'desert_b',\n};\n\n/**\n * Retrieve biome icon for a lineage\n */\nexport function getBiomeIcon(lineage: string): string {\n  const lineageList = (lineage || '').split(':').map((x) => x.toLowerCase());\n\n  const lineageD2 = lineageList.slice(0, 2).join(':');\n  const lineageD3 = lineageList.slice(0, 3).join(':');\n  const lineageD4 = lineageList.slice(0, 4).join(':');\n  const lineageD5 = lineageList.slice(0, 5).join(':');\n  const lineageD6 = lineageList.slice(0, 6).join(':');\n\n  const biome =\n    biomeIconMapD6[lineageD6] ||\n    biomeIconMapD5[lineageD5] ||\n    biomeIconMapD4[lineageD4] ||\n    biomeIconMapD3[lineageD3] ||\n    biomeIconMapD2[lineageD2] ||\n    'default_b';\n  return biome;\n}\ntype Biome = { icon?: string; name: string };\nexport function simplifyBiomeIcons(biomes: Biome[]): Biome[] {\n  const groupedBiomes = {};\n  biomes.forEach((b) => {\n    if (groupedBiomes[b.icon]) {\n      groupedBiomes[b.icon].push(b.name);\n    } else {\n      groupedBiomes[b.icon] = [b.name];\n    }\n  });\n  const icons = [];\n  Object.keys(groupedBiomes).forEach((biomeIcon) => {\n    const biomesInGroup = groupedBiomes[biomeIcon].sort().join(', ');\n    icons.push({ name: biomesInGroup, icon: biomeIcon });\n  });\n  return icons;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMGnifyData } from 'hooks/useMGnifyData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport { getBiomeIcon } from 'utils/biomes';\n\nconst Biome: React.FC<{ lineage: string; name: string; count: number }> = ({\n  lineage,\n  name,\n  count,\n}) => {\n  return (\n    <div>\n      <Link\n        to={`/metagenomics/browse?lineage=${lineage}#studies`}\n        className=\"vf-grid vf-grid__col-1 mg-link\"\n        style={{ textAlign: 'center', gridRowGap: '0.2em' }}\n      >\n        <div>\n          <span\n            className={`biome_icon icon_sm ${getBiomeIcon(lineage)}`}\n            style={{ float: 'initial' }}\n          />\n        </div>\n        <div className=\"biome-text\">\n          {' '}\n          {name} ({count})\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nconst Biomes: React.FC = () => {\n  const { data, loading, error } = useMGnifyData('biomes/top10', {\n    ordering: '-samples_count',\n  });\n  if (loading) return <Loading />;\n  if (error) return <FetchError error={error} />;\n\n  return (\n    <section className=\"vf-stack vf-stack--200 search-by-biomes-section\">\n      <div className=\"vf-grid vf-grid__col-5\">\n        {data.data.map(({ id, attributes }) => (\n          <Biome\n            key={id}\n            lineage={id}\n            name={attributes['biome-name'] as string}\n            count={attributes['samples-count'] as number}\n          />\n        ))}\n      </div>\n      <div className=\"mg-right\">\n        <Link to=\"/biomes/\" className=\"vf-button vf-button--primary\">\n          View all biomes\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default Biomes;\n","import React from 'react';\nimport InnerCard from 'components/UI/InnerCard';\nimport OutterCard from 'components/UI/OutterCard';\nimport DataType from './DataType';\nimport Biomes from './Biomes';\n\nconst SearchBy: React.FC = () => {\n  return (\n    <OutterCard className=\"search-by-section\">\n      <h3 className=\"vf-card__heading\">Search by</h3>\n      <div className=\"vf-grid\">\n        <InnerCard\n          title=\"Text search\"\n          label=\"Name, biome, or keyword\"\n          to=\"/search\"\n        />\n        <InnerCard\n          title=\"Sequence search\"\n          label=\"Sequence search\"\n          to=\"/sequence-search\"\n        />\n      </div>\n      <h3 className=\"vf-card__heading\">Or by data type</h3>\n      <DataType />\n      <h3 className=\"vf-card__heading\">Or by selected biomes</h3>\n      <Biomes />\n    </OutterCard>\n  );\n};\n\nexport default SearchBy;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMGnifyData } from 'hooks/useMGnifyData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport { getBiomeIcon } from 'utils/biomes';\n\nimport './style.css';\n\ntype LatestStudyProps = {\n  id: string;\n  name: string;\n  abstract: string;\n  lineage?: string;\n};\nconst LatestStudy: React.FC<LatestStudyProps> = ({\n  id,\n  name,\n  abstract,\n  lineage,\n}) => {\n  const icon = getBiomeIcon(lineage);\n  return (\n    <article className=\"vf-summary vf-summary--has-image study\">\n      <span className={`biome_icon icon_xs ${icon}`} />\n      <h3 className=\"vf-summary__title\">\n        <Link to={`/studies/${id}`} className=\"vf-summary__link\">\n          {name}\n        </Link>\n      </h3>\n      <p className=\"vf-summary__text\">\n        {abstract.substring(0, 250)}\n        {abstract.length >= 250 && '...'}\n      </p>\n      <div className=\"vf-summary__text vf-grid\">\n        <Link to={`/studies/${id}`} className=\"vf-button vf-button--sm\">\n          View more\n        </Link>\n        <Link\n          to={`/studies/${id}#samples-section`}\n          className=\"vf-button vf-button--sm\"\n        >\n          Samples\n        </Link>\n      </div>\n    </article>\n  );\n};\n\nconst LatestStudies: React.FC = () => {\n  const { data, loading, error } = useMGnifyData('studies/recent');\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  return (\n    <section className=\"vf-stack vf-stack--200\">\n      <div className=\"vf-grid vf-grid__col-1 latest-studies-section\">\n        {data.data.map(({ id, attributes, relationships }) => (\n          <LatestStudy\n            key={id}\n            id={id}\n            name={attributes['study-name'] as string}\n            abstract={attributes['study-abstract'] as string}\n            lineage={relationships?.biomes?.data?.[0]?.id}\n          />\n        ))}\n      </div>\n      <div className=\"mg-right\">\n        <Link to=\"/browse/studies/\" className=\"vf-button vf-button--primary\">\n          View all studies\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default LatestStudies;\n","import React from 'react';\nimport InnerCard from 'components/UI/InnerCard';\nimport OutterCard from 'components/UI/OutterCard';\nimport LatestStudies from './LatestStudies';\n\nconst SearchBy: React.FC = () => {\n  return (\n    <OutterCard className=\"request-by-section\">\n      <h3 className=\"vf-card__heading\">Request analysis of</h3>\n      <div className=\"vf-grid\">\n        <InnerCard title=\"Submit and/or Request\" label=\"Your data\" to=\"/\" />\n        <InnerCard title=\"Request\" label=\"A public dataset\" to=\"/\" />\n      </div>\n      <h3 className=\"vf-card__heading\">Latest studies</h3>\n      <LatestStudies />\n    </OutterCard>\n  );\n};\n\nexport default SearchBy;\n","import React from 'react';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport InnerCard from 'components/UI/InnerCard';\nimport OutterCard from 'components/UI/OutterCard';\nimport { useBlogData } from 'hooks/useMGnifyData';\n\nimport config from 'config.json';\n\nconst removeHTMLTags = (text: string): string => {\n  return text.replace(/&lt;.+?&gt;/g, '').trim();\n};\nconst BlogExcerpt: React.FC<{\n  title: string;\n  header: string;\n  image?: string;\n  excerpt: string;\n  url: string;\n}> = ({ title, header, image, excerpt, url }) => {\n  return (\n    <OutterCard className=\"blog\">\n      <h3 className=\"vf-card__heading\">{title}</h3>\n      <InnerCard\n        image={image}\n        title={header}\n        label={removeHTMLTags(excerpt)}\n        to={url}\n        externalLink\n      />\n    </OutterCard>\n  );\n};\n\nconst BlogExcerpts: React.FC = () => {\n  const { data, loading, error } = useBlogData('feed-first-of-each.json');\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  return (\n    <div>\n      <div className=\"vf-grid\">\n        {data.spotlight && (\n          <BlogExcerpt\n            title=\"Spotlight\"\n            header={data.spotlight.title}\n            image={data.spotlight.image}\n            excerpt={data.spotlight.excerpt}\n            url={data.spotlight.url}\n          />\n        )}\n        {data.tools && (\n          <BlogExcerpt\n            title=\"Tools\"\n            header={data.tools.title}\n            image={data.tools.image}\n            excerpt={data.tools.excerpt}\n            url={data.tools.url}\n          />\n        )}\n      </div>\n      <div className=\"mg-right\" style={{ marginTop: '0.2em' }}>\n        <a href={config.blog} className=\"vf-button vf-button--primary\">\n          View all articles\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogExcerpts;\n","import React, { useState } from 'react';\n\nimport CoverImage from 'images/cover_main_publication.gif';\nimport publications from './publications.json';\n\nimport './style.css';\n\nconst Publication: React.FC<{\n  title: string;\n  journal: string;\n  year: number;\n  link: string;\n  doi: string;\n  authors: string;\n}> = ({ title, journal, year, link, doi, authors }) => {\n  return (\n    <section className=\"mg-pub\">\n      <span className=\"mg-pub-title\">{title}.</span>{' '}\n      <span className=\"mg-pub-journal\">{journal}</span> (\n      <span className=\"mg-pub-year\">{year}</span>){' '}\n      <span className=\"mg-pub-doi\">\n        doi:\n        <a title={title} href={link} className=\"ext\">\n          {doi}\n        </a>\n      </span>\n      <div className=\"mg-pub-authors\">{authors}.</div>\n    </section>\n  );\n};\nexport const MainPublication: React.FC = () => {\n  const publication = publications.filter((pub) => pub.main)?.[0];\n  return (\n    <div className=\"embl-grid | vf-content\">\n      <div className=\"vf-section-header mg-pub-section-header\">\n        <img\n          alt=\"Cover of the journal\"\n          src={CoverImage}\n          className=\"mg-pub-cover\"\n        />\n      </div>\n      <div>\n        <p>To cite MGnify, please refer to the following publication:</p>\n        {publication && (\n          <Publication\n            title={publication.title}\n            journal={publication.journal}\n            year={publication.year}\n            link={publication.link}\n            doi={publication.doi}\n            authors={publication.authors}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\nconst Publications: React.FC = () => {\n  const [showMore, setShowMore] = useState(false);\n  return (\n    <section>\n      {publications\n        .filter((pub) => showMore || pub.recent)\n        .map((pub) => (\n          <article key={pub.doi}>\n            <Publication\n              title={pub.title}\n              journal={pub.journal}\n              year={pub.year}\n              link={pub.link}\n              doi={pub.doi}\n              authors={pub.authors}\n            />\n          </article>\n        ))}\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--sm\"\n          onClick={() => setShowMore(!showMore)}\n        >\n          {showMore ? 'Less' : 'More'} publications\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default Publications;\n","import React from 'react';\nimport SearchBy from 'components/Home/SearchBy';\nimport Request from 'components/Home/Request';\nimport BlogExcerpts from 'components/Home/BlogExcerpts';\nimport Publications, { MainPublication } from 'components/Publications';\n\nconst HomePage: React.FC = () => {\n  return (\n    <section className=\"vf-content vf-stack--600\">\n      <h2>Getting started</h2>\n      <div className=\"vf-grid\">\n        <SearchBy />\n        <Request />\n      </div>\n      <hr />\n      <BlogExcerpts />\n      <h2>Latest publications</h2>\n      <Publications />\n      <h2>How to cite</h2>\n      <MainPublication />\n    </section>\n  );\n};\n\nexport default HomePage;\n"],"sourceRoot":""}