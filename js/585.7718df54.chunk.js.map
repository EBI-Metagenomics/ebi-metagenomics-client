{"version":3,"file":"js/585.7718df54.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./node_modules/lodash-es/_unescapeHtmlChar.js","webpack://mgportalv2/./node_modules/lodash-es/_basePropertyOf.js","webpack://mgportalv2/./node_modules/lodash-es/unescape.js","webpack://mgportalv2/./src/components/Analysis/Analyses/index.tsx","webpack://mgportalv2/./src/components/Nav/RouteForHash/index.tsx","webpack://mgportalv2/./src/components/Publications/index.tsx","webpack://mgportalv2/./src/components/UI/SamplesMap/index.tsx","webpack://mgportalv2/./src/components/UI/SamplesMap/render.tsx","webpack://mgportalv2/./src/components/UI/Tabs/index.tsx","webpack://mgportalv2/./src/components/UI/SamplesMap/ByStudy/index.tsx","webpack://mgportalv2/./src/hooks/data/useSamplesProvider/index.tsx","webpack://mgportalv2/./src/components/Study/Overview/index.tsx","webpack://mgportalv2/./src/components/Study/SummaryTab/index.tsx","webpack://mgportalv2/./src/pages/Study/index.tsx","webpack://mgportalv2/./node_modules/lodash-es/_arrayMap.js","webpack://mgportalv2/./node_modules/lodash-es/_baseToString.js","webpack://mgportalv2/./node_modules/lodash-es/isArray.js","webpack://mgportalv2/./node_modules/lodash-es/toString.js"],"sourcesContent":["import basePropertyOf from './_basePropertyOf.js';\n\n/** Used to map HTML entities to characters. */\nvar htmlUnescapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\"\n};\n\n/**\n * Used by `_.unescape` to convert HTML entities to characters.\n *\n * @private\n * @param {string} chr The matched character to unescape.\n * @returns {string} Returns the unescaped character.\n */\nvar unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\nexport default unescapeHtmlChar;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default basePropertyOf;\n","import toString from './toString.js';\nimport unescapeHtmlChar from './_unescapeHtmlChar.js';\n\n/** Used to match HTML entities and HTML characters. */\nvar reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n    reHasEscapedHtml = RegExp(reEscapedHtml.source);\n\n/**\n * The inverse of `_.escape`; this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n * their corresponding characters.\n *\n * **Note:** No other HTML entities are unescaped. To unescape additional\n * HTML entities use a third-party library like [_he_](https://mths.be/he).\n *\n * @static\n * @memberOf _\n * @since 0.6.0\n * @category String\n * @param {string} [string=''] The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('fred, barney, &amp; pebbles');\n * // => 'fred, barney, & pebbles'\n */\nfunction unescape(string) {\n  string = toString(string);\n  return (string && reHasEscapedHtml.test(string))\n    ? string.replace(reEscapedHtml, unescapeHtmlChar)\n    : string;\n}\n\nexport default unescape;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { unescape } from 'lodash-es';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList, MGnifyDatum } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport { getBiomeIcon } from 'utils/biomes';\n\nconst initialPageSize = 10;\ntype AssociatedAnaysesProps = {\n  rootEndpoint: string;\n};\n\nconst AnalysesTable: React.FC<AssociatedAnaysesProps> = ({ rootEndpoint }) => {\n  const accession = useURLAccession();\n  const [queryParameters] = useQueryParametersState(\n    {\n      'analyses-page': 1,\n      'analyses-page_size': initialPageSize,\n      'analyses-order': '',\n    },\n    {\n      'analyses-page': Number,\n      'analyses-page_size': Number,\n    }\n  );\n  const { data, loading, error, isStale } = useMGnifyData(\n    `${rootEndpoint}/${accession}/analyses`,\n    {\n      include: 'sample',\n      page: queryParameters['analyses-page'] as number,\n      ordering: queryParameters['analyses-order'] as string,\n      page_size: queryParameters['analyses-page_size'] as number,\n    }\n  );\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !data) return <FetchError error={error} />;\n\n  if (!(data.data as MGnifyDatum[]).length) return null;\n\n  const samples = {};\n  data.included\n    ?.filter(({ type }) => type === 'samples')\n    .forEach((sample) => {\n      samples[sample.id as string] = {\n        description: sample.attributes['sample-desc'],\n        biome: (\n          sample.relationships as Record<string, { data: { id: string } }>\n        ).biome.data.id,\n      };\n    });\n  const columns = [\n    {\n      id: 'biome_id',\n      Header: 'Biome',\n      accessor: (analysis) =>\n        samples?.[analysis?.relationships?.sample?.data?.id]?.biome || '',\n      Cell: ({ cell }) => (\n        <span\n          className={`biome_icon icon_xs ${getBiomeIcon(cell.value)}`}\n          style={{ float: 'initial' }}\n        />\n      ),\n    },\n    {\n      id: 'sample',\n      Header: 'Sample accession',\n      accessor: (analysis) => analysis?.relationships?.sample?.data?.id,\n      Cell: ({ cell }) => (\n        <Link to={`/samples/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'description_id',\n      Header: 'Sample description',\n      accessor: (analysis) =>\n        samples?.[analysis?.relationships?.sample?.data?.id]?.description || '',\n      Cell: ({ cell }) => unescape(cell.value),\n    },\n    {\n      id: 'assembly_id',\n      Header: ' Run / Assembly accession',\n      accessor: (analysis) => analysis?.relationships?.assembly?.data?.id || '',\n      Cell: ({ cell }) => (\n        <Link to={`/assemblies/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'pipeline_id',\n      Header: 'Pipeline version',\n      accessor: (analysis) => analysis.attributes['pipeline-version'],\n      Cell: ({ cell }) => (\n        <Link to={`/pipelines/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'analysis_id',\n      Header: 'Analysis accession',\n      accessor: (analysis) => analysis.id,\n      Cell: ({ cell }) => (\n        <Link to={`/analyses/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n  ];\n  const showPagination = (data.meta?.pagination?.count || 1) > initialPageSize;\n  return (\n    <EMGTable\n      cols={columns}\n      data={data as MGnifyResponseList}\n      title=\"Analyses\"\n      initialPage={(queryParameters['analyses-page'] as number) - 1}\n      initialPageSize={initialPageSize}\n      className=\"mg-anlyses-table\"\n      loading={loading}\n      isStale={isStale}\n      namespace=\"analyses-\"\n      showPagination={showPagination}\n    />\n  );\n};\n\nexport default AnalysesTable;\n","import React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\ntype PropsType = {\n  hash: string;\n  isDefault?: boolean;\n};\nconst RouteForHash: React.FC<PropsType> = ({\n  hash,\n  isDefault = false,\n  children,\n}) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (location.hash === '' && hash !== '' && isDefault) {\n      navigate(hash, { replace: true });\n    }\n  });\n\n  if (location.hash === hash) {\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport default RouteForHash;\n","import React, { useState } from 'react';\n\nimport CoverImage from 'images/cover_main_publication.gif';\nimport publications from './publications.json';\n\nimport './style.css';\n\nconst trimAuthors = (text: string, maxAuthorsLength: number): string => {\n  const authorList = text.slice(0, maxAuthorsLength).split(',');\n  authorList.pop();\n  authorList.push(' et al.');\n  return authorList.join(',');\n};\n\nexport const Publication: React.FC<{\n  title: string;\n  journal: string;\n  year: number;\n  link: string;\n  doi: string;\n  authors: string;\n  maxAuthorsLength?: number;\n}> = ({ title, journal, year, link, doi, authors, maxAuthorsLength }) => {\n  const trimmedAuthors =\n    maxAuthorsLength && authors.length > maxAuthorsLength\n      ? trimAuthors(authors, maxAuthorsLength)\n      : authors;\n  return (\n    <section className=\"mg-pub\">\n      <span className=\"mg-pub-title\">{title}.</span>{' '}\n      <span className=\"mg-pub-journal\">{journal}</span> (\n      <span className=\"mg-pub-year\">{year}</span>){' '}\n      <span className=\"mg-pub-doi\">\n        doi:\n        <a title={title} href={link} className=\"mg-ext\">\n          {doi}\n        </a>\n      </span>\n      <div className=\"mg-pub-authors\">{trimmedAuthors}.</div>\n    </section>\n  );\n};\nexport const MainPublication: React.FC = () => {\n  const publication = publications.filter((pub) => pub.main)?.[0];\n  return (\n    <div className=\"embl-grid | vf-content\">\n      <div className=\"vf-section-header mg-pub-section-header\">\n        <img\n          alt=\"Cover of the journal\"\n          src={CoverImage}\n          className=\"mg-pub-cover\"\n        />\n      </div>\n      <div>\n        <p>To cite MGnify, please refer to the following publication:</p>\n        {publication && (\n          <Publication\n            title={publication.title}\n            journal={publication.journal}\n            year={publication.year}\n            link={publication.link}\n            doi={publication.doi}\n            authors={publication.authors}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\nconst Publications: React.FC = () => {\n  const [showMore, setShowMore] = useState(false);\n  return (\n    <section className=\"mg-pub-section\">\n      {publications\n        .filter((pub) => showMore || pub.recent)\n        .map((pub) => (\n          <article key={pub.doi}>\n            <Publication\n              title={pub.title}\n              journal={pub.journal}\n              year={pub.year}\n              link={pub.link}\n              doi={pub.doi}\n              authors={pub.authors}\n            />\n          </article>\n        ))}\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--sm\"\n          onClick={() => setShowMore(!showMore)}\n        >\n          {showMore ? 'Less' : 'More'} publications\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default Publications;\n","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOMServer from 'react-dom/server';\n\nimport MarkerClusterer from '@googlemaps/markerclustererplus';\n\nimport { MGnifyDatum } from 'hooks/data/useData';\n\nimport './style.css';\n\n// TODO: make the link play nicer with react-router\nconst MarkerPopup: React.FC<{ sample: MGnifyDatum }> = ({ sample }) => (\n  <div className=\"vf-box vf-box--easy\">\n    <h3 className=\"vf-box__heading\">\n      <a href={`../samples/${sample.id}`}>{sample.id}</a>\n      {/* <Link to=\"/search/studies\">{sample.id}</Link> */}\n    </h3>\n    <p className=\"vf-box__text\">{sample.attributes['sample-desc']}</p>\n  </div>\n);\nconst ClusterMarkerPopup: React.FC<{ accessions: string[] }> = ({\n  accessions,\n}) => (\n  <div className=\"vf-box vf-box--easy\">\n    <h3 className=\"vf-box__heading\">Samples on this geographical location</h3>\n    <ul className=\"vf-list\">\n      {accessions.map((accession) => (\n        <li ref={accession}>\n          <a href={`../samples/${accession}`}>{accession}</a>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\ntype MapProps = {\n  samples: Array<MGnifyDatum>;\n};\n\nconst SamplesMap: React.FC<MapProps> = ({ samples }) => {\n  const ref = useRef();\n  const [theMap, setTheMap] = useState(null);\n  const markerCluster = useRef<MarkerClusterer>(null);\n  const sampleInfoWindow = useRef(new google.maps.InfoWindow());\n  const clusterInfoWindow = useRef(new google.maps.InfoWindow());\n  const newBoundary = useRef(new google.maps.LatLngBounds());\n\n  const markers = useRef({});\n\n  useEffect(() => {\n    if (theMap === null) {\n      const tmpMap = new google.maps.Map(ref.current, {\n        maxZoom: 10,\n        minZoom: 2,\n      });\n      setTheMap(tmpMap);\n    }\n  }, [theMap]);\n  useEffect(() => {\n    if (theMap && samples) {\n      if (markerCluster.current) {\n        markerCluster.current.clearMarkers();\n      }\n\n      samples\n        .filter(({ id }) => !(id in markers.current))\n        .forEach((sample) => {\n          const position = {\n            lat: sample.attributes.latitude as number,\n            lng: sample.attributes.longitude as number,\n          };\n          const marker = new google.maps.Marker({\n            position,\n            title: sample.id,\n          });\n          newBoundary.current.extend(position);\n          marker.addListener('click', () => {\n            sampleInfoWindow.current.setContent(\n              ReactDOMServer.renderToString(<MarkerPopup sample={sample} />)\n            );\n            sampleInfoWindow.current.open(theMap, marker);\n          });\n          markers.current[sample.id] = marker;\n        });\n      markerCluster.current = new MarkerClusterer(\n        theMap,\n        Object.values(markers.current),\n        {\n          imagePath:\n            'https://raw.githubusercontent.com/googlemaps/js-markerclustererplus/master/images/m',\n          maxZoom: 10,\n        }\n      );\n\n      // for clusters in MAX Zoom and with less than 10 elements show a list\n      google.maps.event.addListener(\n        markerCluster.current,\n        'click',\n        // eslint-disable-next-line func-names\n        function (cluster) {\n          if (\n            // eslint-disable-next-line no-underscore-dangle, react/no-this-in-sfc\n            this.prevZoom_ + 1 <= this.getMaxZoom() ||\n            cluster.getSize() >= 10\n          ) {\n            return;\n          }\n          clusterInfoWindow.current.setPosition(cluster.getCenter());\n\n          clusterInfoWindow.current.setContent(\n            ReactDOMServer.renderToString(\n              <ClusterMarkerPopup\n                accessions={cluster.getMarkers().map((m) => m.getTitle())}\n              />\n            )\n          );\n\n          clusterInfoWindow.current.open(theMap);\n        }\n      );\n\n      theMap.fitBounds(newBoundary.current);\n    }\n  }, [theMap, samples]);\n\n  return <div ref={ref} id=\"map\" style={{ height: '100%' }} />;\n};\n\nexport default SamplesMap;\n","import React, { ReactElement } from 'react';\nimport { Status } from '@googlemaps/react-wrapper';\nimport { ErrorTypes } from 'hooks/data/useData';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\n\nconst render = (status: Status): ReactElement => {\n  if (status === Status.LOADING) return <Loading />;\n  if (status === Status.FAILURE)\n    return (\n      <FetchError\n        error={{\n          status: 200,\n          type: ErrorTypes.OtherError,\n          error: status,\n        }}\n      />\n    );\n  return null;\n};\n\nexport default render;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Tab: React.FC = () => null;\n\ntype TabsProps = {\n  tabs: Array<{\n    label: string | React.ElementType;\n    to: string;\n  }>;\n};\nconst Tabs: React.FC<TabsProps> = ({ tabs }) => {\n  const location = useLocation();\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label: Label, to }) => (\n          <li className=\"vf-tabs__item\" key={to}>\n            <Link\n              className={`vf-tabs__link ${\n                to === location.pathname ||\n                (to.startsWith('#') && to === location.hash) ||\n                (to === '#' && location.hash === '')\n                  ? 'is-active'\n                  : ''\n              }`}\n              to={to}\n            >\n              {typeof Label === 'string' ? Label : <Label />}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React, { useState, useContext } from 'react';\n\nimport { Wrapper } from '@googlemaps/react-wrapper';\n\nimport useSamplesProvider from 'hooks/data/useSamplesProvider';\n\nimport UserContext from 'pages/Login/UserContext';\nimport SamplesMap from 'components/UI/SamplesMap';\nimport render from '../render';\nimport '../style.css';\n\nconst LIMIT = 200;\n\ntype SamplesMapProps = {\n  study: string;\n};\nconst SamplesMapByStudy: React.FC<SamplesMapProps> = ({ study }) => {\n  const [limit, setLimit] = useState(LIMIT);\n  const { samples, total } = useSamplesProvider(study, limit);\n  const { config } = useContext(UserContext);\n\n  const samplesFiltered = samples.filter((sample) => {\n    try {\n      return (\n        Number(sample.attributes.longitude) !== 0.0 &&\n        Number(sample.attributes.latitude) !== 0.0\n      );\n    } catch {\n      return false;\n    }\n  });\n\n  return (\n    <div className=\"mg-map-container\">\n      <div className=\"mg-map-wrapper\">\n        <Wrapper apiKey={config.googleMapsKey} render={render}>\n          <SamplesMap samples={samplesFiltered} />\n        </Wrapper>\n      </div>\n      {total && (\n        <div className=\"mg-map-progress\">\n          <progress max={total} value={samples.length} />\n          {total > limit && (\n            <div>\n              ⚠️ We are only loading the first {LIMIT} samples. Click{' '}\n              <button\n                type=\"button\"\n                className=\"vf-button vf-button--link mg-button-as-link\"\n                onClick={() => setLimit(total)}\n              >\n                HERE\n              </button>{' '}\n              to load them all.\n            </div>\n          )}\n          {samplesFiltered.length === 0 && (\n            <div>\n              ⚠️ None of the {total > limit ? 'loaded' : ''} samples have\n              geolocation co-ordinates.\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SamplesMapByStudy;\n","import { useState, useEffect } from 'react';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, ErrorFromFetch } from 'hooks/data/useData';\n\ntype SampleProviderResponse = {\n  samples: MGnifyDatum[];\n  total: number | null;\n  loading: boolean;\n  error: ErrorFromFetch;\n};\nconst useSamplesProvider = (\n  study: string,\n  limit?: number\n): SampleProviderResponse => {\n  const [page, setPage] = useState(1);\n  const [samples, setSamples] = useState<MGnifyDatum[]>([]);\n  const [total, setTotal] = useState(null);\n  const { data, isStale, loading, error } = useMGnifyData('samples', {\n    study_accession: study,\n    page,\n  });\n  useEffect(() => {\n    if (data?.data && !isStale && page === data?.meta?.pagination?.page) {\n      const aggregatedSamples = [...samples, ...(data.data as MGnifyDatum[])];\n      setSamples(aggregatedSamples);\n      const totalInResponse = data?.meta?.pagination?.count;\n      if (total !== totalInResponse && typeof totalInResponse === 'number') {\n        setTotal(totalInResponse);\n      }\n      if (data?.links?.next && aggregatedSamples.length < limit) {\n        setPage(page + 1);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, page, limit]);\n  useEffect(() => {\n    if (data?.links?.next && samples.length < limit) {\n      setPage(page + 1);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [limit]);\n\n  return { samples, total, loading, error };\n};\n\nexport default useSamplesProvider;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Publication } from 'components/Publications';\nimport AnalysesTable from 'components/Analysis/Analyses';\nimport Box from 'components/UI/Box';\nimport ExtLink from 'components/UI/ExtLink';\nimport SamplesMapByStudy from 'components/UI/SamplesMap/ByStudy';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport { getBiomeIcon } from 'utils/biomes';\nimport UserContext from 'pages/Login/UserContext';\n\ntype StudyOverviewProps = {\n  data: MGnifyDatum;\n  included: Array<unknown>;\n};\nconst StudyOverview: React.FC<StudyOverviewProps> = ({ data, included }) => {\n  const { config } = useContext(UserContext);\n  const lineage = data.relationships.biomes.data[0].id;\n  const publications = included.filter(({ type }) => type === 'publications');\n  return (\n    <section>\n      <div className=\"vf-grid\">\n        <div>\n          <h4>\n            Last updated:{' '}\n            {new Date(\n              data?.attributes?.['last-update'] as string\n            ).toDateString()}\n          </h4>\n          <Box label=\"Classification\">\n            <span\n              className={`biome_icon icon_sm ${getBiomeIcon(lineage)}`}\n              style={{ float: 'initial' }}\n            />\n            {lineage}\n          </Box>\n          <Box label=\"Description\">{data.attributes['study-abstract']}</Box>\n        </div>\n        <SamplesMapByStudy study={data.id} />\n      </div>\n      <br />\n      <div className=\"mg-flex\">\n        {data?.relationships?.studies?.data?.length > 0 && (\n          <Box label=\"Related studies\">\n            <ul className=\"vf-list\">\n              {data.relationships.studies.data.map(({ id }) => (\n                <li key={id as string}>\n                  <Link to={`/studies/${id}`}>{id}</Link>\n                </li>\n              ))}\n            </ul>\n          </Box>\n        )}\n        <div>\n          {data?.attributes?.['is-public'] && (\n            <Box label=\"External links\">\n              <ul className=\"vf-list\">\n                <li>\n                  <ExtLink\n                    href={`${config.enaURL}/${data.attributes['secondary-accession']}`}\n                  >\n                    ENA website ({data.attributes['secondary-accession']})\n                  </ExtLink>\n                </li>\n              </ul>\n            </Box>\n          )}\n          {publications?.length > 0 && (\n            <Box label=\"Publications\">\n              <ul className=\"vf-list\">\n                {publications.map(({ attributes, id }) => (\n                  <li key={id as string}>\n                    <Publication\n                      title={attributes['pub-title']}\n                      journal={attributes['iso-journal']}\n                      year={attributes['published-year']}\n                      link={`http://${attributes.doi}`}\n                      doi={attributes.doi}\n                      authors={attributes.authors}\n                      maxAuthorsLength={70}\n                    />\n                  </li>\n                ))}\n              </ul>\n            </Box>\n          )}\n        </div>\n      </div>\n      <br />\n      <div>\n        <AnalysesTable rootEndpoint=\"studies\" />\n      </div>\n    </section>\n  );\n};\n\nexport default StudyOverview;\n","import React from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\n\ntype SummaryProps = {\n  accession: string;\n};\ntype DownloadResponseType = {\n  attributes: {\n    'group-type': string;\n    description: {\n      label: string;\n    };\n  };\n  relationships: {\n    pipeline: {\n      data: {\n        id: string;\n      };\n    };\n  };\n  links: {\n    self: string;\n  };\n};\nconst SummaryTab: React.FC<SummaryProps> = ({ accession }) => {\n  const { data, loading, error } = useMGnifyData(\n    `studies/${accession}/downloads`\n  );\n  const pipelines = {};\n  ((data?.data as DownloadResponseType[]) || []).forEach((download) => {\n    const pipeline = download?.relationships?.pipeline?.data?.id;\n    const group = download?.attributes?.['group-type'];\n    const label = download?.attributes?.description.label;\n    const link = download?.links?.self;\n    if (!pipelines[pipeline]) {\n      pipelines[pipeline] = {};\n    }\n    if (!pipelines[pipeline][group]) {\n      pipelines[pipeline][group] = [];\n    }\n    pipelines[pipeline][group].push({\n      label,\n      link,\n    });\n  });\n  return (\n    <section>\n      <p>\n        In this section you can download the different results matrix files\n        summarising the study. Each downloadable file contains an aggregation of\n        the analysis results from the individual study&apos;s runs. To visualise\n        and download the analysis results for individual runs, please access\n        their respective pages.\n      </p>\n      {loading && <Loading />}\n      {error && <FetchError error={error} />}\n      <ul className=\"vf-list\">\n        {Object.entries(pipelines).map(([pipeline, groups]) => (\n          <li key={pipeline} className=\"vf-list__item mg-list__item\">\n            <h4>Pipeline version: {pipeline}</h4>\n            <ul className=\"vf-list\">\n              {Object.entries(groups).map(([group, links]) => (\n                <li key={group} className=\"vf-list__item mg-list__item\">\n                  <h6>{group}</h6>\n                  <ul className=\"vf-list\">\n                    {links.map(({ label, link }) => (\n                      <li key={link} className=\"vf-list__item mg-list__item\">\n                        <a href={link} download>\n                          <span className=\"icon icon-common icon-download\" />{' '}\n                          {label}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n              ))}\n            </ul>\n            <hr />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default SummaryTab;\n","import React from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Tabs from 'components/UI/Tabs';\nimport Overview from 'components/Study/Overview';\nimport SummaryTab from 'components/Study/SummaryTab';\nimport RouteForHash from 'components/Nav/RouteForHash';\n\nconst tabs = [\n  { label: 'Overview', to: '#overview' },\n  { label: 'Analysis summary', to: '#analysis' },\n];\n\nconst StudyPage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`studies/${accession}`, {\n    include: 'publications',\n  });\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: studyData, included } = data as MGnifyResponseObj;\n  return (\n    <section className=\"vf-content\">\n      <h2>Study {accession}</h2>\n      <h3>{studyData.attributes['study-name']}</h3>\n      <Tabs tabs={tabs} />\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <RouteForHash hash=\"#overview\" isDefault>\n            <Overview data={studyData} included={included || []} />\n          </RouteForHash>\n          <RouteForHash hash=\"#analysis\">\n            <SummaryTab accession={accession} />\n          </RouteForHash>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default StudyPage;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n"],"names":["object","key","undefined","reEscapedHtml","reHasEscapedHtml","RegExp","source","rootEndpoint","accession","useURLAccession","queryParameters","Number","data","loading","error","isStale","useMGnifyData","include","page","ordering","page_size","Loading","size","FetchError","length","samples","included","filter","type","forEach","sample","id","description","attributes","biome","relationships","columns","Header","accessor","analysis","Cell","cell","className","value","style","float","to","string","test","replace","assembly","showPagination","meta","pagination","count","EMGTable","cols","title","initialPage","initialPageSize","namespace","hash","isDefault","children","location","navigate","useEffect","Publication","journal","year","link","doi","authors","maxAuthorsLength","trimmedAuthors","text","authorList","slice","split","pop","push","join","trimAuthors","href","MainPublication","publication","pub","main","alt","src","showMore","setShowMore","useState","recent","map","onClick","MarkerPopup","ClusterMarkerPopup","accessions","ref","useRef","theMap","setTheMap","markerCluster","sampleInfoWindow","google","maps","InfoWindow","clusterInfoWindow","newBoundary","LatLngBounds","markers","tmpMap","Map","current","maxZoom","minZoom","clearMarkers","position","lat","latitude","lng","longitude","marker","Marker","extend","addListener","setContent","open","Object","values","imagePath","event","cluster","this","prevZoom_","getMaxZoom","getSize","setPosition","getCenter","getMarkers","m","getTitle","fitBounds","height","status","Status","tabs","label","Label","pathname","startsWith","study","limit","setLimit","total","setPage","setSamples","setTotal","study_accession","aggregatedSamples","totalInResponse","links","next","config","useContext","UserContext","samplesFiltered","Wrapper","apiKey","googleMapsKey","render","SamplesMap","max","lineage","biomes","publications","Date","toDateString","Box","studies","ExtLink","enaURL","Analyses","pipelines","download","pipeline","group","self","entries","groups","studyData","Tabs","RouteForHash","Overview","array","iteratee","index","result","Array","symbolProto","symbolToString","toString","baseToString","call","isArray"],"sourceRoot":""}