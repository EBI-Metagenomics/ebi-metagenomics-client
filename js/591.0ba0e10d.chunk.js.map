{"version":3,"file":"js/591.0ba0e10d.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/Nav/RouteForHash/index.tsx","webpack://mgportalv2/./src/components/UI/EMGTable/PaginationButton/index.tsx","webpack://mgportalv2/./src/components/UI/EMGTable/index.tsx","webpack://mgportalv2/./src/components/UI/ExtLink/index.tsx","webpack://mgportalv2/./src/components/UI/FetchError/index.tsx","webpack://mgportalv2/./src/components/UI/KeyValueList/index.tsx","webpack://mgportalv2/./src/components/UI/Tabs/index.tsx","webpack://mgportalv2/./src/hooks/useQueryParamState/index.tsx","webpack://mgportalv2/./src/hooks/useURLAccession/index.tsx","webpack://mgportalv2/./src/components/Genomes/Overview/index.tsx","webpack://mgportalv2/./src/components/Downloads/index.tsx","webpack://mgportalv2/./src/pages/Genome/index.tsx","webpack://mgportalv2/./src/utils/taxon.ts"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\ntype PropsType = {\n  hash: string;\n  isDefault?: boolean;\n};\nconst RouteForHash: React.FC<PropsType> = ({\n  hash,\n  isDefault = false,\n  children,\n}) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (location.hash === '' && hash !== '' && isDefault) {\n      navigate(hash, { replace: true });\n    }\n  });\n\n  if (location.hash === hash) {\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport default RouteForHash;\n","import React, { MouseEventHandler } from 'react';\n\ntype PaginationButtonProps = {\n  currentPageIndex: number;\n  pageIndex: number;\n  gotoPage: (pageIndex: number) => MouseEventHandler;\n};\n\nconst PaginationButton: React.FC<PaginationButtonProps> = ({\n  currentPageIndex,\n  pageIndex,\n  gotoPage,\n}) => {\n  if (currentPageIndex === pageIndex) {\n    return (\n      <li className=\"vf-pagination__item vf-pagination__item--is-active\">\n        <span className=\"vf-pagination__label\" aria-current=\"page\">\n          <span className=\"vf-u-sr-only\">Page </span>\n          {currentPageIndex + 1}\n        </span>\n      </li>\n    );\n  }\n  return (\n    <li className=\"vf-pagination__item\">\n      <button\n        type=\"button\"\n        onClick={() => gotoPage(pageIndex)}\n        className=\"vf-button vf-button--link vf-pagination__link\"\n      >\n        <span className=\"vf-u-sr-only\"> page</span>\n        {pageIndex + 1}\n      </button>\n    </li>\n  );\n};\n\nexport default PaginationButton;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n  useRef,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEventHandler,\n} from 'react';\nimport { Column, usePagination, useSortBy, useTable } from 'react-table';\n\nimport Loading from 'components/UI/Loading';\nimport { MGnifyResponse, MGnifyDatum } from 'src/hooks/data/useData';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport PaginationButton from './PaginationButton';\n\nimport './style.css';\n\ntype PaginationRanges = {\n  startingPages: number[];\n  endingPages: number[];\n  adjacentPages: number[];\n  hasJumpFromStart: boolean;\n  hasJumpToEnd: boolean;\n};\n\nfunction getPaginationRanges(\n  pageIndex: number,\n  pageCount: number\n): PaginationRanges {\n  const startingPages = pageCount > 1 ? [0, 1] : [0];\n\n  const adjacentPages = pageCount > 2 ? [Math.max(2, pageIndex - 2)] : [];\n  for (\n    let page = adjacentPages[0] + 1;\n    page < pageCount - 2 && adjacentPages.length < 5;\n    page += 1\n  ) {\n    adjacentPages.push(page);\n  }\n\n  let endingPages = [];\n  if (pageCount > 7) {\n    endingPages = [pageCount - 2, pageCount - 1];\n  } else if (pageCount > 6) {\n    endingPages = [pageCount - 1];\n  }\n\n  return {\n    startingPages,\n    endingPages,\n    adjacentPages,\n    hasJumpFromStart:\n      !!adjacentPages.length &&\n      adjacentPages[0] > startingPages[startingPages.length - 1] + 1,\n    hasJumpToEnd:\n      !!endingPages.length &&\n      !!adjacentPages.length &&\n      endingPages[0] > adjacentPages[adjacentPages.length - 1] + 1,\n  };\n}\n\nfunction getOrderingQueryParamFromSortedColumn(\n  tableSortBy: Array<{ id: string; desc: boolean }>\n): string {\n  if (!tableSortBy.length) return '';\n  const col = tableSortBy[0];\n  return `${col.desc ? '-' : ''}${col.id\n    .replace(/attributes./g, '')\n    .replace(/-/g, '_')}`;\n}\n\ntype EMGTableProps = {\n  cols: Column[];\n  data: MGnifyResponse | Array<MGnifyDatum>;\n  title?: string | React.ElementType;\n  showPagination?: boolean;\n  initialPage?: number;\n  initialPageSize?: number;\n  className?: string;\n  namespace?: string;\n  sortable?: boolean;\n  loading?: boolean;\n  isStale?: boolean;\n};\n\nconst EMGTable: React.FC<EMGTableProps> = ({\n  cols,\n  data,\n  title: Title,\n  initialPage = 0,\n  initialPageSize = 25,\n  className = '',\n  namespace = '',\n  showPagination = true,\n  sortable = false,\n  loading = false,\n  isStale = false,\n}) => {\n  const [queryParameters, setQueryParameters] = useQueryParametersState(\n    {\n      [`${namespace}page`]: 1,\n      [`${namespace}order`]: '',\n      [`${namespace}page_size`]: initialPageSize,\n    },\n    {\n      [`${namespace}page`]: Number,\n      [`${namespace}page_size`]: Number,\n    }\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    setPageSize,\n    nextPage,\n    previousPage,\n    state: { pageIndex, pageSize, sortBy },\n  } = useTable(\n    {\n      columns: cols,\n      data: (data as MGnifyResponse)?.data || data,\n      initialState: {\n        pageIndex: initialPage,\n        pageSize: queryParameters[`${namespace}page_size`],\n      },\n      pageCount: (data as MGnifyResponse)?.meta?.pagination?.pages || 1,\n      manualPagination: true,\n      manualSortBy: true,\n    },\n    useSortBy,\n    usePagination\n  );\n  const tableRef = useRef(null);\n  const [isChangingPage, setChangingPage] = useState(false);\n\n  useEffect(() => {\n    if (\n      showPagination &&\n      queryParameters[`${namespace}page`] !== pageIndex + 1\n    ) {\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}page`]: pageIndex + 1,\n      });\n      if (tableRef.current && isChangingPage) {\n        tableRef.current.scrollIntoView();\n        setChangingPage(false);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showPagination, setQueryParameters, pageIndex]);\n\n  useEffect(() => {\n    if (\n      showPagination &&\n      queryParameters[`${namespace}page_size`] !== pageSize\n    ) {\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}page_size`]: pageSize,\n      });\n      if (tableRef.current && isChangingPage) {\n        tableRef.current.scrollIntoView();\n        setChangingPage(false);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showPagination, setQueryParameters, pageSize]);\n\n  useEffect(() => {\n    if (sortable) {\n      const order = getOrderingQueryParamFromSortedColumn(sortBy);\n      if (order === queryParameters[`${namespace}order`]) return;\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}order`]: order,\n        [`${namespace}page`]: 1,\n      });\n      if (tableRef.current && isChangingPage) {\n        tableRef.current.scrollIntoView();\n        setChangingPage(false);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showPagination, setQueryParameters, sortBy, sortable]);\n\n  const paginationRanges = useMemo(\n    () => getPaginationRanges(pageIndex, pageCount),\n    [pageIndex, pageCount]\n  );\n  const goToPageAndScroll = (pageNumber): MouseEventHandler => {\n    setChangingPage(true);\n    return gotoPage(pageNumber);\n  };\n  const changeSizeAndScroll = (evt): void => {\n    setChangingPage(true);\n    return setPageSize(+evt.target.value);\n  };\n\n  if (loading && !isStale) return <Loading size=\"small\" />;\n\n  return (\n    <section>\n      <div className=\"mg-table-overlay-container\">\n        <div className={loading && isStale ? 'mg-table-overlay' : undefined} />\n        <table\n          {...getTableProps}\n          className={`vf-table--striped ${className}`}\n          ref={tableRef}\n        >\n          {Title && (\n            <caption className=\"vf-table__caption\">\n              {typeof Title === 'string' ? Title : <Title />}\n            </caption>\n          )}\n          <thead className=\"vf-table__header\">\n            {headerGroups.map((headerGroup) => (\n              <tr\n                {...headerGroup.getHeaderGroupProps()}\n                className=\"vf-table__row\"\n              >\n                {headerGroup.headers.map((column) => (\n                  <th\n                    {...(sortable && column.canSort\n                      ? column.getHeaderProps(column.getSortByToggleProps())\n                      : { key: column.id })}\n                    className=\"vf-table__heading\"\n                  >\n                    {column.render('Header')}\n                    {sortable && column.canSort && (\n                      <>\n                        &nbsp;\n                        <span>\n                          {/* eslint-disable-next-line no-nested-ternary */}\n                          {column.isSorted ? (\n                            column.isSortedDesc ? (\n                              <i className=\"icon icon-common icon-sort-down\" />\n                            ) : (\n                              <i className=\"icon icon-common icon-sort-up\" />\n                            )\n                          ) : (\n                            <i className=\"icon icon-common icon-sort\" />\n                          )}\n                        </span>\n                      </>\n                    )}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"vf-table__body\">\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()} className=\"vf-table__row\">\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()} className=\"vf-table__cell\">\n                        {cell.render('Cell')}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      {showPagination && (\n        <section className=\"mg-table-footer\">\n          <label className=\"vf-form__label\">\n            Page Size:\n            <select\n              className=\"vf-form__select\"\n              value={queryParameters[`${namespace}page_size`] as number}\n              onBlur={changeSizeAndScroll}\n              onChange={changeSizeAndScroll}\n            >\n              {[10, 25, 50].map((pg) => (\n                <option key={pg} value={pg}>\n                  Show {pg}\n                </option>\n              ))}\n            </select>\n          </label>\n          <nav className=\"vf-pagination\" aria-label=\"Pagination\">\n            <ul className=\"vf-pagination__list\">\n              <li className=\"vf-pagination__item vf-pagination__item--previous-page\">\n                <button\n                  disabled={!canPreviousPage}\n                  type=\"button\"\n                  onClick={previousPage}\n                  className=\"vf-button vf-button--link vf-pagination__link\"\n                >\n                  Previous<span className=\"vf-u-sr-only\"> page</span>\n                </button>\n              </li>\n\n              {paginationRanges.startingPages.map((paginationIndex) => (\n                <PaginationButton\n                  key={paginationIndex}\n                  currentPageIndex={pageIndex}\n                  pageIndex={paginationIndex}\n                  gotoPage={goToPageAndScroll}\n                />\n              ))}\n\n              {paginationRanges.hasJumpFromStart && (\n                <li className=\"vf-pagination__item\">\n                  <span className=\"vf-pagination__label\">...</span>\n                </li>\n              )}\n\n              {paginationRanges.adjacentPages.map((paginationIndex) => (\n                <PaginationButton\n                  key={paginationIndex}\n                  currentPageIndex={pageIndex}\n                  pageIndex={paginationIndex}\n                  gotoPage={goToPageAndScroll}\n                />\n              ))}\n\n              {paginationRanges.hasJumpToEnd && (\n                <li className=\"vf-pagination__item\">\n                  <span className=\"vf-pagination__label\">...</span>\n                </li>\n              )}\n\n              {paginationRanges.endingPages.map((paginationIndex) => (\n                <PaginationButton\n                  key={paginationIndex}\n                  currentPageIndex={pageIndex}\n                  pageIndex={paginationIndex}\n                  gotoPage={goToPageAndScroll}\n                />\n              ))}\n\n              <li className=\"vf-pagination__item vf-pagination__item--next-page\">\n                <button\n                  disabled={!canNextPage}\n                  type=\"button\"\n                  onClick={nextPage}\n                  className=\"vf-button vf-button--link vf-pagination__link\"\n                >\n                  Next<span className=\"vf-u-sr-only\"> page</span>\n                </button>\n              </li>\n            </ul>\n          </nav>\n        </section>\n      )}\n    </section>\n  );\n};\n\nexport default EMGTable;\n","import React from 'react';\n\nimport './style.css';\n\ntype ExtLinkProps = {\n  href: string;\n  title?: string;\n  id?: string;\n};\nconst ExtLink: React.FC<ExtLinkProps> = ({ href, id, title, children }) => (\n  <a\n    href={href}\n    title={title}\n    id={id}\n    target=\"_blank\"\n    rel=\"noreferrer noopener\"\n    className=\"mg-ext\"\n  >\n    <span className=\"icon icon-common icon-external-link-alt\" /> {children}\n  </a>\n);\n\nexport default ExtLink;\n","import React from 'react';\nimport { ErrorFromFetch, ErrorTypes } from 'hooks/data/useData';\n\nconst refreshPage = (): void => {\n  window.location.reload();\n};\n\nconst FetchError: React.FC<{ error: ErrorFromFetch }> = ({ error }) => {\n  if (!error || error.type === ErrorTypes.NullURL) return null;\n  return (\n    <div\n      className=\"vf-box vf-box-theme--primary vf-box--easy\"\n      style={{\n        backgroundColor: 'lemonchiffon',\n      }}\n    >\n      <h3 className=\"vf-box__heading\">\n        <span className=\"icon icon-common icon-exclamation-triangle\" /> Error\n        Fetching Data\n      </h3>\n      <p className=\"vf-box__text\">\n        {error?.type === ErrorTypes.FetchError &&\n          `There were problems with the request. [${error.error}]`}\n        {error?.type === ErrorTypes.NotOK &&\n          `The response from the server was not OK [Status: ${error.status}].`}\n        {error?.type === ErrorTypes.JSONError &&\n          `The recovered resource didn't follow the expected format [${error.error}].`}\n      </p>\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--tertiary vf-button--sm \"\n          onClick={refreshPage}\n        >\n          Refresh\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FetchError;\n","import React from 'react';\n\ntype KeyValueProps = {\n  list: { key: string; value: string | React.ElementType }[];\n};\n\nconst KeyValueList: React.FC<KeyValueProps> = ({ list }) => (\n  <div\n    className=\"vf-grid vf-grid__col-2\"\n    style={{\n      gridTemplateColumns: '1fr 2fr',\n      rowGap: '0.5rem',\n    }}\n  >\n    {list.map(({ key, value: Value }) => (\n      <React.Fragment key={key}>\n        <div style={{ textAlign: 'right' }}>{key}:</div>\n        <div>{typeof Value === 'string' ? Value : <Value />}</div>\n      </React.Fragment>\n    ))}\n  </div>\n);\n\nexport default KeyValueList;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Tab: React.FC = () => null;\n\ntype TabsProps = {\n  tabs: Array<{\n    label: string | React.ElementType;\n    to: string;\n  }>;\n};\nconst Tabs: React.FC<TabsProps> = ({ tabs }) => {\n  const location = useLocation();\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label: Label, to }) => (\n          <li className=\"vf-tabs__item\" key={to}>\n            <Link\n              className={`vf-tabs__link ${\n                to === location.pathname ||\n                (to.startsWith('#') && to === location.hash) ||\n                (to === '#' && location.hash === '')\n                  ? 'is-active'\n                  : ''\n              }`}\n              to={to}\n            >\n              {typeof Label === 'string' ? Label : <Label />}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst useQueryParamState: <S>(\n  parameter: string,\n  defaultValue: S\n) => [string | S, (s: S) => void] = (parameter, defaultValue) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const parameters = new URLSearchParams(location.search);\n  const [value, setValue] = useState(parameters.get(parameter) || defaultValue);\n\n  // The Query parameters have changed, so we need to update the value if needed.\n  useEffect(() => {\n    const changedParameters = new URLSearchParams(location.search);\n    if (changedParameters.get(parameter) === value) return;\n    setValue(changedParameters.get(parameter) || defaultValue);\n  }, [location.search, defaultValue, parameter, value]);\n\n  // Pushes the new URL(including the new parameter value) into history\n  const setParameterInURL: (newValue: unknown) => void = (newValue) => {\n    if (String(newValue) === String(value)) return;\n    const parametersToChange = new URLSearchParams(location.search);\n    parametersToChange.set(parameter, String(newValue));\n    // The default value is not displayed in the URL\n    if (newValue === defaultValue) {\n      parametersToChange.delete(parameter);\n    }\n    location.search = parametersToChange.toString();\n    navigate(location);\n  };\n\n  return [value, setParameterInURL];\n};\n\nexport type QueryState = {\n  [parameter: string]: unknown;\n};\ntype SerializersType = {\n  [parameter: string]: (str: string) => unknown;\n};\n\nconst getQueryStateFromURL = (\n  state: QueryState,\n  searchStr: string,\n  serializers: SerializersType\n): QueryState => {\n  const innerState = {};\n  const parametersFromURL = new URLSearchParams(searchStr);\n  Object.entries(state).forEach(([parameter, value]) => {\n    const serializer = serializers[parameter] || String;\n    innerState[parameter] = serializer(\n      parametersFromURL.get(parameter) || (value as string)\n    );\n  });\n  return innerState;\n};\nexport const useQueryParametersState: (\n  initialState: QueryState,\n  serializers?: SerializersType\n) => [QueryState, (s: QueryState) => void] = (\n  initialState,\n  serializers = {}\n) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const stateWithURL = useMemo(\n    () => getQueryStateFromURL(initialState, location.search, serializers),\n    [initialState, location.search, serializers]\n  );\n  const [currentState, setCurrentState] = useState(stateWithURL);\n\n  // The Query parameters have changed, so we need to update the value if needed.\n  useEffect(() => {\n    const newState = getQueryStateFromURL(\n      initialState,\n      location.search,\n      serializers\n    );\n    if (JSON.stringify(newState) === JSON.stringify(currentState)) return;\n    setCurrentState(newState);\n  }, [location.search, currentState, initialState, serializers]);\n\n  // Pushes the new URL(including the new parameter value) into history\n  const setParametersInURL: (newState: QueryState) => void = (newState) => {\n    if (JSON.stringify(newState) === JSON.stringify(currentState)) return;\n    const parametersToChange = new URLSearchParams(location.search);\n\n    let changed = false;\n    Object.entries(initialState).forEach(([parameter, defaultValue]) => {\n      const newValue =\n        parameter in newState ? newState[parameter] : defaultValue;\n      if (newState[parameter] !== currentState[parameter]) {\n        parametersToChange.set(parameter, String(newValue));\n        if (newValue === defaultValue) {\n          parametersToChange.delete(parameter);\n        }\n        changed = true;\n      }\n    });\n\n    // The default value is not displayed in the URL\n    if (changed) {\n      location.search = parametersToChange.toString();\n      navigate(location);\n    }\n  };\n\n  return [currentState, setParametersInURL];\n};\n\nexport default useQueryParamState;\n","import { useLocation } from 'react-router-dom';\n\nconst useURLAccession = (): string | undefined => {\n  const location = useLocation();\n  let { pathname } = location;\n  if (pathname.trim().endsWith('/')) pathname = pathname.trim().slice(0, -1);\n  const parts = pathname.split('/');\n  return parts?.[parts.length - 1];\n};\n\nexport default useURLAccession;\n","import React from 'react';\nimport KeyValueList from 'components/UI/KeyValueList';\nimport ExtLink from 'components/UI/ExtLink';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport { cleanTaxLineage } from 'utils/taxon';\n\nconst ENA_VIEW_URL = 'https://www.ebi.ac.uk/ena/browser/view/';\n\nconst IMG_URL =\n  ' https://img.jgi.doe.gov/cgi-bin/m/main.cgi?section=TaxonDetail&page=taxonDetail&taxon_oid=';\nconst NCBI_ASSEMBLY_URL = 'https://www.ncbi.nlm.nih.gov/assembly/';\nconst NCBI_SAMPLE_URL = 'https://www.ncbi.nlm.nih.gov/biosample/?term=';\nconst NCBI_PROJECT_URL = 'https://www.ncbi.nlm.nih.gov/bioproject/';\nconst PATRIC_URL = 'https://www.patricbrc.org/view/Genome/';\n\ntype GenomeOverviewProps = {\n  data: MGnifyDatum;\n};\n\nconst GenomeOverview: React.FC<GenomeOverviewProps> = ({ data }) => {\n  return (\n    <section>\n      <div className=\"vf-stack\">\n        <details open>\n          <summary>\n            <b>Genome statistics</b>\n          </summary>\n\n          <KeyValueList\n            list={[\n              { key: 'Type', value: data.attributes.type as string },\n              { key: 'Length (bp)', value: String(data.attributes.length) },\n              {\n                key: 'Contamination',\n                value: `${data.attributes.contamination}%`,\n              },\n              {\n                key: 'Completeness',\n                value: `${data.attributes.completeness}%`,\n              },\n              {\n                key: 'Num. of contigs',\n                value: String(data.attributes['num-contigs']),\n              },\n              {\n                key: 'Total number of genomes in species',\n                value: String(data.attributes['num-genomes-total']),\n              },\n              {\n                key: 'Non-redundant number of genomes in species',\n                value: String(data.attributes['num-genomes-non-redundant']),\n              },\n              {\n                key: 'Number of proteins',\n                value: String(data.attributes['num-proteins']),\n              },\n              { key: 'GC content', value: `${data.attributes['gc-content']}%` },\n              {\n                key: 'Taxonomic lineage',\n                value: cleanTaxLineage(\n                  data.attributes['taxon-lineage'] as string,\n                  ' > '\n                ),\n              },\n              { key: 'N50', value: String(data.attributes['n-50']) },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Genome annotations</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'InterPro coverage',\n                value: `${data.attributes['ipr-coverage']}%`,\n              },\n              {\n                key: 'EggNog coverage',\n                value: `${data.attributes['eggnog-coverage']}%`,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Pan-genome statistics</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'Pan-genome size',\n                value: `${data.attributes['pangenome-size']}%`,\n              },\n              {\n                key: 'Pan-genome core size',\n                value: `${data.attributes['pangenome-core-size']}%`,\n              },\n              {\n                key: 'Pan-genome accessory size',\n                value: `${data.attributes['pangenome-accessory-size']}%`,\n              },\n              {\n                key: 'Pan-genome InterPro coverage',\n                value: `${data.attributes['pangenome-ipr-coverage']}%`,\n              },\n              {\n                key: 'Pan-genome EggNOG coverage',\n                value: `${data.attributes['pangenome-eggnog-coverage']}%`,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Genome RNA coverage</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'rRNA 5s total gene length coverage',\n                value: `${data.attributes['rna-5s']}%`,\n              },\n              {\n                key: 'rRNA 16s total gene length coverage',\n                value: `${data.attributes['rna-16s']}%`,\n              },\n              {\n                key: 'rRNA 23s total gene length coverage',\n                value: `${data.attributes['rna-23s']}%`,\n              },\n              {\n                key: 'tRNAs',\n                value: `${data.attributes.trnas}%`,\n              },\n              {\n                key: 'ncRNA',\n                value: `${data.attributes['nc-rnas']}%`,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Geographic metadata</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'Origin of representative genome',\n                value: data.attributes['geographic-origin'] as string,\n              },\n              {\n                key: 'Geographic range of pan-genome',\n                value: (data.attributes['geographic-range'] as string[]).join(\n                  ', '\n                ),\n              },\n            ]}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>External links</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'ENA genome accession',\n                value: data.attributes['ena-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          ENA_VIEW_URL + data.attributes['ena-genome-accession']\n                        }\n                      >\n                        {data.attributes['ena-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'ENA sample accession',\n                value: data.attributes['ena-sample-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          ENA_VIEW_URL + data.attributes['ena-sample-accession']\n                        }\n                      >\n                        {data.attributes['ena-sample-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'ENA study accession',\n                value: data.attributes['ena-study-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          ENA_VIEW_URL + data.attributes['ena-study-accession']\n                        }\n                      >\n                        {data.attributes['ena-study-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'IMG genome accession',\n                value: data.attributes['img-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={IMG_URL + data.attributes['img-genome-accession']}\n                      >\n                        {data.attributes['img-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'NCBI genome accession',\n                value: data.attributes['ncbi-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          NCBI_ASSEMBLY_URL +\n                          data.attributes['ncbi-genome-accession']\n                        }\n                      >\n                        {data.attributes['ncbi-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'NCBI sample accession',\n                value: data.attributes['ncbi-sample-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          NCBI_SAMPLE_URL +\n                          data.attributes['ncbi-sample-accession']\n                        }\n                      >\n                        {data.attributes['ncbi-sample-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'NCBI study accession',\n                value: data.attributes['ncbi-study-accessi']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          NCBI_PROJECT_URL +\n                          data.attributes['ncbi-study-accessi']\n                        }\n                      >\n                        {data.attributes['ncbi-study-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'PATRIC genome accession',\n                value: data.attributes['patric-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          PATRIC_URL +\n                          data.attributes['patric-genome-accession']\n                        }\n                      >\n                        {data.attributes['patric-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n      </div>\n    </section>\n  );\n};\nexport default GenomeOverview;\n","import React, { useMemo } from 'react';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'src/hooks/data/useMGnifyData';\nimport { MGnifyDatum, MGnifyResponseList } from 'hooks/data/useData';\n\ntype DownloadsProps = {\n  endpoint: string;\n  accession: string;\n};\nconst Downloads: React.FC<DownloadsProps> = ({ endpoint, accession }) => {\n  const { data, loading, error } = useMGnifyData(\n    `${endpoint}/${accession}/downloads`,\n    {\n      page_size: 100,\n    }\n  );\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'attributes.description.description',\n      },\n      {\n        Header: 'Compression',\n        accessor: 'attributes.file-format.compression',\n        Cell: ({ cell }) => (cell.value ? 'Yes' : '-'),\n      },\n      {\n        Header: 'Format',\n        accessor: 'attributes.file-format.name',\n      },\n      {\n        Header: 'Action',\n        accessor: 'links.self',\n        Cell: ({ cell }) => (\n          <a\n            href={cell.value}\n            className=\"vf-button vf-button--link\"\n            style={{ whiteSpace: 'nowrap' }}\n            download\n          >\n            <span className=\"icon icon-common icon-download\" /> Download\n          </a>\n        ),\n      },\n    ],\n    []\n  );\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n\n  const categories = {};\n\n  (data as MGnifyResponseList).data.forEach((download) => {\n    if (!categories[download.attributes['group-type'] as string]) {\n      categories[download.attributes['group-type'] as string] = [];\n    }\n    categories[download.attributes['group-type'] as string].push(download);\n  });\n  return (\n    <div className=\"vf-stock\">\n      {Object.entries(categories).map(([category, downloads]) => (\n        <section key={category}>\n          <EMGTable\n            cols={columns}\n            data={downloads as Array<MGnifyDatum>}\n            title={category}\n            loading={loading}\n            showPagination={false}\n          />\n          <hr />\n        </section>\n      ))}\n    </div>\n  );\n};\n\nexport default Downloads;\n","import React, { Suspense, lazy } from 'react';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Tabs from 'components/UI/Tabs';\nimport RouteForHash from 'components/Nav/RouteForHash';\nimport Overview from 'components/Genomes/Overview';\nimport Downloads from 'components/Downloads';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { cleanTaxLineage } from 'utils/taxon';\n\nconst GenomeBrowser = lazy(() => import('components/Genomes/Browser'));\nconst COGAnalysis = lazy(() => import('components/Genomes/COGAnalysis'));\nconst KEGGClassAnalysis = lazy(\n  () => import('components/Genomes/KEGGClassAnalysis')\n);\nconst KEGGModulesAnalysis = lazy(\n  () => import('components/Genomes/KEGGModulesAnalysis')\n);\n\nconst tabs = [\n  { label: 'Overview', to: '#overview' },\n  { label: 'Browse genome', to: '#genome-browser' },\n  { label: 'COG analysis', to: '#cog-analysis' },\n  { label: 'KEGG class analysis', to: '#kegg-class-analysis' },\n  { label: 'KEGG module analysis', to: '#kegg-module-analysis' },\n  { label: 'Downloads', to: '#downloads' },\n];\n\nconst GenomePage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`genomes/${accession}`);\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: genomeData } = data as MGnifyResponseObj;\n  return (\n    <section className=\"vf-content\">\n      <h2>Genome {accession}</h2>\n      <p>\n        <b>Type:</b> {genomeData.attributes.type}\n      </p>\n      <p>\n        <b>Taxonomic lineage:</b>{' '}\n        {cleanTaxLineage(\n          genomeData.attributes['taxon-lineage'] as string,\n          ' > '\n        )}\n      </p>\n      <Tabs tabs={tabs} />\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <RouteForHash hash=\"#overview\" isDefault>\n            <Overview data={genomeData} />\n          </RouteForHash>\n          <RouteForHash hash=\"#genome-browser\">\n            <Suspense fallback={<Loading size=\"large\" />}>\n              <GenomeBrowser />\n            </Suspense>\n          </RouteForHash>\n          <RouteForHash hash=\"#cog-analysis\">\n            <Suspense fallback={<Loading size=\"large\" />}>\n              <COGAnalysis />\n            </Suspense>\n          </RouteForHash>\n          <RouteForHash hash=\"#kegg-class-analysis\">\n            <Suspense fallback={<Loading size=\"large\" />}>\n              <KEGGClassAnalysis />\n            </Suspense>\n          </RouteForHash>\n          <RouteForHash hash=\"#kegg-module-analysis\">\n            <Suspense fallback={<Loading size=\"large\" />}>\n              <KEGGModulesAnalysis />\n            </Suspense>\n          </RouteForHash>\n          <RouteForHash hash=\"#downloads\">\n            <Downloads endpoint=\"genomes\" accession={accession} />\n          </RouteForHash>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default GenomePage;\n","/**\n * Remove the s__ prefixes from a lineage.\n * @param {string} lineage string with the lineage `d__Bacteria;p__Proteobacteria;c__Gammapr...`\n * @param {string} replace replace string\n * @return {string}\n */\nexport function cleanTaxLineage(lineage: string, replace = ''): string {\n  return lineage.replace(/;/g, '').replace(/[d|p|c|o|f|g|s]__/g, replace);\n}\n\n/**\n * Retrieve a non-blank taxonomic identity from the species level or upwards\n * @param {string} fullLineage\n * @param {bool} removePrefix true if this should remove the 'd|p|c|o|f|g|s__' prefix\n * @return {string}\n */\nexport function getSimpleTaxLineage(\n  fullLineage: string,\n  removePrefix: boolean\n): string {\n  const l = fullLineage.split(';');\n  let head = l.pop();\n  // Remove all until species\n  while (head.indexOf('s__') === -1) {\n    head = l.pop();\n  }\n  // Find first non-null\n  while (head.length <= 3) {\n    head = l.pop();\n  }\n  if (removePrefix && head) {\n    return cleanTaxLineage(head);\n  }\n  return head;\n}\n\nexport const TAXONOMY_COLOURS = [\n  '#058dc7',\n  '#82d23d',\n  '#e26736',\n  '#fbe300',\n  '#24cbe5',\n  '#c49ecc',\n  '#ffc08a',\n  '#708090',\n  '#6af9c4',\n  '#caae74',\n  '#cccccc',\n];\n"],"names":["hash","isDefault","children","location","navigate","useEffect","replace","currentPageIndex","pageIndex","gotoPage","className","type","onClick","cols","data","title","Title","initialPage","initialPageSize","namespace","showPagination","sortable","loading","isStale","queryParameters","setQueryParameters","Number","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","canPreviousPage","canNextPage","pageCount","setPageSize","nextPage","previousPage","state","pageSize","sortBy","useTable","columns","initialState","meta","pagination","pages","manualPagination","manualSortBy","useSortBy","usePagination","tableRef","useRef","isChangingPage","setChangingPage","useState","current","scrollIntoView","order","tableSortBy","length","col","desc","id","getOrderingQueryParamFromSortedColumn","paginationRanges","useMemo","startingPages","adjacentPages","Math","max","page","push","endingPages","hasJumpFromStart","hasJumpToEnd","getPaginationRanges","goToPageAndScroll","pageNumber","changeSizeAndScroll","evt","target","value","Loading","size","undefined","ref","map","headerGroup","getHeaderGroupProps","headers","column","canSort","getHeaderProps","getSortByToggleProps","key","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","onBlur","onChange","pg","disabled","paginationIndex","href","rel","refreshPage","window","reload","error","style","backgroundColor","status","list","gridTemplateColumns","rowGap","Value","textAlign","tabs","label","Label","to","pathname","startsWith","getQueryStateFromURL","searchStr","serializers","innerState","parametersFromURL","URLSearchParams","Object","entries","forEach","parameter","serializer","String","get","useQueryParametersState","stateWithURL","search","currentState","setCurrentState","newState","JSON","stringify","parametersToChange","changed","defaultValue","newValue","set","delete","toString","trim","endsWith","slice","parts","split","ENA_VIEW_URL","open","KeyValueList","attributes","contamination","completeness","filter","trnas","join","ExtLink","endpoint","accession","useMGnifyData","page_size","Header","accessor","Cell","whiteSpace","download","FetchError","categories","category","downloads","EMGTable","GenomeBrowser","lazy","COGAnalysis","KEGGClassAnalysis","KEGGModulesAnalysis","useURLAccession","genomeData","Tabs","RouteForHash","Overview","Suspense","fallback","cleanTaxLineage","lineage","getSimpleTaxLineage","fullLineage","removePrefix","l","head","pop","indexOf","TAXONOMY_COLOURS"],"sourceRoot":""}