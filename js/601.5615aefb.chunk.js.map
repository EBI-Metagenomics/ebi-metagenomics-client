{"version":3,"file":"js/601.5615aefb.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/UI/FetchError/index.tsx","webpack://mgportalv2/./src/components/UI/OutterCard/index.tsx","webpack://mgportalv2/./src/hooks/useQueryParamState/index.tsx","webpack://mgportalv2/./src/hooks/data/useMgnifyForm/index.tsx","webpack://mgportalv2/./src/hooks/useAuthentication/index.tsx","webpack://mgportalv2/./src/hooks/data/useMgnifyLogin/index.tsx","webpack://mgportalv2/./src/hooks/data/useMgnifyLogout/index.tsx","webpack://mgportalv2/./src/pages/Login/index.tsx"],"sourcesContent":["import React from 'react';\nimport { ErrorFromFetch, ErrorTypes } from 'hooks/data/useData';\n\nconst refreshPage = (): void => {\n  window.location.reload();\n};\n\nconst FetchError: React.FC<{ error: ErrorFromFetch }> = ({ error }) => {\n  if (!error || error.type === ErrorTypes.NullURL) return null;\n  return (\n    <div\n      className=\"vf-box vf-box-theme--primary vf-box--easy\"\n      style={{\n        backgroundColor: 'lemonchiffon',\n      }}\n    >\n      <h3 className=\"vf-box__heading\">\n        <span className=\"icon icon-common icon-exclamation-triangle\" /> Error\n        Fetching Data\n      </h3>\n      <p className=\"vf-box__text\">\n        {error?.type === ErrorTypes.FetchError &&\n          `There were problems with the request. [${error.error}]`}\n        {error?.type === ErrorTypes.NotOK &&\n          `The response from the server was not OK [Status: ${error.status}].`}\n        {error?.type === ErrorTypes.JSONError &&\n          `The recovered resource didn't follow the expected format [${error.error}].`}\n      </p>\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--tertiary vf-button--sm \"\n          onClick={refreshPage}\n        >\n          Refresh\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FetchError;\n","import React from 'react';\n\nconst OutterCard: React.FC<{\n  className?: string;\n  image?: string;\n  imageAltText?: string;\n}> = ({ children, className = '', image = null, imageAltText = '' }) => {\n  return (\n    <article\n      className={`vf-card vf-card--brand vf-card--bordered ${className}`}\n    >\n      {image && (\n        <img\n          src={image}\n          alt={imageAltText}\n          className=\"vf-card__image\"\n          loading=\"lazy\"\n        />\n      )}\n      <div className=\"vf-card__content | vf-stack vf-stack--400\">\n        {children}\n      </div>\n    </article>\n  );\n};\n\nexport default OutterCard;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst useQueryParamState: <S>(\n  parameter: string,\n  defaultValue: S\n) => [string | S, (s: S) => void] = (parameter, defaultValue) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const parameters = new URLSearchParams(location.search);\n  const [value, setValue] = useState(parameters.get(parameter) || defaultValue);\n\n  // The Query parameters have changed, so we need to update the value if needed.\n  useEffect(() => {\n    const changedParameters = new URLSearchParams(location.search);\n    if (changedParameters.get(parameter) === value) return;\n    setValue(changedParameters.get(parameter) || defaultValue);\n  }, [location.search, defaultValue, parameter, value]);\n\n  // Pushes the new URL(including the new parameter value) into history\n  const setParameterInURL: (newValue: unknown) => void = (newValue) => {\n    if (String(newValue) === String(value)) return;\n    const parametersToChange = new URLSearchParams(location.search);\n    parametersToChange.set(parameter, String(newValue));\n    // The default value is not displayed in the URL\n    if (newValue === defaultValue) {\n      parametersToChange.delete(parameter);\n    }\n    location.search = parametersToChange.toString();\n    navigate(location);\n  };\n\n  return [value, setParameterInURL];\n};\n\nexport type QueryState = {\n  [parameter: string]: unknown;\n};\ntype SerializersType = {\n  [parameter: string]: (str: string) => unknown;\n};\n\nconst getQueryStateFromURL = (\n  state: QueryState,\n  searchStr: string,\n  serializers: SerializersType\n): QueryState => {\n  const innerState = {};\n  const parametersFromURL = new URLSearchParams(searchStr);\n  Object.entries(state).forEach(([parameter, value]) => {\n    const serializer = serializers[parameter] || String;\n    innerState[parameter] = serializer(\n      parametersFromURL.get(parameter) || (value as string)\n    );\n  });\n  return innerState;\n};\nexport const useQueryParametersState: (\n  initialState: QueryState,\n  serializers?: SerializersType\n) => [QueryState, (s: QueryState) => void] = (\n  initialState,\n  serializers = {}\n) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const stateWithURL = useMemo(\n    () => getQueryStateFromURL(initialState, location.search, serializers),\n    [initialState, location.search, serializers]\n  );\n  const [currentState, setCurrentState] = useState(stateWithURL);\n\n  // The Query parameters have changed, so we need to update the value if needed.\n  useEffect(() => {\n    const newState = getQueryStateFromURL(\n      initialState,\n      location.search,\n      serializers\n    );\n    if (JSON.stringify(newState) === JSON.stringify(currentState)) return;\n    setCurrentState(newState);\n  }, [location.search, currentState, initialState, serializers]);\n\n  // Pushes the new URL(including the new parameter value) into history\n  const setParametersInURL: (newState: QueryState) => void = (newState) => {\n    if (JSON.stringify(newState) === JSON.stringify(currentState)) return;\n    const parametersToChange = new URLSearchParams(location.search);\n\n    let changed = false;\n    Object.entries(initialState).forEach(([parameter, defaultValue]) => {\n      const newValue =\n        parameter in newState ? newState[parameter] : defaultValue;\n      if (newState[parameter] !== currentState[parameter]) {\n        parametersToChange.set(parameter, String(newValue));\n        if (newValue === defaultValue) {\n          parametersToChange.delete(parameter);\n        }\n        changed = true;\n      }\n    });\n\n    // The default value is not displayed in the URL\n    if (changed) {\n      location.search = parametersToChange.toString();\n      navigate(location);\n    }\n  };\n\n  return [currentState, setParametersInURL];\n};\n\nexport default useQueryParamState;\n","import { useContext } from 'react';\nimport useData, { HTMLDataResponse, ResponseFormat } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\nconst useMgnifyForm: () => HTMLDataResponse = () => {\n  const { config } = useContext(UserContext);\n  const data = useData(\n    `${config.api.replace('v1/', '')}http-auth/login_form`,\n    ResponseFormat.HTML,\n    { credentials: 'include' }\n  );\n  return data as HTMLDataResponse;\n};\n\nexport default useMgnifyForm;\n","import { useContext, useState, useEffect } from 'react';\nimport useMgnifyForm from 'hooks/data/useMgnifyForm';\nimport useMgnifyLogin from 'hooks/data/useMgnifyLogin';\nimport useMgnifyLogout from 'hooks/data/useMgnifyLogout';\nimport { ErrorFromFetch } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\ntype AuthenticationFunctions = {\n  login: (username: string, password: string) => void;\n  logout: () => void;\n  loginError: string;\n  loading: boolean;\n  error: ErrorFromFetch;\n};\nconst useAuthentication = (): AuthenticationFunctions => {\n  const { data, loading, error } = useMgnifyForm();\n  const [loginError, setLoginError] = useState('');\n  const { setUser } = useContext(UserContext);\n  const [form, setForm] = useState({\n    username: null,\n    password: null,\n    csrfmiddlewaretoken: null,\n  });\n  const {\n    data: dataLogin,\n    loading: loadingLogin,\n    rawResponse: rawResponseLogin,\n  } = useMgnifyLogin(form.username, form.password, form.csrfmiddlewaretoken);\n\n  useEffect(() => {\n    if (!loadingLogin) {\n      if (rawResponseLogin?.type === 'opaqueredirect') {\n        setUser({ username: form.username, isAuthenticated: true });\n        setLoginError('');\n      } else if (dataLogin) {\n        setLoginError(\n          (dataLogin.querySelector('.text-error') as HTMLElement)?.innerText ||\n            ''\n        );\n      }\n    }\n  }, [dataLogin, loadingLogin, form.username, rawResponseLogin?.type, setUser]);\n\n  const [shouldLogout, setShouldLogout] = useState(false);\n  const { loading: loadingLogout, rawResponse } = useMgnifyLogout(shouldLogout);\n  useEffect(() => {\n    setShouldLogout(false);\n  }, [rawResponse]);\n\n  const login = (username: string, password: string): void => {\n    const csrfmiddlewaretoken = (\n      data.querySelector(\n        'input[name=\"csrfmiddlewaretoken\"]'\n      ) as HTMLInputElement\n    ).value;\n    setLoginError('');\n    setForm({\n      username,\n      password,\n      csrfmiddlewaretoken,\n    });\n  };\n\n  const logout = (): void => {\n    setShouldLogout(true);\n    setUser({ username: null, isAuthenticated: false });\n  };\n\n  return {\n    login,\n    logout,\n    loginError,\n    loading: loading || loadingLogin || loadingLogout,\n    error,\n  };\n};\n\nexport default useAuthentication;\n","import { useContext } from 'react';\nimport useData, { HTMLDataResponse, ResponseFormat } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\nconst useMgnifyLogin: (\n  username: string,\n  password: string,\n  csrfmiddlewaretoken: string\n) => HTMLDataResponse = (username, password, csrfmiddlewaretoken) => {\n  const { config } = useContext(UserContext);\n  const formData = new FormData();\n  formData.append('username', username);\n  formData.append('password', password);\n  formData.append('csrfmiddlewaretoken', csrfmiddlewaretoken);\n\n  const data = useData(\n    username ? `${config.api.replace('v1/', '')}http-auth/login/` : null,\n    ResponseFormat.HTML,\n    {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': csrfmiddlewaretoken,\n      },\n      credentials: 'include',\n      body: formData,\n      redirect: 'manual',\n    }\n  );\n  return data as HTMLDataResponse;\n};\n\nexport default useMgnifyLogin;\n","import { useContext } from 'react';\nimport useData, { HTMLDataResponse, ResponseFormat } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\nconst useMgnifyLogout: (shouldLogout: boolean) => HTMLDataResponse = (\n  shouldLogout\n) => {\n  const { config } = useContext(UserContext);\n  const data = useData(\n    shouldLogout ? `${config.api.replace('v1/', '')}http-auth/logout` : null,\n    ResponseFormat.HTML,\n    { credentials: 'include' }\n  );\n  return data as HTMLDataResponse;\n};\n\nexport default useMgnifyLogout;\n","import React, { useContext, useRef, FormEvent } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport OutterCard from 'components/UI/OutterCard';\n\nimport UserContext from 'pages/Login/UserContext';\nimport useAuthentication from 'hooks/useAuthentication';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\n\nimport enaUserImg from 'public/images/ico_ena_user.jpg';\n\nconst Login: React.FC = () => {\n  const userRef = useRef(null);\n  const passwordRef = useRef(null);\n  const { username, isAuthenticated } = useContext(UserContext);\n  const { login, logout, loginError, loading, error } = useAuthentication();\n  const [{ from }] = useQueryParametersState({\n    from: '',\n  });\n  const navigate = useNavigate();\n  if (isAuthenticated) {\n    if (from === 'private-request') {\n      navigate('/?show=private-request');\n      return null;\n    }\n    if (from === 'private-request') {\n      navigate('/?show=public-request');\n      return null;\n    }\n    return (\n      <div className=\"vf-stack vf-stack--400\">\n        <div>\n          You are logged in as <b>{username}</b>\n        </div>\n        <button type=\"button\" className=\"vf-button\" onClick={logout}>\n          Logout\n        </button>\n      </div>\n    );\n  }\n\n  if (loading) return <Loading />;\n  if (error) return <FetchError error={error} />;\n  const handleSubmit = (event: FormEvent): void => {\n    event.preventDefault();\n    login(userRef.current.value, passwordRef.current.value);\n  };\n  return (\n    <div className=\"vf-grid vf-grid__col-2\">\n      <div className=\"vf-form vf-stack vf-stack--400\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"vf-form__item\">\n            <label htmlFor=\"id_username\" className=\"vf-form__label\">\n              Webin-ID:\n            </label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              maxLength={100}\n              autoCapitalize=\"off\"\n              autoCorrect=\"off\"\n              id=\"id_username\"\n              className=\"vf-form__input\"\n              ref={userRef}\n              required\n            />\n          </div>\n          <div className=\"vf-form__item\">\n            <label htmlFor=\"id_password\" className=\"vf-form__label\">\n              Password:\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              maxLength={100}\n              autoCapitalize=\"off\"\n              autoCorrect=\"off\"\n              className=\"vf-form__input\"\n              id=\"id_password\"\n              ref={passwordRef}\n              required\n            />\n          </div>\n          <br />\n          <div className=\"form-actions-no-box\">\n            <button\n              type=\"submit\"\n              name=\"submit\"\n              className=\"vf-button\"\n              id=\"submit-id-submit\"\n            >\n              Log in\n            </button>\n          </div>\n        </form>\n        {/* {loadingLogin && <Loading />} */}\n        {loginError && <div className=\"vf-box\">{loginError}</div>}\n        <div className=\"form-forgotten\">\n          <a href=\"https://www.ebi.ac.uk/ena/submit/sra/#reset-password\">\n            Forgot your password?\n          </a>\n        </div>\n      </div>\n      <OutterCard>\n        <h3>Not registered yet?</h3>\n        <h4>\n          <a href=\"https://www.ebi.ac.uk/ena/submit/sra/#metagenome_registration\">\n            Sign up\n          </a>{' '}\n          to register\n        </h4>\n        <p>or</p>\n        <p>\n          <a href=\"https://www.ebi.ac.uk/ena/submit/sra/#home\">\n            <img src={enaUserImg} alt=\"ENA member\" />\n          </a>\n        </p>\n        <p>\n          If you already are a registered user of the European Nucleotide\n          Archive (ENA), you should simply use your ENA account to login.\n        </p>\n      </OutterCard>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["refreshPage","window","location","reload","error","type","className","style","backgroundColor","status","onClick","children","image","imageAltText","src","alt","loading","getQueryStateFromURL","state","searchStr","serializers","innerState","parametersFromURL","URLSearchParams","Object","entries","forEach","parameter","value","serializer","String","get","useQueryParametersState","initialState","navigate","stateWithURL","useMemo","search","currentState","setCurrentState","useState","useEffect","newState","JSON","stringify","parametersToChange","changed","defaultValue","newValue","set","delete","toString","data","config","useContext","UserContext","useData","api","replace","credentials","loginError","setLoginError","setUser","form","setForm","username","password","csrfmiddlewaretoken","dataLogin","loadingLogin","rawResponse","rawResponseLogin","formData","FormData","append","method","headers","body","redirect","isAuthenticated","querySelector","innerText","shouldLogout","setShouldLogout","loadingLogout","login","logout","userRef","useRef","passwordRef","from","Loading","FetchError","onSubmit","event","preventDefault","current","htmlFor","name","maxLength","autoCapitalize","autoCorrect","id","ref","required","href","OutterCard"],"sourceRoot":""}