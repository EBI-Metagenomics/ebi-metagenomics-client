{"version":3,"file":"js/601.6212fed3.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/UI/OutterCard/index.tsx","webpack://mgportalv2/./src/hooks/data/useMgnifyForm/index.tsx","webpack://mgportalv2/./src/hooks/useAuthentication/index.tsx","webpack://mgportalv2/./src/hooks/data/useMgnifyLogin/index.tsx","webpack://mgportalv2/./src/hooks/data/useMgnifyLogout/index.tsx","webpack://mgportalv2/./src/pages/Login/index.tsx"],"sourcesContent":["import React from 'react';\n\nconst OutterCard: React.FC<{\n  className?: string;\n  image?: string;\n  imageAltText?: string;\n}> = ({ children, className = '', image = null, imageAltText = '' }) => {\n  return (\n    <article\n      className={`vf-card vf-card--brand vf-card--bordered ${className}`}\n    >\n      {image && (\n        <img\n          src={image}\n          alt={imageAltText}\n          className=\"vf-card__image\"\n          loading=\"lazy\"\n        />\n      )}\n      <div className=\"vf-card__content | vf-stack vf-stack--600\">\n        {children}\n      </div>\n    </article>\n  );\n};\n\nexport default OutterCard;\n","import { useContext } from 'react';\nimport useData, { HTMLDataResponse, ResponseFormat } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\nconst useMgnifyForm: () => HTMLDataResponse = () => {\n  const { config } = useContext(UserContext);\n  const data = useData(\n    `${config.api.replace('v1/', '')}http-auth/login_form`,\n    ResponseFormat.HTML,\n    { credentials: 'include' }\n  );\n  return data as HTMLDataResponse;\n};\n\nexport default useMgnifyForm;\n","import { useContext, useState, useEffect } from 'react';\nimport useMgnifyForm from 'hooks/data/useMgnifyForm';\nimport useMgnifyLogin from 'hooks/data/useMgnifyLogin';\nimport useMgnifyLogout from 'hooks/data/useMgnifyLogout';\nimport { ErrorFromFetch } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\ntype AuthenticationFunctions = {\n  login: (username: string, password: string) => void;\n  logout: () => void;\n  loginError: string;\n  loading: boolean;\n  error: ErrorFromFetch;\n};\nconst useAuthentication = (): AuthenticationFunctions => {\n  const { data, loading, error } = useMgnifyForm();\n  const [loginError, setLoginError] = useState('');\n  const { setUser } = useContext(UserContext);\n  const [form, setForm] = useState({\n    username: null,\n    password: null,\n    csrfmiddlewaretoken: null,\n    next: '/metagenomics/mydata',\n  });\n  const {\n    data: dataLogin,\n    loading: loadingLogin,\n    rawResponse: rawResponseLogin,\n  } = useMgnifyLogin(\n    form.username,\n    form.password,\n    form.csrfmiddlewaretoken,\n    form.next\n  );\n\n  useEffect(() => {\n    if (!loadingLogin) {\n      if (rawResponseLogin?.type === 'opaqueredirect') {\n        setUser({ username: form.username, isAuthenticated: true });\n        setLoginError('');\n      } else if (dataLogin) {\n        setLoginError(\n          (dataLogin.querySelector('.text-error') as HTMLElement)?.innerText ||\n            ''\n        );\n      }\n    }\n  }, [dataLogin, loadingLogin, form.username, rawResponseLogin?.type, setUser]);\n\n  const [shouldLogout, setShouldLogout] = useState(false);\n  const { loading: loadingLogout, rawResponse } = useMgnifyLogout(shouldLogout);\n  useEffect(() => {\n    setShouldLogout(false);\n  }, [rawResponse]);\n\n  const login = (username: string, password: string): void => {\n    const csrfmiddlewaretoken = (\n      data.querySelector(\n        'input[name=\"csrfmiddlewaretoken\"]'\n      ) as HTMLInputElement\n    ).value;\n    setLoginError('');\n    setForm({\n      ...form,\n      username,\n      password,\n      csrfmiddlewaretoken,\n    });\n  };\n\n  const logout = (): void => {\n    setShouldLogout(true);\n    setUser({ username: null, isAuthenticated: false });\n  };\n\n  return {\n    login,\n    logout,\n    loginError,\n    loading: loading || loadingLogin || loadingLogout,\n    error,\n  };\n};\n\nexport default useAuthentication;\n","import { useContext } from 'react';\nimport useData, { HTMLDataResponse, ResponseFormat } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\nconst useMgnifyLogin: (\n  username: string,\n  password: string,\n  csrfmiddlewaretoken: string,\n  next: string\n) => HTMLDataResponse = (username, password, csrfmiddlewaretoken, next) => {\n  const { config } = useContext(UserContext);\n  const formData = new FormData();\n  formData.append('username', username);\n  formData.append('password', password);\n  formData.append('csrfmiddlewaretoken', csrfmiddlewaretoken);\n  formData.append('next', next);\n\n  const data = useData(\n    username ? `${config.api.replace('v1/', '')}http-auth/login/` : null,\n    ResponseFormat.HTML,\n    {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': csrfmiddlewaretoken,\n      },\n      credentials: 'include',\n      body: formData,\n      redirect: 'manual',\n    }\n  );\n  return data as HTMLDataResponse;\n};\n\nexport default useMgnifyLogin;\n","import { useContext } from 'react';\nimport useData, { HTMLDataResponse, ResponseFormat } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\nconst useMgnifyLogout: (shouldLogout: boolean) => HTMLDataResponse = (\n  shouldLogout\n) => {\n  const { config } = useContext(UserContext);\n  const data = useData(\n    shouldLogout ? `${config.api.replace('v1/', '')}http-auth/logout` : null,\n    ResponseFormat.HTML,\n    { credentials: 'include' }\n  );\n  return data as HTMLDataResponse;\n};\n\nexport default useMgnifyLogout;\n","import React, { useContext, useRef, FormEvent } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport OutterCard from 'components/UI/OutterCard';\n\nimport UserContext from 'pages/Login/UserContext';\nimport useAuthentication from 'hooks/useAuthentication';\n\nimport enaUserImg from 'public/images/ico_ena_user.jpg';\nimport useQueryParamState from 'hooks/queryParamState/useQueryParamState';\n\nconst Login: React.FC = () => {\n  const userRef = useRef(null);\n  const passwordRef = useRef(null);\n  const { username, isAuthenticated } = useContext(UserContext);\n  const { login, logout, loginError, loading, error } = useAuthentication();\n  const [from] = useQueryParamState('from', '');\n  const navigate = useNavigate();\n  if (isAuthenticated) {\n    if (from === 'private-request') {\n      navigate('/?show=private-request');\n      return null;\n    }\n    if (from === 'public-request') {\n      navigate('/?show=public-request');\n      return null;\n    }\n    return (\n      <div className=\"vf-stack vf-stack--400\">\n        <div>\n          You are logged in as <b>{username}</b>\n        </div>\n        <button type=\"button\" className=\"vf-button\" onClick={logout}>\n          Logout\n        </button>\n      </div>\n    );\n  }\n\n  if (loading) return <Loading />;\n  if (error) return <FetchError error={error} />;\n  const handleSubmit = (event: FormEvent): void => {\n    event.preventDefault();\n    login(userRef.current.value, passwordRef.current.value);\n  };\n  return (\n    <div className=\"vf-grid vf-grid__col-2\">\n      <div className=\"vf-form vf-stack vf-stack--400\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"vf-form__item\">\n            <label htmlFor=\"id_username\" className=\"vf-form__label\">\n              Webin-ID:\n            </label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              maxLength={100}\n              autoCapitalize=\"off\"\n              autoCorrect=\"off\"\n              id=\"id_username\"\n              className=\"vf-form__input\"\n              ref={userRef}\n              required\n            />\n          </div>\n          <div className=\"vf-form__item\">\n            <label htmlFor=\"id_password\" className=\"vf-form__label\">\n              Password:\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              maxLength={100}\n              autoCapitalize=\"off\"\n              autoCorrect=\"off\"\n              className=\"vf-form__input\"\n              id=\"id_password\"\n              ref={passwordRef}\n              required\n            />\n          </div>\n          <br />\n          <div className=\"form-actions-no-box\">\n            <button\n              type=\"submit\"\n              name=\"submit\"\n              className=\"vf-button\"\n              id=\"submit-id-submit\"\n            >\n              Log in\n            </button>\n          </div>\n        </form>\n        {/* {loadingLogin && <Loading />} */}\n        {loginError && <div className=\"vf-box\">{loginError}</div>}\n        <div className=\"form-forgotten\">\n          <a href=\"https://www.ebi.ac.uk/ena/submit/sra/#reset-password\">\n            Forgot your password?\n          </a>\n        </div>\n      </div>\n      <OutterCard>\n        <h3>Not registered yet?</h3>\n        <h4>\n          <a href=\"https://www.ebi.ac.uk/ena/submit/sra/#metagenome_registration\">\n            Sign up\n          </a>{' '}\n          to register\n        </h4>\n        <p>or</p>\n        <p>\n          <a href=\"https://www.ebi.ac.uk/ena/submit/sra/#home\">\n            <img src={enaUserImg} alt=\"ENA member\" />\n          </a>\n        </p>\n        <p>\n          If you already are a registered user of the European Nucleotide\n          Archive (ENA), you should simply use your ENA account to login.\n        </p>\n      </OutterCard>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["children","className","image","imageAltText","src","alt","loading","data","error","config","useContext","UserContext","useData","api","replace","credentials","loginError","setLoginError","useState","setUser","form","setForm","username","password","csrfmiddlewaretoken","next","dataLogin","loadingLogin","rawResponse","rawResponseLogin","formData","FormData","append","method","headers","body","redirect","useEffect","type","isAuthenticated","querySelector","innerText","shouldLogout","setShouldLogout","loadingLogout","login","value","logout","userRef","useRef","passwordRef","from","useQueryParamState","navigate","onClick","Loading","FetchError","onSubmit","event","preventDefault","current","htmlFor","name","maxLength","autoCapitalize","autoCorrect","id","ref","required","href","OutterCard"],"sourceRoot":""}