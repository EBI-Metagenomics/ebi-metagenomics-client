{"version":3,"sources":["webpack://mgportalv2/./src/components/UI/FetchError/index.tsx","webpack://mgportalv2/./src/components/UI/OutterCard/index.tsx","webpack://mgportalv2/./src/hooks/data/useMgnifyForm/index.tsx","webpack://mgportalv2/./src/hooks/useAuthentication/index.tsx","webpack://mgportalv2/./src/hooks/data/useMgnifyLogin/index.tsx","webpack://mgportalv2/./src/hooks/data/useMgnifyLogout/index.tsx","webpack://mgportalv2/./src/pages/Login/index.tsx"],"names":["refreshPage","window","location","reload","error","type","className","style","backgroundColor","status","onClick","children","image","imageAltText","src","alt","loading","data","useData","config","credentials","loginError","setLoginError","useState","setUser","useContext","UserContext","form","setForm","username","password","csrfmiddlewaretoken","dataLogin","loadingLogin","rawResponse","rawResponseLogin","formData","FormData","append","method","headers","body","redirect","useEffect","isAuthenticated","querySelector","innerText","shouldLogout","setShouldLogout","loadingLogout","login","value","logout","userRef","useRef","passwordRef","Loading","FetchError","onSubmit","event","preventDefault","current","htmlFor","name","maxLength","autoCapitalize","autoCorrect","id","ref","required","href","OutterCard"],"mappings":"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","file":"js/601.de086c71.chunk.js","sourcesContent":["import React from 'react';\nimport { ErrorFromFetch, ErrorTypes } from 'hooks/data/useData';\n\nconst refreshPage = (): void => {\n  window.location.reload();\n};\n\nconst FetchError: React.FC<{ error: ErrorFromFetch }> = ({ error }) => {\n  if (!error || error.type === ErrorTypes.NullURL) return null;\n  return (\n    <div\n      className=\"vf-box vf-box-theme--primary vf-box--easy\"\n      style={{\n        backgroundColor: 'lemonchiffon',\n      }}\n    >\n      <h3 className=\"vf-box__heading\">\n        <span className=\"icon icon-common icon-exclamation-triangle\" /> Error\n        Fetching Data\n      </h3>\n      <p className=\"vf-box__text\">\n        {error?.type === ErrorTypes.FetchError &&\n          `There were problems with the request. [${error.error}]`}\n        {error?.type === ErrorTypes.NotOK &&\n          `The response from the server was not OK [Status: ${error.status}].`}\n        {error?.type === ErrorTypes.JSONError &&\n          `The recovered resource didn't follow the expected format [${error.error}].`}\n      </p>\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--tertiary vf-button--sm \"\n          onClick={refreshPage}\n        >\n          Refresh\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FetchError;\n","import React from 'react';\n\nconst OutterCard: React.FC<{\n  className?: string;\n  image?: string;\n  imageAltText?: string;\n}> = ({ children, className = '', image = null, imageAltText = '' }) => {\n  return (\n    <article\n      className={`vf-card vf-card--brand vf-card--bordered ${className}`}\n    >\n      {image && (\n        <img\n          src={image}\n          alt={imageAltText}\n          className=\"vf-card__image\"\n          loading=\"lazy\"\n        />\n      )}\n      <div className=\"vf-card__content | vf-stack vf-stack--400\">\n        {children}\n      </div>\n    </article>\n  );\n};\n\nexport default OutterCard;\n","import useData, { HTMLDataResponse, ResponseFormat } from 'hooks/data/useData';\nimport config from 'config.json';\n\nconst useMgnifyForm: () => HTMLDataResponse = () => {\n  const data = useData(\n    `${config.api.replace('v1/', '')}http-auth/login_form`,\n    ResponseFormat.HTML,\n    { credentials: 'include' }\n  );\n  return data as HTMLDataResponse;\n};\n\nexport default useMgnifyForm;\n","import { useContext, useState, useEffect } from 'react';\nimport useMgnifyForm from 'hooks/data/useMgnifyForm';\nimport useMgnifyLogin from 'hooks/data/useMgnifyLogin';\nimport useMgnifyLogout from 'hooks/data/useMgnifyLogout';\nimport { ErrorFromFetch } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\ntype AuthenticationFunctions = {\n  login: (username: string, password: string) => void;\n  logout: () => void;\n  loginError: string;\n  loading: boolean;\n  error: ErrorFromFetch;\n};\nconst useAuthentication = (): AuthenticationFunctions => {\n  const { data, loading, error } = useMgnifyForm();\n  const [loginError, setLoginError] = useState('');\n  const { setUser } = useContext(UserContext);\n  const [form, setForm] = useState({\n    username: null,\n    password: null,\n    csrfmiddlewaretoken: null,\n  });\n  const {\n    data: dataLogin,\n    loading: loadingLogin,\n    rawResponse: rawResponseLogin,\n  } = useMgnifyLogin(form.username, form.password, form.csrfmiddlewaretoken);\n\n  useEffect(() => {\n    if (!loadingLogin) {\n      if (rawResponseLogin?.type === 'opaqueredirect') {\n        setUser({ username: form.username, isAuthenticated: true });\n        setLoginError('');\n      } else if (dataLogin) {\n        setLoginError(\n          (dataLogin.querySelector('.text-error') as HTMLElement)?.innerText ||\n            ''\n        );\n      }\n    }\n  }, [dataLogin, loadingLogin, form.username, rawResponseLogin?.type, setUser]);\n\n  const [shouldLogout, setShouldLogout] = useState(false);\n  const { loading: loadingLogout, rawResponse } = useMgnifyLogout(shouldLogout);\n  useEffect(() => {\n    setShouldLogout(false);\n  }, [rawResponse]);\n\n  const login = (username: string, password: string): void => {\n    const csrfmiddlewaretoken = (\n      data.querySelector(\n        'input[name=\"csrfmiddlewaretoken\"]'\n      ) as HTMLInputElement\n    ).value;\n    setLoginError('');\n    setForm({\n      username,\n      password,\n      csrfmiddlewaretoken,\n    });\n  };\n\n  const logout = (): void => {\n    setShouldLogout(true);\n    setUser({ username: null, isAuthenticated: false });\n  };\n\n  return {\n    login,\n    logout,\n    loginError,\n    loading: loading || loadingLogin || loadingLogout,\n    error,\n  };\n};\n\nexport default useAuthentication;\n","import useData, { HTMLDataResponse, ResponseFormat } from 'hooks/data/useData';\nimport config from 'config.json';\n\nconst useMgnifyLogin: (\n  username: string,\n  password: string,\n  csrfmiddlewaretoken: string\n) => HTMLDataResponse = (username, password, csrfmiddlewaretoken) => {\n  const formData = new FormData();\n  formData.append('username', username);\n  formData.append('password', password);\n  formData.append('csrfmiddlewaretoken', csrfmiddlewaretoken);\n\n  const data = useData(\n    username ? `${config.api.replace('v1/', '')}http-auth/login/` : null,\n    ResponseFormat.HTML,\n    {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': csrfmiddlewaretoken,\n      },\n      credentials: 'include',\n      body: formData,\n      redirect: 'manual',\n    }\n  );\n  return data as HTMLDataResponse;\n};\n\nexport default useMgnifyLogin;\n","import useData, { HTMLDataResponse, ResponseFormat } from 'hooks/data/useData';\nimport config from 'config.json';\n\nconst useMgnifyLogout: (shouldLogout: boolean) => HTMLDataResponse = (\n  shouldLogout\n) => {\n  const data = useData(\n    shouldLogout ? `${config.api.replace('v1/', '')}http-auth/logout` : null,\n    ResponseFormat.HTML,\n    { credentials: 'include' }\n  );\n  return data as HTMLDataResponse;\n};\n\nexport default useMgnifyLogout;\n","import React, { useContext, useRef, FormEvent } from 'react';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport OutterCard from 'components/UI/OutterCard';\n\nimport UserContext from 'pages/Login/UserContext';\nimport useAuthentication from 'hooks/useAuthentication';\n\nimport enaUserImg from 'public/images/ico_ena_user.jpg';\n\nconst Login: React.FC = () => {\n  const userRef = useRef(null);\n  const passwordRef = useRef(null);\n  const { username, isAuthenticated } = useContext(UserContext);\n  const { login, logout, loginError, loading, error } = useAuthentication();\n\n  if (isAuthenticated) {\n    return (\n      <div className=\"vf-stack vf-stack--400\">\n        <div>\n          You are logged in as <b>{username}</b>\n        </div>\n        <button type=\"button\" className=\"vf-button\" onClick={logout}>\n          Logout\n        </button>\n      </div>\n    );\n  }\n\n  if (loading) return <Loading />;\n  if (error) return <FetchError error={error} />;\n  const handleSubmit = (event: FormEvent): void => {\n    event.preventDefault();\n    login(userRef.current.value, passwordRef.current.value);\n  };\n  return (\n    <div className=\"vf-grid vf-grid__col-2\">\n      <div className=\"vf-form vf-stack vf-stack--400\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"vf-form__item\">\n            <label htmlFor=\"id_username\" className=\"vf-form__label\">\n              Webin-ID:\n            </label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              maxLength={100}\n              autoCapitalize=\"off\"\n              autoCorrect=\"off\"\n              id=\"id_username\"\n              className=\"vf-form__input\"\n              ref={userRef}\n              required\n            />\n          </div>\n          <div className=\"vf-form__item\">\n            <label htmlFor=\"id_password\" className=\"vf-form__label\">\n              Password:\n            </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              maxLength={100}\n              autoCapitalize=\"off\"\n              autoCorrect=\"off\"\n              className=\"vf-form__input\"\n              id=\"id_password\"\n              ref={passwordRef}\n              required\n            />\n          </div>\n          <br />\n          <div className=\"form-actions-no-box\">\n            <button\n              type=\"submit\"\n              name=\"submit\"\n              className=\"vf-button\"\n              id=\"submit-id-submit\"\n            >\n              Log in\n            </button>\n          </div>\n        </form>\n        {/* {loadingLogin && <Loading />} */}\n        {loginError && <div className=\"vf-box\">{loginError}</div>}\n        <div className=\"form-forgotten\">\n          <a href=\"https://www.ebi.ac.uk/ena/submit/sra/#reset-password\">\n            Forgot your password?\n          </a>\n        </div>\n      </div>\n      <OutterCard>\n        <h3>Not registered yet?</h3>\n        <h4>\n          <a href=\"https://www.ebi.ac.uk/ena/submit/sra/#metagenome_registration\">\n            Sign up\n          </a>{' '}\n          to register\n        </h4>\n        <p>or</p>\n        <p>\n          <a href=\"https://www.ebi.ac.uk/ena/submit/sra/#home\">\n            <img src={enaUserImg} alt=\"ENA member\" />\n          </a>\n        </p>\n        <p>\n          If you already are a registered user of the European Nucleotide\n          Archive (ENA), you should simply use your ENA account to login.\n        </p>\n      </OutterCard>\n    </div>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}