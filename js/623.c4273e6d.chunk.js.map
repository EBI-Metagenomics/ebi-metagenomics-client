{"version":3,"file":"js/623.c4273e6d.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/Assembly/Assemblies/index.tsx","webpack://mgportalv2/./src/components/Nav/RouteForHash/index.tsx","webpack://mgportalv2/./src/components/Study/Studies/index.tsx","webpack://mgportalv2/./src/components/UI/Box/index.tsx","webpack://mgportalv2/./src/components/UI/KeyValueList/index.tsx","webpack://mgportalv2/./src/components/UI/SamplesMap/index.tsx","webpack://mgportalv2/./src/components/UI/SamplesMap/render.tsx","webpack://mgportalv2/./src/components/UI/Tabs/index.tsx","webpack://mgportalv2/./src/components/UI/TextTruncated/index.tsx","webpack://mgportalv2/./src/components/UI/Tooltip/index.tsx","webpack://mgportalv2/./src/hooks/useURLAccession/index.tsx","webpack://mgportalv2/./src/components/UI/SamplesMap/BySamplesArray/index.tsx","webpack://mgportalv2/./src/components/Sample/Overview/index.tsx","webpack://mgportalv2/./src/components/Sample/Runs/index.tsx","webpack://mgportalv2/./node_modules/lodash-es/_assignValue.js","webpack://mgportalv2/./node_modules/lodash-es/_baseSet.js","webpack://mgportalv2/./node_modules/lodash-es/_getPrototype.js","webpack://mgportalv2/./node_modules/lodash-es/_getSymbolsIn.js","webpack://mgportalv2/./node_modules/lodash-es/_baseKeysIn.js","webpack://mgportalv2/./node_modules/lodash-es/_nativeKeysIn.js","webpack://mgportalv2/./node_modules/lodash-es/keysIn.js","webpack://mgportalv2/./node_modules/lodash-es/pickBy.js","webpack://mgportalv2/./node_modules/lodash-es/_getAllKeysIn.js","webpack://mgportalv2/./node_modules/lodash-es/_basePickBy.js","webpack://mgportalv2/./src/components/Sample/AnnotationMetadata/index.tsx","webpack://mgportalv2/./src/pages/Sample/index.tsx","webpack://mgportalv2/./src/utils/urls.ts","webpack://mgportalv2/./node_modules/lodash-es/_defineProperty.js","webpack://mgportalv2/./node_modules/lodash-es/_baseAssignValue.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, MGnifyResponseList } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport InfoBanner from 'src/components/UI/InfoBanner';\n\nconst initialPageSize = 10;\n\nconst getURLByEndpoint = (endpoint: string, accession: string): string => {\n  if (endpoint === 'runs') return `runs/${accession}/assemblies`;\n  return 'assemblies';\n};\ntype AssociatedAssembliesProps = {\n  rootEndpoint: string;\n};\n\nconst AssociatedAssemblies: React.FC<AssociatedAssembliesProps> = ({\n  rootEndpoint,\n}) => {\n  const accession = useURLAccession();\n  const [queryParameters] = useQueryParametersState(\n    {\n      'assembly-page': 1,\n      'assembly-page_size': initialPageSize,\n      'assembly-order': '',\n    },\n    {\n      'assembly-page': Number,\n      'assembly-page_size': Number,\n    }\n  );\n  const url = getURLByEndpoint(rootEndpoint, accession);\n  const { data, loading, error, isStale, downloadURL } = useMGnifyData(url, {\n    sample_accession: rootEndpoint === 'samples' ? accession : undefined,\n    page: queryParameters['assembly-page'] as number,\n    ordering: queryParameters['assembly-order'] as string,\n    page_size: queryParameters['assembly-page_size'] as number,\n  });\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !data) return <FetchError error={error} />;\n  if (!(data.data as MGnifyDatum[]).length)\n    return <InfoBanner type=\"info\" title=\"No associated assemblies found.\" />;\n\n  const columns = [\n    {\n      Header: 'Assembly ID',\n      accessor: 'id',\n      Cell: ({ cell }) => (\n        <Link to={`/assemblies/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      Header: 'Experiment type',\n      accessor: 'attributes.experiment-type',\n    },\n    {\n      Header: 'WGS ID',\n      accessor: 'attributes.wgs-accession',\n    },\n    {\n      Header: 'Legacy ID',\n      accessor: 'attributes.legacy-accession',\n    },\n    {\n      Header: 'Pipeline versions',\n      accessor: 'relationships.pipelines.data',\n      Cell: ({ cell }) =>\n        (cell.value as { id: string }[]).map(({ id }) => id).join(', '),\n    },\n  ];\n  const showPagination = (data.meta?.pagination?.count || 1) > initialPageSize;\n\n  return (\n    <EMGTable\n      cols={columns}\n      data={data as MGnifyResponseList}\n      initialPage={(queryParameters['assembly-page'] as number) - 1}\n      initialPageSize={initialPageSize}\n      className=\"mg-assembly-table\"\n      loading={loading}\n      isStale={isStale}\n      namespace=\"assembly-\"\n      showPagination={showPagination}\n      downloadURL={downloadURL}\n    />\n  );\n};\n\nexport default AssociatedAssemblies;\n","import React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\ntype PropsType = {\n  hash: string;\n  isDefault?: boolean;\n};\nconst RouteForHash: React.FC<PropsType> = ({\n  hash,\n  isDefault = false,\n  children,\n}) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (location.hash === '' && hash !== '' && isDefault) {\n      navigate(hash, { replace: true });\n    }\n  });\n\n  if (location.hash === hash) {\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport default RouteForHash;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport TruncatedText from 'components/UI/TextTruncated';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, MGnifyResponseList } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport { getBiomeIcon } from 'utils/biomes';\n\nconst initialPageSize = 10;\n\ntype AssociatedStudiesProps = {\n  rootEndpoint: string;\n};\nconst AssociatedStudies: React.FC<AssociatedStudiesProps> = ({\n  rootEndpoint,\n}) => {\n  const accession = useURLAccession();\n  const [queryParameters] = useQueryParametersState(\n    {\n      'studies-page': 1,\n      'studies-page_size': initialPageSize,\n      'studies-order': '',\n    },\n    {\n      'studies-page': Number,\n      'studies-page_size': Number,\n    }\n  );\n  const { data, loading, error, isStale, downloadURL } = useMGnifyData(\n    `${rootEndpoint}/${accession}/studies`,\n    {\n      page: queryParameters['studies-page'] as number,\n      ordering: queryParameters['studies-order'] as string,\n      page_size: queryParameters['studies-page_size'] as number,\n    }\n  );\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !data) return <FetchError error={error} />;\n  if (!(data.data as MGnifyDatum[]).length) return null;\n\n  const columns = [\n    {\n      id: 'biome_id',\n      Header: 'Biome',\n      accessor: (study) => study.relationships.biomes.data?.[0]?.id,\n      Cell: ({ cell }) => (\n        <span\n          className={`biome_icon icon_xs ${getBiomeIcon(cell.value)}`}\n          style={{ float: 'initial' }}\n        />\n      ),\n      className: 'mg-biome',\n    },\n    {\n      id: 'study',\n      Header: 'Study accession',\n      accessor: 'id',\n      Cell: ({ cell }) => (\n        <Link to={`/studies/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      Header: 'Name',\n      accessor: 'attributes.study-name',\n    },\n    {\n      Header: 'Abstract',\n      accessor: 'attributes.study-abstract',\n      Cell: ({ cell }) => <TruncatedText text={(cell.value as string) || ''} />,\n    },\n    {\n      Header: 'Samples Count',\n      accessor: 'attributes.samples-count',\n    },\n    {\n      id: 'last_update',\n      Header: 'Last Updated',\n      accessor: 'attributes.last-update',\n      Cell: ({ cell }) => new Date(cell.value).toLocaleDateString(),\n    },\n  ];\n  const showPagination = (data.meta?.pagination?.count || 1) > initialPageSize;\n\n  return (\n    <EMGTable\n      cols={columns}\n      data={data as MGnifyResponseList}\n      initialPage={(queryParameters['studies-page'] as number) - 1}\n      initialPageSize={initialPageSize}\n      className=\"mg-studies-table\"\n      loading={loading}\n      isStale={isStale}\n      namespace=\"studies-\"\n      showPagination={showPagination}\n      downloadURL={downloadURL}\n    />\n  );\n};\n\nexport default AssociatedStudies;\n","import React from 'react';\n\nconst Box: React.FC<{ label: string; theme?: string }> = ({\n  label,\n  theme = 'primary',\n  children,\n}) => (\n  <div className=\"vf-grid\">\n    <div className={`vf-box vf-box--easy vf-box-theme--${theme}`}>\n      <h5 className=\"vf-box__heading\">{label}</h5>\n      <div className=\"vf-box__text\">{children}</div>\n    </div>\n  </div>\n);\n\nexport default Box;\n","import React from 'react';\n\ntype KeyValueProps = {\n  list: { key: string; value: string | React.ElementType }[];\n};\n\nconst KeyValueList: React.FC<KeyValueProps> = ({ list }) => (\n  <div\n    className=\"vf-grid vf-grid__col-2\"\n    style={{\n      gridTemplateColumns: '1fr 2fr',\n      rowGap: '0.5rem',\n    }}\n  >\n    {list.map(({ key, value: Value }) => (\n      <React.Fragment key={key}>\n        <div style={{ textAlign: 'right' }}>{key}:</div>\n        <div>{typeof Value === 'string' ? Value : <Value />}</div>\n      </React.Fragment>\n    ))}\n  </div>\n);\n\nexport default KeyValueList;\n","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOMServer from 'react-dom/server';\n\nimport MarkerClusterer from '@googlemaps/markerclustererplus';\n\nimport { MGnifyDatum } from 'hooks/data/useData';\n\nimport './style.css';\n\n// TODO: make the link play nicer with react-router\nconst MarkerPopup: React.FC<{ sample: MGnifyDatum }> = ({ sample }) => (\n  <div className=\"vf-box vf-box--easy\">\n    <h3 className=\"vf-box__heading\">\n      <a href={`../samples/${sample.id}`}>{sample.id}</a>\n      {/* <Link to=\"/search/studies\">{sample.id}</Link> */}\n    </h3>\n    <p className=\"vf-box__text\">{sample.attributes['sample-desc']}</p>\n  </div>\n);\nconst ClusterMarkerPopup: React.FC<{ accessions: string[] }> = ({\n  accessions,\n}) => (\n  <div className=\"vf-box vf-box--easy\">\n    <h3 className=\"vf-box__heading\">Samples on this geographical location</h3>\n    <ul className=\"vf-list\">\n      {accessions.map((accession) => (\n        <li ref={accession}>\n          <a href={`../samples/${accession}`}>{accession}</a>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\ntype MapProps = {\n  samples: Array<MGnifyDatum>;\n};\n\nconst SamplesMap: React.FC<MapProps> = ({ samples }) => {\n  const ref = useRef();\n  const [theMap, setTheMap] = useState(null);\n  const markerCluster = useRef<MarkerClusterer>(null);\n  const sampleInfoWindow = useRef(new google.maps.InfoWindow());\n  const clusterInfoWindow = useRef(new google.maps.InfoWindow());\n  const newBoundary = useRef(new google.maps.LatLngBounds());\n\n  const markers = useRef({});\n\n  useEffect(() => {\n    if (theMap === null) {\n      const tmpMap = new google.maps.Map(ref.current, {\n        maxZoom: 10,\n        minZoom: 2,\n      });\n      setTheMap(tmpMap);\n    }\n  }, [theMap]);\n  useEffect(() => {\n    if (theMap && samples) {\n      if (markerCluster.current) {\n        markerCluster.current.clearMarkers();\n      }\n\n      samples\n        .filter(({ id }) => !(id in markers.current))\n        .forEach((sample) => {\n          const position = {\n            lat: sample.attributes.latitude as number,\n            lng: sample.attributes.longitude as number,\n          };\n          const marker = new google.maps.Marker({\n            position,\n            title: sample.id,\n          });\n          newBoundary.current.extend(position);\n          marker.addListener('click', () => {\n            sampleInfoWindow.current.setContent(\n              ReactDOMServer.renderToString(<MarkerPopup sample={sample} />)\n            );\n            sampleInfoWindow.current.open(theMap, marker);\n          });\n          markers.current[sample.id] = marker;\n        });\n      markerCluster.current = new MarkerClusterer(\n        theMap,\n        Object.values(markers.current),\n        {\n          imagePath:\n            'https://raw.githubusercontent.com/googlemaps/js-markerclustererplus/master/images/m',\n          maxZoom: 10,\n        }\n      );\n\n      // for clusters in MAX Zoom and with less than 10 elements show a list\n      google.maps.event.addListener(\n        markerCluster.current,\n        'click',\n        // eslint-disable-next-line func-names\n        function (cluster) {\n          if (\n            // eslint-disable-next-line no-underscore-dangle, react/no-this-in-sfc\n            this.prevZoom_ + 1 <= this.getMaxZoom() ||\n            cluster.getSize() >= 10\n          ) {\n            return;\n          }\n          clusterInfoWindow.current.setPosition(cluster.getCenter());\n\n          clusterInfoWindow.current.setContent(\n            ReactDOMServer.renderToString(\n              <ClusterMarkerPopup\n                accessions={cluster.getMarkers().map((m) => m.getTitle())}\n              />\n            )\n          );\n\n          clusterInfoWindow.current.open(theMap);\n        }\n      );\n\n      theMap.fitBounds(newBoundary.current);\n    }\n  }, [theMap, samples]);\n\n  return <div ref={ref} id=\"map\" style={{ height: '100%' }} />;\n};\n\nexport default SamplesMap;\n","import React, { ReactElement } from 'react';\nimport { Status } from '@googlemaps/react-wrapper';\nimport { ErrorTypes } from 'hooks/data/useData';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\n\nconst render = (status: Status): ReactElement => {\n  if (status === Status.LOADING) return <Loading />;\n  if (status === Status.FAILURE)\n    return (\n      <FetchError\n        error={{\n          status: 200,\n          type: ErrorTypes.OtherError,\n          error: status,\n        }}\n      />\n    );\n  return null;\n};\n\nexport default render;\n","import React, { useMemo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Tab: React.FC = () => null;\n\ntype TabsProps = {\n  tabs: Array<{\n    label: string | React.ElementType;\n    to: string;\n  }>;\n  preservedQueryParameters?: string[];\n};\nconst Tabs: React.FC<TabsProps> = ({ tabs, preservedQueryParameters }) => {\n  const location = useLocation();\n  const queryParamString = useMemo(() => {\n    if (!preservedQueryParameters) return '';\n    const preserved = new URLSearchParams();\n    const existing = new URLSearchParams(location.search);\n    let anyPreserved = false;\n    preservedQueryParameters.forEach((queryParam) => {\n      if (existing.has(queryParam))\n        preserved.append(queryParam, existing.get(queryParam));\n      anyPreserved = true;\n    });\n    return anyPreserved ? `?${preserved.toString()}` : '';\n  }, [preservedQueryParameters, location.search]);\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label: Label, to }) => (\n          <li className=\"vf-tabs__item\" key={to}>\n            <Link\n              className={`vf-tabs__link ${\n                to === location.pathname ||\n                (to.startsWith('#') && to === location.hash) ||\n                (to === '#' && location.hash === '')\n                  ? 'is-active'\n                  : ''\n              }`}\n              to={to + queryParamString}\n            >\n              {typeof Label === 'string' ? Label : <Label />}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React from 'react';\nimport Tooltip from 'components/UI/Tooltip';\n\nconst TruncatedText: React.FC<{\n  maxLength?: number;\n  text: string;\n  withTooltip?: boolean;\n}> = ({ text, maxLength = 250, withTooltip = false }) => {\n  const isTruncated = text.length >= maxLength;\n  const truncated = (\n    <>\n      {text.substring(0, maxLength)}\n      {isTruncated && '...'}\n    </>\n  );\n  if (withTooltip && isTruncated)\n    return (\n      <Tooltip content={text}>\n        <span>{truncated}</span>\n      </Tooltip>\n    );\n  return truncated;\n};\n\nexport default TruncatedText;\n","import React from 'react';\nimport Tippy from '@tippyjs/react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'tippy.js/dist/tippy.css';\n\ntype TooltipProps = {\n  content: React.ReactNode;\n  children?: React.ReactNode;\n};\n\nconst Tooltip: React.FC<TooltipProps> = ({ content, children }) => (\n  <Tippy content={content}>{children as React.ReactElement}</Tippy>\n);\nexport default Tooltip;\n","import { useLocation } from 'react-router-dom';\n\nconst useURLAccession = (): string | undefined => {\n  const location = useLocation();\n  let { pathname } = location;\n  if (pathname.trim().endsWith('/')) pathname = pathname.trim().slice(0, -1);\n  const parts = pathname.split('/');\n  return parts?.[parts.length - 1];\n};\n\nexport default useURLAccession;\n","import React, { useContext } from 'react';\n\nimport { Wrapper } from '@googlemaps/react-wrapper';\n\nimport UserContext from 'pages/Login/UserContext';\nimport SamplesMap from 'components/UI/SamplesMap';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport render from '../render';\n\nimport '../style.css';\n\ntype SamplesMapProps = {\n  samples: Array<MGnifyDatum>;\n};\nconst SamplesMapBySamplesArray: React.FC<SamplesMapProps> = ({ samples }) => {\n  const { config } = useContext(UserContext);\n\n  const samplesFiltered = samples.filter((sample) => {\n    try {\n      return (\n        Number(sample.attributes.longitude) !== 0.0 &&\n        Number(sample.attributes.latitude) !== 0.0\n      );\n    } catch {\n      return false;\n    }\n  });\n\n  return (\n    <div className=\"mg-map-container\">\n      <div className=\"mg-map-wrapper\">\n        <Wrapper apiKey={config.googleMapsKey} render={render}>\n          <SamplesMap samples={samplesFiltered} />\n        </Wrapper>\n      </div>\n      <div className=\"mg-map-progress\">\n        {samplesFiltered.length === 0 && (\n          <div>⚠️ None of the samples have geolocation co-ordinates.</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SamplesMapBySamplesArray;\n","import React from 'react';\n\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport SamplesMap from 'components/UI/SamplesMap/BySamplesArray';\nimport Box from 'components/UI/Box';\nimport ExtLink from 'components/UI/ExtLink';\nimport { getBiomeIcon } from 'utils/biomes';\nimport { ENA_VIEW_URL } from 'utils/urls';\n\ntype SampleOverviewProps = {\n  data: MGnifyDatum;\n};\n\nconst SampleOverview: React.FC<SampleOverviewProps> = ({ data }) => {\n  const lineage = data.relationships.biome.data.id;\n  return (\n    <section>\n      <div className=\"vf-grid\">\n        <div>\n          <h4>\n            Last updated:{' '}\n            {new Date(\n              data?.attributes?.['last-update'] as string\n            ).toDateString()}\n          </h4>\n          <Box label=\"Description\">{data.attributes['sample-desc']}</Box>\n          <Box label=\"External links\">\n            <ul>\n              <li>\n                <ExtLink href={ENA_VIEW_URL + data.attributes.accession}>\n                  ENA website ({data.attributes.accession})\n                </ExtLink>\n              </li>\n              <li>\n                <ExtLink\n                  href={`https://www.ebi.ac.uk/biosamples/samples/${data.attributes.biosample}`}\n                >\n                  EBI biosample ({data.attributes.biosample})\n                </ExtLink>\n              </li>\n            </ul>\n          </Box>\n          <Box label=\"Classification\">\n            <span\n              className={`biome_icon icon_sm ${getBiomeIcon(lineage)}`}\n              style={{ float: 'initial' }}\n            />\n            {lineage}\n          </Box>\n        </div>\n        <SamplesMap samples={[data]} />\n      </div>\n    </section>\n  );\n};\n\nexport default SampleOverview;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\n\nconst initialPageSize = 10;\n\nconst AssociatedRuns: React.FC = () => {\n  const accession = useURLAccession();\n  const [queryParameters] = useQueryParametersState(\n    {\n      'runs-page': 1,\n      'runs-page_size': initialPageSize,\n      'runs-order': '',\n    },\n    {\n      'runs-page': Number,\n      'runs-page_size': Number,\n    }\n  );\n  const { data, loading, error, isStale, downloadURL } = useMGnifyData(\n    `samples/${accession}/runs`,\n    {\n      page: queryParameters['runs-page'] as number,\n      ordering: queryParameters['runs-order'] as string,\n      page_size: queryParameters['runs-page_size'] as number,\n    }\n  );\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !data) return <FetchError error={error} />;\n\n  const columns = [\n    {\n      id: 'run',\n      Header: 'Run ID',\n      accessor: 'id',\n      Cell: ({ cell }) => <Link to={`/runs/${cell.value}`}>{cell.value}</Link>,\n    },\n    {\n      Header: 'Experiment type',\n      accessor: 'attributes.experiment-type',\n    },\n    {\n      Header: 'Instrument model',\n      accessor: 'attributes.instrument-model',\n    },\n    {\n      Header: 'Instrument platform',\n      accessor: 'attributes.instrument-platform',\n    },\n    {\n      Header: 'Pipeline versions',\n      accessor: 'relationships.pipelines.data',\n      Cell: ({ cell }) =>\n        (cell.value as { id: string }[]).map(({ id }) => id).join(', '),\n    },\n  ];\n\n  return (\n    <EMGTable\n      cols={columns}\n      data={data as MGnifyResponseList}\n      initialPage={(queryParameters['runs-page'] as number) - 1}\n      initialPageSize={initialPageSize}\n      className=\"mg-runs-table\"\n      loading={loading}\n      isStale={isStale}\n      namespace=\"runs-\"\n      downloadURL={downloadURL}\n    />\n  );\n};\n\nexport default AssociatedRuns;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import React from 'react';\nimport FetchError from 'components/UI/FetchError';\nimport Loading from 'components/UI/Loading';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { pickBy } from 'lodash-es';\nimport { Link } from 'react-router-dom';\nimport ExtLink from 'components/UI/ExtLink';\n\ntype ExistenceData = {\n  query_possible: boolean;\n  study_has_annotations: {\n    [study: string]: boolean;\n  };\n};\n\nconst AnnotationMetadata: React.FC<{ sampleAccession: string }> = ({\n  sampleAccession,\n}) => {\n  const { data, loading, error } = useMGnifyData(\n    `samples/${sampleAccession}/studies_publications_annotations_existence`\n  );\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  const existenceData = data.data as unknown as ExistenceData;\n  const studiesWithAnnotations = Object.keys(\n    pickBy(existenceData.study_has_annotations)\n  );\n  const anyMetadata = studiesWithAnnotations.length > 0;\n\n  if (!existenceData.query_possible)\n    return (\n      <div\n        className=\"vf-box vf-box-theme--primary vf-box--easy\"\n        style={{\n          backgroundColor: 'lemonchiffon',\n        }}\n      >\n        <h6 className=\"vf-box__heading\">\n          <span className=\"icon icon-common icon-exclamation-triangle\" />\n          Couldn’t check all studies for metadata\n        </h6>\n        <p className=\"vf-box__text\">\n          Additional metadata for this sample may be available via annotations\n          on the publications linked to by the associated studies in the table\n          below. Unfortunately these couldn’t be fetched at this time &ndash;\n          please view each study to explore more.\n        </p>\n      </div>\n    );\n\n  if (anyMetadata)\n    return (\n      <div className=\"vf-box vf-box-theme--primary vf-box--easy\">\n        <h6 className=\"vf-box__heading\">\n          Additional metadata from Publications\n        </h6>\n        <p className=\"vf-box__text\">\n          Additional metadata that may relate to this sample is available via\n          publications in the following associated{' '}\n          {studiesWithAnnotations.length > 1 ? 'studies' : 'study'}:{' '}\n          {studiesWithAnnotations.map((study) => (\n            <React.Fragment key={study}>\n              <Link to={`/studies/${study}`}>{study}</Link>\n              &nbsp;\n            </React.Fragment>\n          ))}\n        </p>\n        <p className=\"vf-box__text\">\n          These additional metadata are extracted by{' '}\n          <ExtLink href=\"https://europepmc.org\">Europe PMC</ExtLink> using\n          text-mining on the publications. Browse the studies to explore\n          further.\n        </p>\n      </div>\n    );\n  return null;\n};\n\nexport default AnnotationMetadata;\n","import React from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Tabs from 'components/UI/Tabs';\nimport Overview from 'components/Sample/Overview';\nimport AssociatedStudies from 'components/Study/Studies';\nimport AssociatedRuns from 'components/Sample/Runs';\nimport AssociatedAssemblies from 'components/Assembly/Assemblies';\nimport RouteForHash from 'components/Nav/RouteForHash';\nimport KeyValueList from 'components/UI/KeyValueList';\nimport AnnotationMetadata from 'components/Sample/AnnotationMetadata';\n\nconst tabs = [\n  { label: 'Sample metadata', to: '#' },\n  { label: 'Associated studies', to: '#studies' },\n  { label: 'Analysed associated runs', to: '#runs' },\n  { label: 'Analysed associated assemblies', to: '#assemblies' },\n];\n\nconst SamplePage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`samples/${accession}`);\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: sampleData } = data as MGnifyResponseObj;\n  return (\n    <section className=\"vf-content\">\n      <h2>Sample overview ({accession})</h2>\n      <h3>Sample {sampleData.attributes['sample-name']}</h3>\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <Overview data={sampleData} />\n          <Tabs tabs={tabs} />\n          <section className=\"vf-grid\">\n            <div className=\"vf-stack vf-stack--200\">\n              <RouteForHash hash=\"\" isDefault>\n                <KeyValueList\n                  list={\n                    (sampleData?.attributes?.['sample-metadata'] as {\n                      key: string;\n                      value: string;\n                    }[]) || []\n                  }\n                />\n                <AnnotationMetadata sampleAccession={accession} />\n              </RouteForHash>\n              <RouteForHash hash=\"#studies\">\n                <AssociatedStudies rootEndpoint=\"samples\" />\n              </RouteForHash>\n              <RouteForHash hash=\"#runs\">\n                <AssociatedRuns />\n              </RouteForHash>\n              <RouteForHash hash=\"#assemblies\">\n                <AssociatedAssemblies rootEndpoint=\"samples\" />\n              </RouteForHash>\n            </div>\n          </section>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default SamplePage;\n","export const ENA_VIEW_URL = 'https://www.ebi.ac.uk/ena/browser/view/';\nexport const IMG_URL =\n  ' https://img.jgi.doe.gov/cgi-bin/m/main.cgi?section=TaxonDetail&page=taxonDetail&taxon_oid=';\nexport const NCBI_ASSEMBLY_URL = 'https://www.ncbi.nlm.nih.gov/assembly/';\nexport const NCBI_SAMPLE_URL = 'https://www.ncbi.nlm.nih.gov/biosample/?term=';\nexport const NCBI_PROJECT_URL = 'https://www.ncbi.nlm.nih.gov/bioproject/';\nexport const PATRIC_URL = 'https://www.patricbrc.org/view/Genome/';\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n"],"names":["rootEndpoint","accession","queryParameters","Number","url","endpoint","getURLByEndpoint","data","loading","error","isStale","downloadURL","sample_accession","undefined","page","ordering","page_size","size","length","type","title","columns","Header","accessor","Cell","cell","to","value","map","id","join","showPagination","meta","pagination","count","cols","initialPage","initialPageSize","className","namespace","hash","isDefault","children","location","navigate","useEffect","replace","study","relationships","biomes","style","float","text","Date","toLocaleDateString","label","theme","list","gridTemplateColumns","rowGap","key","Value","textAlign","MarkerPopup","sample","href","attributes","ClusterMarkerPopup","accessions","ref","samples","useRef","theMap","setTheMap","useState","markerCluster","sampleInfoWindow","google","maps","InfoWindow","clusterInfoWindow","newBoundary","LatLngBounds","markers","tmpMap","Map","current","maxZoom","minZoom","clearMarkers","filter","forEach","position","lat","latitude","lng","longitude","marker","Marker","extend","addListener","setContent","open","Object","values","imagePath","event","cluster","this","prevZoom_","getMaxZoom","getSize","setPosition","getCenter","getMarkers","m","getTitle","fitBounds","height","status","Status","tabs","preservedQueryParameters","queryParamString","useMemo","preserved","URLSearchParams","existing","search","anyPreserved","queryParam","has","append","get","toString","Label","pathname","startsWith","maxLength","withTooltip","isTruncated","truncated","substring","content","trim","endsWith","slice","parts","split","config","useContext","UserContext","samplesFiltered","Wrapper","apiKey","googleMapsKey","render","SamplesMap","lineage","biome","toDateString","Box","ExtLink","biosample","useURLAccession","useMGnifyData","Loading","FetchError","EMGTable","prototype","hasOwnProperty","object","objValue","call","eq","path","customizer","isObject","index","lastIndex","nested","newValue","getPrototypeOf","getOwnPropertySymbols","result","stubArray","push","isProto","isArrayLike","predicate","props","prop","paths","sampleAccession","existenceData","studiesWithAnnotations","keys","study_has_annotations","anyMetadata","query_possible","backgroundColor","sampleData","Overview","Tabs","RouteForHash","KeyValueList","ENA_VIEW_URL","IMG_URL","NCBI_ASSEMBLY_URL","NCBI_SAMPLE_URL","NCBI_PROJECT_URL","PATRIC_URL","func","e"],"sourceRoot":""}