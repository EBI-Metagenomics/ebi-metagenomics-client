{"version":3,"file":"js/627.9edd318a.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./node_modules/cookie/index.js","webpack://mgportalv2/./src/components/UI/FetchError/index.tsx","webpack://mgportalv2/./src/components/UI/GlobalOverlayedContent/index.tsx","webpack://mgportalv2/./node_modules/universal-cookie/es6/utils.js","webpack://mgportalv2/./node_modules/universal-cookie/es6/Cookies.js","webpack://mgportalv2/./node_modules/universal-cookie/es6/index.js","webpack://mgportalv2/./src/pages/Submit/index.tsx","webpack://mgportalv2/./src/hooks/data/useMgnifyEmail/index.tsx"],"sourcesContent":["/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","import React from 'react';\nimport { ErrorFromFetch, ErrorTypes } from 'hooks/data/useData';\n\nconst refreshPage = (): void => {\n  window.location.reload();\n};\n\nconst FetchError: React.FC<{ error: ErrorFromFetch }> = ({ error }) => {\n  if (!error || error.type === ErrorTypes.NullURL) return null;\n  return (\n    <div\n      className=\"vf-box vf-box-theme--primary vf-box--easy\"\n      style={{\n        backgroundColor: 'lemonchiffon',\n      }}\n    >\n      <h3 className=\"vf-box__heading\">\n        <span className=\"icon icon-common icon-exclamation-triangle\" /> Error\n        Fetching Data\n      </h3>\n      <p className=\"vf-box__text\">\n        {error?.type === ErrorTypes.FetchError &&\n          `There were problems with the request. [${error.error}]`}\n        {error?.type === ErrorTypes.NotOK &&\n          `The response from the server was not OK [Status: ${error.status}].`}\n        {error?.type === ErrorTypes.JSONError &&\n          `The recovered resource didn't follow the expected format [${error.error}].`}\n      </p>\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--tertiary vf-button--sm \"\n          onClick={refreshPage}\n        >\n          Refresh\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FetchError;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React from 'react';\nimport './style.css';\n\ntype OverlayedProps = {\n  show: boolean;\n  setShowModal: (boolean) => void;\n};\n\nconst OverlayedContent: React.FC<OverlayedProps> = ({\n  show,\n  setShowModal,\n  children,\n}) => {\n  const close = (): void => setShowModal(false);\n  return (\n    <>\n      <div\n        role=\"dialog\"\n        className={show ? 'mg-overlay' : undefined}\n        onClick={close}\n      />\n      {show && (\n        <button\n          type=\"button\"\n          onClick={close}\n          className=\"vf-button vf-button--link mg-button-as-link mg-overlay-close\"\n        >\n          X\n        </button>\n      )}\n      {show && <div className=\"mg-overlay-content\">{children}</div>}\n    </>\n  );\n};\n\nexport default OverlayedContent;\n","import * as cookie from 'cookie';\r\nexport function hasDocumentCookie() {\r\n    // Can we get/set cookies on document.cookie?\r\n    return typeof document === 'object' && typeof document.cookie === 'string';\r\n}\r\nexport function cleanCookies() {\r\n    document.cookie.split(';').forEach(function (c) {\r\n        document.cookie = c\r\n            .replace(/^ +/, '')\r\n            .replace(/=.*/, '=;expires=' + new Date().toUTCString() + ';path=/');\r\n    });\r\n}\r\nexport function parseCookies(cookies, options) {\r\n    if (typeof cookies === 'string') {\r\n        return cookie.parse(cookies, options);\r\n    }\r\n    else if (typeof cookies === 'object' && cookies !== null) {\r\n        return cookies;\r\n    }\r\n    else {\r\n        return {};\r\n    }\r\n}\r\nexport function isParsingCookie(value, doNotParse) {\r\n    if (typeof doNotParse === 'undefined') {\r\n        // We guess if the cookie start with { or [, it has been serialized\r\n        doNotParse =\r\n            !value || (value[0] !== '{' && value[0] !== '[' && value[0] !== '\"');\r\n    }\r\n    return !doNotParse;\r\n}\r\nexport function readCookie(value, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var cleanValue = cleanupCookieValue(value);\r\n    if (isParsingCookie(cleanValue, options.doNotParse)) {\r\n        try {\r\n            return JSON.parse(cleanValue);\r\n        }\r\n        catch (e) {\r\n            // At least we tried\r\n        }\r\n    }\r\n    // Ignore clean value if we failed the deserialization\r\n    // It is not relevant anymore to trim those values\r\n    return value;\r\n}\r\nfunction cleanupCookieValue(value) {\r\n    // express prepend j: before serializing a cookie\r\n    if (value && value[0] === 'j' && value[1] === ':') {\r\n        return value.substr(2);\r\n    }\r\n    return value;\r\n}\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport * as cookie from 'cookie';\r\nimport { hasDocumentCookie, parseCookies, readCookie } from './utils';\r\nvar Cookies = /** @class */ (function () {\r\n    function Cookies(cookies, options) {\r\n        var _this = this;\r\n        this.changeListeners = [];\r\n        this.HAS_DOCUMENT_COOKIE = false;\r\n        this.cookies = parseCookies(cookies, options);\r\n        new Promise(function () {\r\n            _this.HAS_DOCUMENT_COOKIE = hasDocumentCookie();\r\n        }).catch(function () { });\r\n    }\r\n    Cookies.prototype._updateBrowserValues = function (parseOptions) {\r\n        if (!this.HAS_DOCUMENT_COOKIE) {\r\n            return;\r\n        }\r\n        this.cookies = cookie.parse(document.cookie, parseOptions);\r\n    };\r\n    Cookies.prototype._emitChange = function (params) {\r\n        for (var i = 0; i < this.changeListeners.length; ++i) {\r\n            this.changeListeners[i](params);\r\n        }\r\n    };\r\n    Cookies.prototype.get = function (name, options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        return readCookie(this.cookies[name], options);\r\n    };\r\n    Cookies.prototype.getAll = function (options, parseOptions) {\r\n        if (options === void 0) { options = {}; }\r\n        this._updateBrowserValues(parseOptions);\r\n        var result = {};\r\n        for (var name_1 in this.cookies) {\r\n            result[name_1] = readCookie(this.cookies[name_1], options);\r\n        }\r\n        return result;\r\n    };\r\n    Cookies.prototype.set = function (name, value, options) {\r\n        var _a;\r\n        if (typeof value === 'object') {\r\n            value = JSON.stringify(value);\r\n        }\r\n        this.cookies = __assign(__assign({}, this.cookies), (_a = {}, _a[name] = value, _a));\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, value, options);\r\n        }\r\n        this._emitChange({ name: name, value: value, options: options });\r\n    };\r\n    Cookies.prototype.remove = function (name, options) {\r\n        var finalOptions = (options = __assign(__assign({}, options), { expires: new Date(1970, 1, 1, 0, 0, 1), maxAge: 0 }));\r\n        this.cookies = __assign({}, this.cookies);\r\n        delete this.cookies[name];\r\n        if (this.HAS_DOCUMENT_COOKIE) {\r\n            document.cookie = cookie.serialize(name, '', finalOptions);\r\n        }\r\n        this._emitChange({ name: name, value: undefined, options: options });\r\n    };\r\n    Cookies.prototype.addChangeListener = function (callback) {\r\n        this.changeListeners.push(callback);\r\n    };\r\n    Cookies.prototype.removeChangeListener = function (callback) {\r\n        var idx = this.changeListeners.indexOf(callback);\r\n        if (idx >= 0) {\r\n            this.changeListeners.splice(idx, 1);\r\n        }\r\n    };\r\n    return Cookies;\r\n}());\r\nexport default Cookies;\r\n","import Cookies from './Cookies';\r\nexport default Cookies;\r\n","import React, { useState, useContext, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport GlobalOverlayedContent from 'components/UI/GlobalOverlayedContent';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport ExtLink from 'components/UI/ExtLink';\nimport UserContext, { getEmailsFromDetails } from 'pages/Login/UserContext';\nimport useMgnifyEmail from 'hooks/data/useMgnifyEmail';\n\nimport processImg from 'images/submission_process.svg';\n\nconst SubmitPage: React.FC = () => {\n  const consentCheckboxRef = useRef(null);\n  const { username, isAuthenticated, details } = useContext(UserContext);\n  const [hasGivenConsent, setGivenConsent] = useState(false);\n  const [error, setError] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [email, setEmail] = useState({\n    fromEmail: null,\n    subject: null,\n    body: null,\n    consent: null,\n  });\n  const {\n    data,\n    loading,\n    error: errorEmail,\n  } = useMgnifyEmail(email.fromEmail, email.subject, email.body, email.consent);\n  useEffect(() => {\n    if (!loading && data && !errorEmail) {\n      setGivenConsent(true);\n    }\n  }, [data, loading, errorEmail]);\n\n  const handleConsentClick = (): void => {\n    if (!consentCheckboxRef.current.checked) {\n      setError(true);\n    } else {\n      setError(false);\n      setEmail({\n        fromEmail: getEmailsFromDetails(details).join(','),\n        subject: 'Request consent',\n        body: `I consent for the MGnify team to analyse the private data of my account ${username}`,\n        consent: true,\n      });\n    }\n  };\n  return (\n    <section className=\"vf-content\">\n      <GlobalOverlayedContent show={showModal} setShowModal={setShowModal}>\n        <img\n          src={processImg}\n          alt=\"MGnify Submission Process\"\n          style={{ height: '80vh' }}\n        />\n      </GlobalOverlayedContent>\n      <h2>Submit data</h2>\n      <p>\n        We provide a free service for submission of raw metagenomics sequence\n        data and associated metadata to the European Nucleotide Archive (ENA)\n        and analysis by MGnify.\n      </p>\n      <p>\n        If you have data that you wish to have analysed, you need an ENA\n        submitter account that has been registered with the MGnify. This allows\n        us to track your submitted data and ensures that we have consent to\n        access it for analysis.\n      </p>\n      <p>\n        With a valid ENA submitter account, you can submit your data directly\n        using the{' '}\n        <ExtLink href=\"https://www.ebi.ac.uk/ena/submit/sra/#home\">\n          ENA Webin tool\n        </ExtLink>\n        , which will help you describe your metadata and upload your sequence\n        data.\n      </p>\n      <p>\n        Once your reads are uploaded to ENA, navigate to the home page, click\n        &apos;Submit and/or Request&apos; and complete the form to request an\n        analysis with MGnify. You will receive an email once the analysis starts\n        and another when the analysis of all samples is complete (\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--link mg-button-as-link\"\n          onClick={() => setShowModal(true)}\n        >\n          View figure for more details\n        </button>{' '}\n        of the submission and analysis process). The analysis time is dependent\n        on the number of samples submitted and requests by other submitters at\n        the time. If your samples are private, you will need to log in to MGnify\n        to be able to view the results of the analysis.\n      </p>\n      {!isAuthenticated && (\n        <Link to=\"/login\" className=\"vf-button vf-button--primary\">\n          Please click here to login\n        </Link>\n      )}\n      {isAuthenticated && !hasGivenConsent && (\n        <div id=\"consent\">\n          <br />\n          <h4>\n            Your Webin account is currently not registered with MGnify. You have\n            the choice to register with us now.\n          </h4>\n          <p>\n            Note, if you plan to submit pre-publication data for analysis, which\n            is to be held as confidential, we need consent to access your data\n            in accordance with ENA’s policies. By keeping this box checked, you\n            consent to the MGnify team analysing your private data. Note that\n            the data, as well as the analysis results, will remain confidential\n            until the release date you specify when submitting your sequencing\n            study. If you are also requesting assembly of your data, you will\n            also be providing consent to MGnify to submit these assemblies to\n            your ENA study on your behalf. MGnify will not change any metadata\n            or data you have already submitted but may need to perform updates\n            to submissions performed by their team in exceptional circumstances.\n            You also confirm that the data submitted through this account is NOT\n            sensitive, restricted-access or human-identifiable.\n          </p>\n          <label\n            className=\"vf-box vf-box-theme--quinary vf-box--normal\"\n            style={{\n              border: error ? '1px solid red' : 0,\n            }}\n          >\n            {' '}\n            <input\n              id=\"consent-given\"\n              type=\"checkbox\"\n              ref={consentCheckboxRef}\n            />\n            I give consent for the MGnify team to analyse my private data and\n            confirm that the data submitted through this account is NOT\n            sensitive, restricted-access or human-identifiable.\n          </label>\n          {error && <p>*Please check the box above.</p>}\n          <p className=\"vf-box vf-box--easy\">\n            The following email addresses will be notified of the registration\n            of <code>{username}</code>:{' '}\n            {details ? (\n              getEmailsFromDetails(details).map((mail) => (\n                <React.Fragment key={mail}>\n                  <code>{mail}</code>{' '}\n                </React.Fragment>\n              ))\n            ) : (\n              <Loading size=\"small\" />\n            )}\n          </p>\n          <p>\n            <button\n              type=\"button\"\n              className=\"vf-button vf-button--primary\"\n              onClick={handleConsentClick}\n            >\n              Give consent\n            </button>\n          </p>\n          {loading && <Loading />}\n          {errorEmail && <FetchError error={errorEmail} />}\n        </div>\n      )}\n      {isAuthenticated && hasGivenConsent && (\n        <>\n          <div id=\"action\">\n            <a\n              id=\"submit\"\n              href=\"https://www.ebi.ac.uk/ena/submit/sra/#home\"\n              className=\"vf-button vf-button--primary\"\n            >\n              Click here to submit data\n            </a>\n          </div>\n          <p className=\"vf-box vf-box--easy\">\n            Successfully requested consent to analyse user data. Click{' '}\n            <Link to=\"/\">here</Link> to return to the home page.\n          </p>\n        </>\n      )}\n      {error && (\n        <p className=\"center hidden error\" id=\"consent-request-error\">\n          Failed to send request, please try again or contact our helpdesk.\n        </p>\n      )}\n    </section>\n  );\n};\n\nexport default SubmitPage;\n","import Cookies from 'universal-cookie';\nimport { useContext } from 'react';\n\nimport useData, { HTMLDataResponse, ResponseFormat } from 'hooks/data/useData';\nimport UserContext from 'pages/Login/UserContext';\n\nconst useMgnifyEmail: (\n  fromEmail: string,\n  subject: string,\n  body: string,\n  consent: boolean,\n  cc?: string\n) => HTMLDataResponse = (fromEmail, subject, body, consent, cc = '') => {\n  const { config } = useContext(UserContext);\n  const cookies = new Cookies();\n\n  const data = useData(\n    fromEmail ? `${config.api}utils/notify` : null,\n    ResponseFormat.HTML,\n    {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': cookies.get('csrftoken'),\n        'Content-Type': 'application/vnd.api+json',\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        data: {\n          type: 'notifies',\n          attributes: {\n            from_email: fromEmail,\n            cc,\n            subject,\n            message: body,\n            is_consent: consent || false,\n          },\n        },\n      }),\n    }\n  );\n  return data as HTMLDataResponse;\n};\n\nexport default useMgnifyEmail;\n"],"names":["exports","str","options","TypeError","obj","opt","pairs","split","pairSplitRegExp","dec","decode","i","length","pair","eq_idx","indexOf","key","substr","trim","val","slice","undefined","tryDecode","name","enc","encode","fieldContentRegExp","test","value","maxAge","isNaN","Error","Math","floor","domain","path","expires","toUTCString","httpOnly","secure","sameSite","toLowerCase","decodeURIComponent","encodeURIComponent","e","refreshPage","window","location","reload","error","type","className","style","backgroundColor","status","onClick","show","setShowModal","children","close","role","readCookie","cleanValue","cleanupCookieValue","doNotParse","isParsingCookie","JSON","parse","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","Cookies","cookies","_this","changeListeners","HAS_DOCUMENT_COOKIE","cookie","parseCookies","Promise","document","catch","_updateBrowserValues","parseOptions","_emitChange","params","get","getAll","result","name_1","set","_a","stringify","remove","finalOptions","Date","addChangeListener","callback","push","removeChangeListener","idx","splice","consentCheckboxRef","useRef","username","isAuthenticated","details","useContext","UserContext","hasGivenConsent","setGivenConsent","useState","setError","showModal","email","setEmail","fromEmail","subject","body","consent","data","loading","errorEmail","cc","config","useData","api","method","headers","credentials","attributes","from_email","message","is_consent","useEffect","GlobalOverlayedContent","src","alt","height","ExtLink","href","to","id","border","ref","map","mail","Loading","size","current","checked","join","FetchError"],"sourceRoot":""}