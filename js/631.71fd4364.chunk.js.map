{"version":3,"file":"js/631.71fd4364.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./node_modules/lodash-es/_unescapeHtmlChar.js","webpack://mgportalv2/./node_modules/lodash-es/_basePropertyOf.js","webpack://mgportalv2/./node_modules/lodash-es/unescape.js","webpack://mgportalv2/./src/components/Analysis/Analyses/index.tsx","webpack://mgportalv2/./src/components/UI/Box/index.tsx","webpack://mgportalv2/./src/components/UI/KeyValueList/index.tsx","webpack://mgportalv2/./src/hooks/useURLAccession/index.tsx","webpack://mgportalv2/./src/pages/Assembly/index.tsx","webpack://mgportalv2/./src/utils/urls.ts"],"sourcesContent":["import basePropertyOf from './_basePropertyOf.js';\n\n/** Used to map HTML entities to characters. */\nvar htmlUnescapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\"\n};\n\n/**\n * Used by `_.unescape` to convert HTML entities to characters.\n *\n * @private\n * @param {string} chr The matched character to unescape.\n * @returns {string} Returns the unescaped character.\n */\nvar unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\nexport default unescapeHtmlChar;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default basePropertyOf;\n","import toString from './toString.js';\nimport unescapeHtmlChar from './_unescapeHtmlChar.js';\n\n/** Used to match HTML entities and HTML characters. */\nvar reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n    reHasEscapedHtml = RegExp(reEscapedHtml.source);\n\n/**\n * The inverse of `_.escape`; this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n * their corresponding characters.\n *\n * **Note:** No other HTML entities are unescaped. To unescape additional\n * HTML entities use a third-party library like [_he_](https://mths.be/he).\n *\n * @static\n * @memberOf _\n * @since 0.6.0\n * @category String\n * @param {string} [string=''] The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('fred, barney, &amp; pebbles');\n * // => 'fred, barney, & pebbles'\n */\nfunction unescape(string) {\n  string = toString(string);\n  return (string && reHasEscapedHtml.test(string))\n    ? string.replace(reEscapedHtml, unescapeHtmlChar)\n    : string;\n}\n\nexport default unescape;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { unescape } from 'lodash-es';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList, MGnifyDatum } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { getBiomeIcon } from 'utils/biomes';\nimport useQueryParamState from 'hooks/queryParamState/useQueryParamState';\n\nconst initialPageSize = 10;\ntype AssociatedAnaysesProps = {\n  rootEndpoint: string;\n};\n\nconst AnalysesTable: React.FC<AssociatedAnaysesProps> = ({ rootEndpoint }) => {\n  const accession = useURLAccession();\n  const [analysesPage] = useQueryParamState('analyses-page', 1, Number);\n  const [analysesPageSize] = useQueryParamState(\n    'analyses-page_size',\n    initialPageSize,\n    Number\n  );\n  const [analysesOrder] = useQueryParamState('analyses-order', '');\n\n  const { data, loading, error, isStale, downloadURL } = useMGnifyData(\n    `${rootEndpoint}/${accession}/analyses`,\n    {\n      include: 'sample',\n      page: analysesPage,\n      ordering: analysesOrder,\n      page_size: analysesPageSize,\n    }\n  );\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !data) return <FetchError error={error} />;\n\n  if (!(data.data as MGnifyDatum[]).length) return null;\n\n  const samples = {};\n  (data.included || [])\n    ?.filter(({ type }) => type === 'samples')\n    .forEach((sample) => {\n      samples[sample.id as string] = {\n        description: sample.attributes['sample-desc'],\n        biome: (\n          sample.relationships as Record<string, { data: { id: string } }>\n        ).biome.data.id,\n      };\n    });\n  const columns = [\n    {\n      id: 'biome_id',\n      Header: 'Biome',\n      accessor: (analysis) =>\n        samples?.[analysis?.relationships?.sample?.data?.id]?.biome || '',\n      Cell: ({ cell }) => (\n        <span\n          className={`biome_icon icon_xs ${getBiomeIcon(cell.value)}`}\n          style={{ float: 'initial' }}\n        />\n      ),\n      className: 'mg-biome',\n    },\n    {\n      id: 'sample',\n      Header: 'Sample accession',\n      accessor: (analysis) => analysis?.relationships?.sample?.data?.id,\n      Cell: ({ cell }) => (\n        <Link to={`/samples/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'description_id',\n      Header: 'Sample description',\n      accessor: (analysis) =>\n        samples?.[analysis?.relationships?.sample?.data?.id]?.description || '',\n      Cell: ({ cell }) => unescape(cell.value),\n    },\n    {\n      id: 'assembly_run_id',\n      Header: ' Run / Assembly accession',\n      accessor: (analysis) => ({\n        assembly: analysis?.relationships?.assembly?.data?.id || '',\n        run: analysis?.relationships?.run?.data?.id || '',\n      }),\n      Cell: ({ cell }) => (\n        <>\n          {cell.value.assembly && (\n            <Link to={`/assemblies/${cell.value.assembly}`}>\n              {cell.value.assembly}\n            </Link>\n          )}\n          {cell.value.run && (\n            <Link to={`/runs/${cell.value.run}`}>{cell.value.run}</Link>\n          )}\n        </>\n      ),\n    },\n    {\n      id: 'pipeline_id',\n      Header: 'Pipeline version',\n      accessor: (analysis) => analysis.attributes['pipeline-version'],\n      Cell: ({ cell }) => (\n        <Link to={`/pipelines/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'analysis_id',\n      Header: 'Analysis accession',\n      accessor: (analysis) => analysis.id,\n      Cell: ({ cell }) => (\n        <Link to={`/analyses/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n  ];\n  const showPagination = (data.meta?.pagination?.count || 1) > initialPageSize;\n  return (\n    <EMGTable\n      cols={columns}\n      data={data as MGnifyResponseList}\n      Title={\n        <div>\n          Analyses\n          <span className=\"mg-number\">{data.meta?.pagination?.count || 1}</span>\n        </div>\n      }\n      initialPage={(analysesPage as number) - 1}\n      initialPageSize={initialPageSize}\n      className=\"mg-anlyses-table\"\n      loading={loading}\n      isStale={isStale}\n      namespace=\"analyses-\"\n      showPagination={showPagination}\n      downloadURL={downloadURL}\n    />\n  );\n};\n\nexport default AnalysesTable;\n","import React from 'react';\n\nconst Box: React.FC<{ label: string; theme?: string; dataCy?: string }> = ({\n  label,\n  theme = 'primary',\n  children,\n  dataCy,\n}) => (\n  <div className=\"vf-grid\" data-cy={dataCy}>\n    <div className={`vf-box vf-box--easy vf-box-theme--${theme}`}>\n      <h5 className=\"vf-box__heading\">{label}</h5>\n      <div className=\"vf-box__text\">{children}</div>\n    </div>\n  </div>\n);\n\nexport default Box;\n","import React from 'react';\n\ntype KeyValueProps = {\n  list: { key: string; value: string | React.ElementType }[];\n  dataCy?: string;\n};\n\nconst KeyValueList: React.FC<KeyValueProps> = ({ list, dataCy }) => (\n  <div\n    className=\"vf-grid vf-grid__col-2\"\n    style={{\n      gridTemplateColumns: '1fr 2fr',\n      rowGap: '0.5rem',\n    }}\n    data-cy={dataCy}\n  >\n    {list.map(({ key, value: Value }) => (\n      <React.Fragment key={key}>\n        <div style={{ textAlign: 'right' }} data-cy=\"kvl-key\">\n          {key}:\n        </div>\n        <div data-cy=\"kvl-value\">\n          {typeof Value === 'string' ? Value : <Value />}\n        </div>\n      </React.Fragment>\n    ))}\n  </div>\n);\n\nexport default KeyValueList;\n","import { useLocation } from 'react-router-dom';\n\nconst useURLAccession = (): string | undefined => {\n  const location = useLocation();\n  let { pathname } = location;\n  if (pathname.trim().endsWith('/')) pathname = pathname.trim().slice(0, -1);\n  const parts = pathname.split('/');\n  return parts?.[parts.length - 1];\n};\n\nexport default useURLAccession;\n","import React from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Box from 'components/UI/Box';\nimport KeyValueList from 'components/UI/KeyValueList';\nimport ExtLink from 'components/UI/ExtLink';\nimport { Link } from 'react-router-dom';\nimport AssociatedAnalyses from 'components/Analysis/Analyses';\nimport { ENA_VIEW_URL } from 'utils/urls';\n\nconst AssemblyPage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`assemblies/${accession}`);\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: assemblyData } = data as MGnifyResponseObj;\n\n  const details = [\n    {\n      key: 'Sample',\n      value: assemblyData?.relationships?.samples?.data?.length\n        ? () => (\n            <>\n              {assemblyData.relationships.samples.data.map((sample) => (\n                <Link to={`/samples/${sample.id}`} key={sample.id as string}>\n                  {sample.id}{' '}\n                </Link>\n              ))}\n            </>\n          )\n        : null,\n    },\n    {\n      key: 'Runs',\n      value: assemblyData?.relationships?.runs?.data?.length\n        ? () => (\n            <>\n              {assemblyData.relationships.runs.data.map((run) => (\n                <Link to={`/runs/${run.id}`} key={run.id as string}>\n                  {run.id}{' '}\n                </Link>\n              ))}\n            </>\n          )\n        : null,\n    },\n    {\n      key: 'ENA accession',\n      value: () => (\n        <ExtLink href={`${ENA_VIEW_URL}${assemblyData?.id}`}>\n          {assemblyData?.id}\n        </ExtLink>\n      ),\n    },\n    {\n      key: 'Legacy accession',\n      value: assemblyData.attributes['legacy-accession'] as string,\n    },\n  ].filter(({ value }) => Boolean(value));\n  return (\n    <section className=\"vf-content\">\n      <h2>Assembly: {assemblyData?.id || ''}</h2>\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <Box label=\"Description\">\n            <KeyValueList list={details} />\n          </Box>\n          <Box label=\"Associated analyses\">\n            <AssociatedAnalyses rootEndpoint=\"assemblies\" />\n          </Box>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default AssemblyPage;\n","export const ENA_VIEW_URL = 'https://www.ebi.ac.uk/ena/browser/view/';\nexport const IMG_URL =\n  ' https://img.jgi.doe.gov/cgi-bin/m/main.cgi?section=TaxonDetail&page=taxonDetail&taxon_oid=';\nexport const NCBI_ASSEMBLY_URL = 'https://www.ncbi.nlm.nih.gov/assembly/';\nexport const NCBI_SAMPLE_URL = 'https://www.ncbi.nlm.nih.gov/biosample/?term=';\nexport const NCBI_PROJECT_URL = 'https://www.ncbi.nlm.nih.gov/bioproject/';\nexport const PATRIC_URL = 'https://www.patricbrc.org/view/Genome/';\n"],"names":["object","key","undefined","reEscapedHtml","reHasEscapedHtml","RegExp","source","rootEndpoint","accession","useURLAccession","analysesPage","useQueryParamState","Number","analysesPageSize","analysesOrder","data","loading","error","isStale","downloadURL","useMGnifyData","include","page","ordering","page_size","Loading","size","FetchError","length","samples","included","filter","type","forEach","sample","id","description","attributes","biome","relationships","columns","Header","accessor","analysis","Cell","cell","className","value","style","float","to","string","test","replace","assembly","run","showPagination","meta","pagination","count","EMGTable","cols","Title","initialPage","initialPageSize","namespace","label","theme","children","dataCy","list","gridTemplateColumns","rowGap","map","Value","textAlign","location","pathname","trim","endsWith","slice","parts","split","assemblyData","details","runs","href","Boolean","ENA_VIEW_URL","IMG_URL","NCBI_ASSEMBLY_URL","NCBI_SAMPLE_URL","NCBI_PROJECT_URL","PATRIC_URL"],"sourceRoot":""}