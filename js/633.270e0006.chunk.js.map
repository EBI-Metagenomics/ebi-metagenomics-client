{"version":3,"file":"js/633.270e0006.chunk.js","mappings":"kMAOA,MAwDA,EAxDgC,KAC9B,MAAOA,EAASC,IAAc,IAAAC,WAAS,GACjCC,GAAY,UACZ,OAAEC,IAAW,IAAAC,YAAW,KAExBC,EAAS,CACb,CACEC,KAAM,oBAENC,IAAK,GAAGJ,EAAOK,cAAcN,eAAuBA,QACpDO,OAAQ,OACRC,MAAO,wBACPC,YAAa,WACbC,gBAAiB,CACf,CAAC,UAAW,IACZ,CAAC,MAAO,OACR,CAAC,UAAW,WACZ,CAAC,OAAQ,QACT,CAAC,OAAQ,QACT,CAAC,WAAY,YACb,CAAC,SAAU,aAIXC,EAAU,CACdC,sBAAsB,EACtBC,sBAAsB,EACtBC,iBAAiB,EACjBC,iBAAiB,EACjBC,oBAAoB,EACpBC,UAAW,CACTC,SAAU,GAAGjB,EAAOK,cAAcN,eAAuBA,QACzDmB,SAAU,GAAGlB,EAAOK,cAAcN,eAAuBA,aAE3DG,OAAAA,EACAiB,YAAY,EACZC,aAAc,mBAEVC,GAAS,IAAAC,QAAO,MAUtB,OATA,IAAAC,YAAU,KACR,kBAAkBF,EAAOG,QAASd,GAASe,MAAMC,IAC/C7B,GAAW,QAMZ,IAED,uBAAK8B,GAAG,kBACL/B,GAAW,gBAAC,IAAO,CAACgC,KAAK,UAC1B,uBAAKC,UAAU,2BAA2BC,IAAKT","sources":["webpack://mgportalv2/./src/components/Genomes/Browser/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useContext } from 'react';\nimport igv from 'igv';\n\nimport UserContext from 'pages/Login/UserContext';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\n\nconst GenomeBrowser: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const accession = useURLAccession();\n  const { config } = useContext(UserContext);\n\n  const tracks = [\n    {\n      type: 'mgnify-annotation',\n      // name: downloadsModel.get('name'),\n      url: `${config.api}genomes/${accession}/downloads/${accession}.gff`,\n      format: 'gff3',\n      label: 'Functional annotation',\n      displayMode: 'EXPANDED',\n      colorAttributes: [\n        ['Default', ''],\n        ['COG', 'COG'],\n        ['Product', 'product'],\n        ['Pfam', 'Pfam'],\n        ['KEGG', 'KEGG'],\n        ['InterPro', 'InterPro'],\n        ['eggNOG', 'eggNOG'],\n      ],\n    },\n  ];\n  const options = {\n    showChromosomeWidget: false,\n    showTrackLabelButton: true,\n    showTrackLabels: true,\n    showCenterGuide: false,\n    showAllChromosomes: true,\n    reference: {\n      fastaURL: `${config.api}genomes/${accession}/downloads/${accession}.fna`,\n      indexURL: `${config.api}genomes/${accession}/downloads/${accession}.fna.fai`,\n    },\n    tracks,\n    showLegend: true,\n    legendParent: '#genome-browser',\n  };\n  const divRef = useRef(null);\n  useEffect(() => {\n    igv.createBrowser(divRef.current, options).then((browser) => {\n      setLoading(false);\n      // browser.on('trackclick', (ignored, data) => {\n      //     return igvPopup(data);\n      // });\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div id=\"genome-browser\">\n      {loading && <Loading size=\"large\" />}\n      <div className=\"genome-browser-container\" ref={divRef} />\n    </div>\n  );\n};\n\nexport default GenomeBrowser;\n"],"names":["loading","setLoading","useState","accession","config","useContext","tracks","type","url","api","format","label","displayMode","colorAttributes","options","showChromosomeWidget","showTrackLabelButton","showTrackLabels","showCenterGuide","showAllChromosomes","reference","fastaURL","indexURL","showLegend","legendParent","divRef","useRef","useEffect","current","then","browser","id","size","className","ref"],"sourceRoot":""}