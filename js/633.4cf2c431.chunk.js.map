{"version":3,"file":"js/633.4cf2c431.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/Genomes/Browser/Popup/index.tsx","webpack://mgportalv2/./src/components/Genomes/Browser/index.tsx","webpack://mgportalv2/./src/components/Analysis/ContigViewer/mgnifyColours.tsx","webpack://mgportalv2/./src/components/IGV/TrackColourPicker/index.tsx"],"sourcesContent":["import React from 'react';\nimport ExtLink from 'components/UI/ExtLink';\nimport './style.css';\n\ntype PropertyDataType = { name: string; value: string | number };\ntype GenomeBrowserPopupProps = {\n  data: PropertyDataType[];\n  hasMetaProteomics: boolean;\n};\ntype FormattedData = {\n  name?: string;\n  gene?: string;\n  product?: string;\n  properties: {\n    title: string;\n    data: {\n      name?: string;\n      Value?: string | React.ElementType;\n    }[];\n  }[];\n};\n\nconst antiSMASHLabels = {\n  biosynthetic: 'Core biosynthetic gene',\n  'biosynthetic-additional': 'Additional biosynthetic gene',\n  regulatory: 'Regulatory genes',\n  transport: 'Transport-related gene',\n  resistance: 'Resistance genes',\n};\n\nconst MultipleField: React.FC<{\n  value: string;\n  url?: string;\n  decodeValue?: boolean;\n}> = ({ value, url, decodeValue }) => {\n  if (!value) return null;\n  const parts = value.split(',');\n  return (\n    <ul className=\"vf-list\">\n      {parts.map((part) => {\n        const text = decodeValue ? decodeURIComponent(part) : part;\n        return (\n          <li key={part} className=\"igv-popup-multiple-field-item\">\n            {url ? <ExtLink href={`${url}${part}`}>{text}</ExtLink> : text}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nconst getAnnotationLoc = (attributes: {\n  location?: string;\n}): { start: number; end: number } => {\n  if (attributes.location) {\n    const startEnd = attributes.location.split(':')[1];\n    return {\n      start: parseInt(startEnd.split('-')[0].replaceAll(',', ''), 10),\n      end: parseInt(startEnd.split('-')[1].replaceAll(',', ''), 10),\n    };\n  }\n  return undefined;\n};\n\n/**\n * Calculate the property length.\n * @return {int} the length or undefined\n */\nconst getProteinOrSequenceLength = (attributes: {\n  location?: string;\n  type?: string;\n}): number => {\n  if (!attributes.location || !attributes.type) return undefined;\n  const { start, end } = getAnnotationLoc(attributes);\n  if (\n    Number.isNaN(start) ||\n    Number.isNaN(end) ||\n    start === null ||\n    end === null\n  ) {\n    return undefined;\n  }\n  if (attributes.type === 'CDS') {\n    return Math.ceil((end - start) / 3);\n  }\n  return end - start;\n};\n\nconst formatData = (\n  rawData: PropertyDataType[],\n  withMetaProteomics: boolean\n): FormattedData => {\n  const attributes: {\n    [name: string]: string | null;\n  } = rawData.reduce((memo, el) => {\n    if (el.name)\n      // eslint-disable-next-line no-param-reassign\n      memo[el.name.toLowerCase().replaceAll(':', '')] =\n        el.value === null ? null : String(el.value);\n    return memo;\n  }, {});\n\n  const functionalData = {\n    title: 'Functional annotation',\n    data: [\n      {\n        name: 'E.C Number',\n        Value:\n          attributes.ecnumber &&\n          (() => (\n            <MultipleField\n              value={attributes.ecnumber}\n              url=\"https://enzyme.expasy.org/EC/\"\n            />\n          )),\n      },\n      {\n        name: 'Pfam',\n        Value:\n          attributes.pfam &&\n          (() => (\n            <MultipleField\n              value={attributes.pfam}\n              url=\"https://www.ebi.ac.uk/interpro/entry/pfam/\"\n            />\n          )),\n      },\n      {\n        name: 'KEGG',\n        Value:\n          attributes.kegg &&\n          (() => (\n            <MultipleField\n              value={attributes.kegg}\n              url=\"https://www.genome.jp/dbget-bin/www_bget?\"\n            />\n          )),\n      },\n      {\n        name: 'eggNOG',\n        Value: attributes.eggnog && decodeURIComponent(attributes.eggnog),\n      },\n      {\n        name: 'COG',\n        Value:\n          attributes.cog && (() => <MultipleField value={attributes.cog} />),\n      },\n      {\n        name: 'GO',\n        Value:\n          attributes.go &&\n          (() => (\n            <MultipleField\n              value={attributes.go}\n              url=\"https://www.ebi.ac.uk/ols/search?q=\"\n            />\n          )),\n      },\n      {\n        name: 'InterPro',\n        Value:\n          attributes.interpro &&\n          (() => (\n            <MultipleField\n              value={attributes.interpro}\n              url=\"https://www.ebi.ac.uk/interpro/entry/InterPro/'\"\n            />\n          )),\n      },\n      {\n        // antiSMASH\n        name: 'Gene type',\n        Value:\n          attributes.as_type &&\n          (antiSMASHLabels[attributes.as_type] || attributes.as_type),\n      },\n      {\n        name: 'ViPhOG',\n        Value:\n          attributes.viphog &&\n          (() => (\n            <ExtLink href=\"https://osf.io/2zd9r/\">\n              {attributes.viphog} ({attributes.viphog_taxonomy})\n            </ExtLink>\n          )),\n      },\n      {\n        // Notes are URL encoded during the GFF generation\n        name: 'Notes',\n        Value:\n          attributes.as_notes &&\n          (() => (\n            <MultipleField value={decodeURIComponent(attributes.as_notes)} />\n          )),\n      },\n      {\n        name: 'Cluster',\n        Value:\n          attributes.as_gene_clusters &&\n          (() => <MultipleField value={attributes.as_gene_clusters} />),\n      },\n    ],\n  };\n  const { start, end } = getAnnotationLoc(attributes);\n  const isProtein = attributes.type === 'CDS';\n  const otherData = {\n    title: 'Feature details',\n    data: [\n      {\n        name: 'Type',\n        Value: attributes.type,\n      },\n      {\n        name: 'Inference',\n        Value: attributes.inference,\n      },\n      {\n        name: 'Start / End',\n        Value: `${start} / ${end}`,\n      },\n      {\n        name: isProtein ? 'Protein length' : 'Sequence length',\n        Value: String(getProteinOrSequenceLength(attributes)),\n      },\n    ],\n  };\n\n  const metaproteomicData = {\n    title: 'Metaproteomics',\n    data: [\n      {\n        name: 'PRIDE Dataset',\n        Value:\n          attributes.pride_id &&\n          (() => (\n            <ExtLink\n              href={`https://www.ebi.ac.uk/pride/archive/projects/${attributes.pride_id}`}\n            >\n              {attributes.pride_id}\n            </ExtLink>\n          )),\n      },\n      {\n        name: 'Unique peptide-to-protein mapping',\n        Value:\n          attributes.unique_peptide_to_protein_mapping === 'True'\n            ? () => <div />\n            : 'None',\n      },\n      {\n        name:\n          attributes.unique_peptide_to_protein_mapping === 'True'\n            ? 'List of peptides'\n            : '',\n        Value:\n          attributes.unique_peptide_to_protein_mapping === 'True'\n            ? () => <MultipleField value={attributes.unambiguous_sequences} />\n            : () => <div />,\n      },\n      {\n        name: 'Ambiguous peptide-to-protein mapping',\n        Value:\n          attributes.ambiguous_peptide_to_protein_mapping === 'True'\n            ? () => <div />\n            : 'None',\n      },\n      {\n        name:\n          attributes.ambiguous_peptide_to_protein_mapping === 'True'\n            ? 'List of peptides'\n            : '',\n        Value:\n          attributes.ambiguous_peptide_to_protein_mapping === 'True'\n            ? () => <MultipleField value={attributes.ambiguous_sequences} />\n            : () => <div />,\n      },\n      {\n        name: 'Semi-quantitative expression spectrum count',\n        Value: attributes.semiquantitative_expression_spectrum_count,\n      },\n    ],\n  };\n\n  const properties = [functionalData, otherData];\n  if (withMetaProteomics) {\n    properties.push(metaproteomicData);\n  }\n\n  return {\n    name: attributes.id,\n    gene: attributes.gene,\n    product: attributes.product,\n    properties,\n  };\n};\n\nconst GenomeBrowserPopup: React.FC<GenomeBrowserPopupProps> = ({\n  data,\n  hasMetaProteomics,\n}) => {\n  const { name, gene, product, properties } = formatData(\n    data,\n    hasMetaProteomics\n  );\n  return (\n    <>\n      <table className=\"stack hover igv-popover-table\">\n        <caption className=\"igv-popover-section-header\">Feature</caption>\n        <tbody>\n          {name && (\n            <tr>\n              <td className=\"igv-popover-table-td-name\">ID</td>\n              <td>{name}</td>\n            </tr>\n          )}\n          {gene && (\n            <tr>\n              <td className=\"igv-popover-table-td-name\">Gene</td>\n              <td>\n                <em>{gene}</em>\n              </td>\n            </tr>\n          )}\n          {product && (\n            <tr>\n              <td className=\"igv-popover-table-td-name\">Product</td>\n              <td>{product}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      {properties.map((property) => (\n        <table className=\"stack hover igv-popover-table\" key={property.title}>\n          {property.data.filter((d) => !!d.Value).length > 0 && (\n            <caption className=\"igv-popover-section-header\">\n              {property.title}\n            </caption>\n          )}\n          <tbody>\n            {property.data\n              .map(\n                ({ name: pName, Value }) =>\n                  Value && (\n                    <tr key={pName}>\n                      <td className=\"igv-popover-table-td-name\">{pName}</td>\n                      <td>{typeof Value === 'string' ? Value : <Value />}</td>\n                    </tr>\n                  )\n              )\n              .filter(Boolean)}\n          </tbody>\n        </table>\n      ))}\n    </>\n  );\n};\n\nexport default GenomeBrowserPopup;\n","import React, { useEffect, useState, useContext, useCallback } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport igv from 'igv';\n\nimport UserContext from 'pages/Login/UserContext';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport {\n  AnnotationTrackColorPicker,\n  annotationTrackCustomisations,\n} from 'components/IGV/TrackColourPicker';\nimport GenomeBrowserPopup from './Popup';\n\nconst GenomeBrowser: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const accession = useURLAccession();\n  const { config } = useContext(UserContext);\n  const [igvBrowser, setIgvBrowser] = useState(null);\n  const [trackColorBys, setTrackColorBys] = useState({});\n\n  const igvContainer = useCallback(\n    (node) => {\n      const options = {\n        showChromosomeWidget: true,\n        showTrackLabelButton: true,\n        showTrackLabels: true,\n        showCenterGuide: false,\n        reference: {\n          indexURL: `${config.api}genomes/${accession}/downloads/${accession}.fna.fai`,\n          fastaURL: `${config.api}genomes/${accession}/downloads/${accession}.fna`,\n        },\n        tracks: [\n          {\n            name: 'Functional annotation',\n            type: 'annotation',\n            format: 'gff3',\n            url: `${config.api}genomes/${accession}/downloads/${accession}.gff`,\n            displayMode: 'EXPANDED',\n            label: 'Functional annotation',\n          },\n        ],\n        showLegend: true,\n        legendParent: '#contig',\n      };\n\n      if (node === null) return;\n      igv.createBrowser(node, options).then((browser) => {\n        browser.on('trackclick', (track, trackData) =>\n          ReactDOMServer.renderToString(\n            <GenomeBrowserPopup data={trackData} hasMetaProteomics={false} />\n          )\n        );\n\n        setIgvBrowser(browser);\n        setLoading(false);\n      });\n    },\n    [config.api, accession]\n  );\n\n  useEffect(() => {\n    const tracksToRemove = [];\n    const tracksToAdd = [];\n    igvBrowser?.trackViews?.forEach((trackView) => {\n      if (trackView.track.type !== 'annotation') return;\n      const colorBy = trackColorBys[trackView.track.id];\n      if (colorBy) {\n        const newTrackConfig = {\n          ...trackView.track.config,\n          ...annotationTrackCustomisations(colorBy.value),\n        };\n        if (newTrackConfig.nameField !== trackView.track.config.nameField) {\n          // Prevent unnecessary track reloads\n          tracksToRemove.push(trackView.track.id);\n          tracksToAdd.push(newTrackConfig);\n        }\n      }\n    });\n    tracksToRemove.forEach((track) => igvBrowser.removeTrackByName(track));\n    tracksToAdd.forEach((track) => igvBrowser.loadTrack(track));\n  }, [trackColorBys, igvBrowser]);\n\n  return (\n    <div id=\"genome-browser\">\n      {loading && <Loading size=\"large\" />}\n      <div className=\"genome-browser-container\" ref={igvContainer} />\n      <div className=\"vf-grid vf-grid__col-3\">\n        {igvBrowser?.trackViews?.map((trackView) => {\n          const trackId = trackView.track.id;\n          if (trackView.track.type !== 'annotation') return React.Fragment;\n          return (\n            <AnnotationTrackColorPicker\n              key={trackView.track.id}\n              trackView={trackView}\n              trackColorBys={trackColorBys}\n              onChange={(option, action) => {\n                if (action.action === 'select-option') {\n                  setTrackColorBys({\n                    ...trackColorBys,\n                    [trackId]: option,\n                  });\n                }\n              }}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default GenomeBrowser;\n","export const COG_MAP = {\n  // https://gka.github.io/palettes/#/23|s|1d4097,a8a8a8,87352f|ffaff9,908300,17439b|0|0\n  A: '#1d4097', // RNA processing and modification\n  B: '#36539a', // Chromatin Structure and dynamics\n  C: '#50669d', // Energy production and conversion\n  D: '#6979a0', // Cell cycle control and mitosis\n  E: '#828ca3', // Amino Acid metabolis and transport\n  F: '#9b9fa6', // Nucleotide metabolism and transport\n  G: '#a59e9d', // Carbohydrate metabolism and transport\n  H: '#9f8987', // Coenzyme metabolis\n  I: '#997471', // Lipid metabolism\n  J: '#935f5b', // Tranlsation\n  K: '#8d4a45', // Transcription\n  L: '#87352f', // Replication and repair\n  M: '#eba7cc', // Cell wall/membrane/envelop biogenesis\n  N: '#d79f9e', // Cell motility\n  O: '#c29771', // Post-translational modification, protein turnover, chaperone functions\n  P: '#ae8f44', // Inorganic ion transport and metabolism\n  Q: '#9a8717', // Secondary Structure\n  T: '#937a03', // Signal Transduction\n  U: '#9a690a', // Intracellular trafficing and secretion\n  Y: '#a15711', // Nuclear structure\n  Z: '#a84617', // Cytoskeleton\n  S: '#af341e', // Function Unknown\n  R: '#b62325', // General Functional Prediction only\n};\n\nconst ANTISMASH_MAP_GK = {\n  biosynthetic: '#810e15',\n  'biosynthetic-additional': '#f16d75',\n  transport: '#6495ED',\n  regulatory: '#2E8B57',\n  resis: '#ed90ed',\n  other: '#BEBEBE',\n};\n\n/**\n * Get the colour for the COG cateogry.\n * If the category is not mapped then use the R, this also\n * applies if the suplied category is not found (for example: multiles COG categories)\n */\nexport function getCOGColour(cog) {\n  return COG_MAP[cog] || COG_MAP.R;\n}\n\n/**\n * Get the colour for the antiSMASH gene_kind.\n */\nexport function getAntiSMASHColour(kind) {\n  return ANTISMASH_MAP_GK[kind] || ANTISMASH_MAP_GK.other;\n}\n\nexport const COLOUR_PRESENCE = '#d32f2f';\nexport const COLOUR_ABSENCE = '#a9abaa';\n","import React from 'react';\nimport Select from 'react-select';\nimport {\n  COLOUR_ABSENCE,\n  COLOUR_PRESENCE,\n  getAntiSMASHColour,\n  getCOGColour,\n} from 'components/Analysis/ContigViewer/mgnifyColours';\n\nfunction maybeGetAttributeValue(feature, attrPossibleNames: string[]) {\n  if (!feature || !feature.getAttributeValue) return null;\n  // eslint-disable-next-line no-restricted-syntax\n  for (const [, attr] of attrPossibleNames.entries()) {\n    const featureAttrVal = feature.getAttributeValue(attr);\n    if (featureAttrVal) {\n      return featureAttrVal;\n    }\n  }\n  return null;\n}\n\nexport const annotationTrackCustomisations = (trackColorBy) => {\n  switch (trackColorBy) {\n    case 'cog':\n      return {\n        nameField: 'COG',\n        color: (feature) => {\n          const cog = maybeGetAttributeValue(feature, ['cog', 'COG']);\n          return cog ? getCOGColour(cog) : '#ddd';\n        },\n      };\n    case 'kegg':\n      return {\n        nameField: 'kegg',\n        color: (feature) =>\n          !maybeGetAttributeValue(feature, ['kegg', 'KEGG'])\n            ? COLOUR_ABSENCE\n            : COLOUR_PRESENCE,\n      };\n    case 'pfam':\n      return {\n        nameField: 'pfam',\n        color: (feature) =>\n          !maybeGetAttributeValue(feature, ['pfam', 'Pfam'])\n            ? COLOUR_ABSENCE\n            : COLOUR_PRESENCE,\n      };\n    case 'interpro':\n      return {\n        nameField: 'interpro',\n        color: (feature) =>\n          !maybeGetAttributeValue(feature, ['interpro', 'InterPro'])\n            ? COLOUR_ABSENCE\n            : COLOUR_PRESENCE,\n      };\n    case 'go':\n      return {\n        nameField: 'go',\n        color: (feature) =>\n          !maybeGetAttributeValue(feature, ['go', 'GO'])\n            ? COLOUR_ABSENCE\n            : COLOUR_PRESENCE,\n      };\n    case 'antismash':\n      return {\n        nameField: 'as_type',\n        color: (feature) => {\n          const as = maybeGetAttributeValue(feature, ['as_type']);\n          return as ? getAntiSMASHColour(as) : '#ddd';\n        },\n      };\n    case 'viphog':\n      return {\n        nameField: 'viphog',\n        color: (feature) =>\n          !maybeGetAttributeValue(feature, ['viphog', 'ViPhOG'])\n            ? COLOUR_ABSENCE\n            : COLOUR_PRESENCE,\n      };\n    default:\n      return null;\n  }\n};\ntype AnnotationTrackColorPickerProps = {\n  trackView: any;\n  trackColorBys: Record<string, { label: string; value: string }>;\n  onChange: (event, action) => void;\n};\nexport const AnnotationTrackColorPicker: React.FC<\n  AnnotationTrackColorPickerProps\n> = ({ trackView, trackColorBys, onChange }) => {\n  return (\n    <div className=\"vf-stack vf-stack--200\">\n      <label className=\"vf-form__label\" htmlFor=\"biome-select\">\n        {trackView.track.config.label} track colour\n      </label>\n      <Select\n        theme={(theme) => ({\n          ...theme,\n          borderRadius: 0,\n          border: '2px solid grey',\n        })}\n        placeholder={`Colour ${trackView.track.id} by...`}\n        value={trackColorBys[trackView.track.id]}\n        onChange={onChange}\n        name={`track-colour-${trackView.track.id}`}\n        inputId={`track-colour-${trackView.track.id}`}\n        options={[\n          { label: 'COG category', value: 'cog' },\n          { label: 'KEGG ortholog', value: 'kegg' },\n          { label: 'Pfam family existence', value: 'pfam' },\n          { label: 'InterPro existence', value: 'interpro' },\n          { label: 'GO (gene ontology) existence', value: 'go' },\n          { label: 'AntiSMASH cluster type', value: 'antismash' },\n          { label: 'ViPhOG existence', value: 'viphog' },\n        ]}\n      />\n    </div>\n  );\n};\n"],"names":["antiSMASHLabels","biosynthetic","regulatory","transport","resistance","MultipleField","value","url","decodeValue","parts","split","className","map","part","text","decodeURIComponent","key","href","getAnnotationLoc","attributes","location","startEnd","start","parseInt","replaceAll","end","getProteinOrSequenceLength","type","Number","isNaN","Math","ceil","data","hasMetaProteomics","name","gene","product","properties","rawData","withMetaProteomics","reduce","memo","el","toLowerCase","String","functionalData","title","Value","ecnumber","pfam","kegg","eggnog","cog","go","interpro","as_type","viphog","viphog_taxonomy","as_notes","as_gene_clusters","isProtein","otherData","inference","metaproteomicData","pride_id","unique_peptide_to_protein_mapping","unambiguous_sequences","ambiguous_peptide_to_protein_mapping","ambiguous_sequences","semiquantitative_expression_spectrum_count","push","id","formatData","property","filter","d","length","pName","Boolean","loading","setLoading","useState","accession","config","useContext","igvBrowser","setIgvBrowser","trackColorBys","setTrackColorBys","igvContainer","useCallback","node","options","showChromosomeWidget","showTrackLabelButton","showTrackLabels","showCenterGuide","reference","indexURL","api","fastaURL","tracks","format","displayMode","label","showLegend","legendParent","then","browser","on","track","trackData","useEffect","tracksToRemove","tracksToAdd","trackViews","forEach","trackView","colorBy","newTrackConfig","nameField","removeTrackByName","loadTrack","size","ref","trackId","onChange","option","action","COG_MAP","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","T","U","Y","Z","S","R","ANTISMASH_MAP_GK","resis","other","COLOUR_PRESENCE","COLOUR_ABSENCE","maybeGetAttributeValue","feature","attrPossibleNames","getAttributeValue","attr","entries","featureAttrVal","annotationTrackCustomisations","trackColorBy","color","getCOGColour","as","AnnotationTrackColorPicker","htmlFor","theme","borderRadius","border","placeholder","inputId"],"sourceRoot":""}