{"version":3,"file":"js/648.8d8982a5.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/UI/Accordion/index.tsx","webpack://mgportalv2/./src/components/Publications/EuropePMCAnnotations/index.tsx","webpack://mgportalv2/./src/components/Study/Studies/index.tsx","webpack://mgportalv2/./src/components/UI/Box/index.tsx","webpack://mgportalv2/./src/components/UI/KeyValueList/index.tsx","webpack://mgportalv2/./src/components/UI/TextTruncated/index.tsx","webpack://mgportalv2/./src/components/UI/Tooltip/index.tsx","webpack://mgportalv2/./src/hooks/useURLAccession/index.tsx","webpack://mgportalv2/./src/pages/Publication/index.tsx"],"sourcesContent":["import React, { ReactChild, ReactChildren, useState } from 'react';\nimport './style.css';\n\nconst AccordionElement: React.FC<{\n  title: string;\n  children: ReactChild;\n}> = ({ title, children }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  return (\n    <li\n      className={`vf-tree__item ${\n        isOpen ? 'vf-tree__item--selected | vf-tree__item--expanded' : ''\n      }`}\n    >\n      <button\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"vf-button vf-button--link vf-tree__link\"\n        type=\"button\"\n      >\n        {title}\n        <span className=\"vf-button vf-tree__button\">\n          <svg\n            aria-hidden=\"true\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              d=\"M19.5,12a2.3,2.3,0,0,1-.78,1.729L7.568,23.54a1.847,\n            1.847,0,0,1-2.439-2.773l9.752-8.579a.25.25,0,0,0,0-.376L5.129,\n            3.233A1.847,1.847,0,0,1,7.568.46l11.148,9.808A2.31,2.31,0,0,1,19.5,12Z\"\n            />\n          </svg>\n        </span>\n      </button>\n      {isOpen && children}\n    </li>\n  );\n};\n\nexport const AccordionContentPanel: React.FC<{\n  children: ReactChild | ReactChild[];\n}> = ({ children }) => {\n  return <div className=\"accordion-content-panel\">{children}</div>;\n};\n\ntype AccordionListProps = {\n  titles: string[];\n  children: ReactChild | ReactChild[] | ReactChildren | ReactChildren[];\n  nestedLevel?: number;\n};\nexport const AccordionList: React.FC<AccordionListProps> = ({\n  titles,\n  nestedLevel,\n  children,\n}) => {\n  return (\n    <ul\n      className={`vf-tree__list  vf-tree__list--${nestedLevel} ${\n        nestedLevel > 1 ? 'vf-tree__list--additional' : ''\n      } | vf-list `}\n    >\n      {titles.map((title, i) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <AccordionElement title={title} key={i}>\n          {children[i]}\n        </AccordionElement>\n      ))}\n    </ul>\n  );\n};\n\ntype AccordionProps = {\n  titles: string[];\n  children: ReactChild | ReactChild[] | ReactChildren | ReactChildren[];\n};\nconst Accordion: React.FC<AccordionProps> = ({ titles, children }) => {\n  return (\n    <div className=\"vf-tree\" aria-expanded=\"true\">\n      <div className=\"vf-tree__inner\">\n        <AccordionList titles={titles} nestedLevel={1}>\n          {children}\n        </AccordionList>\n      </div>\n    </div>\n  );\n};\n\nexport default Accordion;\n","import React, { useState } from 'react';\nimport ExtLink from 'components/UI/ExtLink';\nimport EuropePMCLogo from 'images/europe_pmc_logo.png';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\n\nimport './style.css';\nimport Accordion, {\n  AccordionContentPanel,\n  AccordionList,\n} from 'components/UI/Accordion';\nimport EMGModal from 'components/UI/EMGModal';\n\ntype Tag = {\n  name: string;\n  uri: string;\n};\n\ntype Mention = {\n  exact: string;\n  id: string;\n  postfix: string;\n  prefix: string;\n  provider: string;\n  section: string;\n  type: string;\n  tags: Tag[];\n};\n\ntype Annotation = {\n  annotation_text: string;\n  mentions: Mention[];\n};\n\ntype AnnotationGroup = {\n  annotation_type: string;\n  description: string;\n  title: string;\n  annotations: Annotation[];\n};\n\nconst AnnotationSuperGroup: React.FC<{\n  superGroup: AnnotationGroup[];\n  title: string;\n}> = ({ superGroup, title }) => {\n  return (\n    <>\n      <h3>{title}</h3>\n      {!superGroup.length && <p>No {title} annotations</p>}\n      <Accordion titles={superGroup.map((g) => g.title)}>\n        {superGroup.map((g) => (\n          <React.Fragment key={g.title}>\n            <div style={{ padding: '0 8px' }}>\n              <p className=\"vf-text text-body--5\">\n                <span className=\"icon icon-common icon-info\" data-icon=\"i\" />\n                &nbsp; {g.description}\n              </p>\n            </div>\n            <AccordionList\n              titles={g.annotations.map((anno) => anno.annotation_text)}\n              nestedLevel={2}\n            >\n              {g.annotations.map((anno) => (\n                <React.Fragment key={anno.annotation_text}>\n                  {anno.mentions.map((mention) => (\n                    <AccordionContentPanel key={mention.id}>\n                      <div className=\"publication-epmc-mention\">\n                        <div className=\"vf-sidebar vf-sidebar--end\">\n                          <div className=\"vf-sidebar__inner\">\n                            <div>\n                              <p>\n                                Mentioned in the{' '}\n                                {mention.section.split(' (')[0]} section:\n                              </p>\n                            </div>\n                            <div>\n                              <ExtLink href={mention.id}>\n                                View on Europe PMC\n                              </ExtLink>\n                              &nbsp;&nbsp;\n                              {mention.tags.map((tag) => (\n                                <ExtLink href={tag.uri} key={tag.name}>\n                                  Definition of ‘{tag.name}’&nbsp;&nbsp;\n                                </ExtLink>\n                              ))}\n                            </div>\n                          </div>\n                        </div>\n                        <p>\n                          <span className=\"publications-epmc-annotation-prefix\">\n                            &hellip;{mention.prefix}\n                          </span>\n                          <span className=\"publications-epmc-annotation-match\">\n                            <ExtLink href={mention.id}>{mention.exact}</ExtLink>\n                          </span>\n                          <span className=\"publications-epmc-annotation-prefix\">\n                            {mention.postfix}&hellip;\n                          </span>\n                        </p>\n                      </div>\n                    </AccordionContentPanel>\n                  ))}\n                </React.Fragment>\n              ))}\n            </AccordionList>\n          </React.Fragment>\n        ))}\n      </Accordion>\n    </>\n  );\n};\ntype PublicationAnnotationProps = {\n  publicationId: string;\n  pubmedId: string;\n};\n\nconst PublicationAnnotations: React.FC<PublicationAnnotationProps> = ({\n  publicationId,\n  pubmedId,\n}) => {\n  const { data, loading, error } = useMGnifyData(\n    `publications/${publicationId}/europe_pmc_annotations`\n  );\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  const annotations = data.data as unknown as Record<string, AnnotationGroup[]>;\n  const hasAnnotations = !!(\n    annotations?.sample_processing?.length || annotations.other?.length\n  );\n\n  return (\n    <div className=\"vf-stack vf-stack--400\">\n      <div style={{ width: '100%', textAlign: 'right' }}>\n        Powered by <a href=\"https://europepmc.org\">Europe PMC</a>.\n        <img\n          src={EuropePMCLogo}\n          style={{ height: '2em' }}\n          alt=\"Europe PMC logo\"\n        />\n      </div>\n      <p>\n        Through automated text-mining, many publications may have additional\n        metadata available in the form of{' '}\n        <ExtLink href=\"https://europepmc.org/Annotations\">Annotations</ExtLink>{' '}\n        from <ExtLink href=\"https://europepmc.org\">Europe PMC</ExtLink>. Any\n        Metagenomics-relevant annotations are shown here.\n      </p>\n      {!hasAnnotations && (\n        <p>\n          No metagenomics annotations were found on Europe PMC. Annotations from\n          other providers might be available on the{' '}\n          <ExtLink href={`https://europepmc.org/abstract/MED/${pubmedId}`}>\n            Europe PMC website\n          </ExtLink>\n          .\n        </p>\n      )}\n      {hasAnnotations && (\n        <>\n          <AnnotationSuperGroup\n            superGroup={annotations.sample_processing}\n            title=\"Sample processing\"\n          />\n          <AnnotationSuperGroup superGroup={annotations.other} title=\"Other\" />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport const PublicationAnnotationsPopupBadge: React.FC<\n  PublicationAnnotationProps\n> = ({ publicationId, pubmedId }) => {\n  const { data, loading, error } = useMGnifyData(\n    `publications/${publicationId}/europe_pmc_annotations`\n  );\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  if (loading) return <Loading size=\"small\" />;\n  if (error) return <FetchError error={error} />;\n  const annotations = data.data as unknown as Record<string, AnnotationGroup[]>;\n  const hasAnnotations = !!(\n    annotations?.sample_processing?.length || annotations.other?.length\n  );\n  if (!hasAnnotations) return null;\n  return (\n    <>\n      <EMGModal\n        isOpen={isModalOpen}\n        onRequestClose={() => setIsModalOpen(false)}\n        contentLabel={`Europe PMC Annotations for ${publicationId}`}\n      >\n        <h1>Annotations from Europe PMC</h1>\n        <PublicationAnnotations\n          publicationId={publicationId}\n          pubmedId={pubmedId}\n        />\n      </EMGModal>\n      <button\n        className=\"vf-button vf-button--link vf-button--sm\"\n        type=\"button\"\n        onClick={() => setIsModalOpen(true)}\n      >\n        <span className=\"vf-badge vf-badge--secondary\">\n          <i className=\"icon icon-common\" data-icon=\"&#xf1c0;\" /> meta\n        </span>{' '}\n        Show metadata from Europe PMC Annotations\n      </button>\n    </>\n  );\n};\n\nexport default PublicationAnnotations;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport TruncatedText from 'components/UI/TextTruncated';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, MGnifyResponseList } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { getBiomeIcon } from 'utils/biomes';\nimport useQueryParamState from 'hooks/queryParamState/useQueryParamState';\n\nconst initialPageSize = 10;\n\ntype AssociatedStudiesProps = {\n  rootEndpoint: string;\n};\nconst AssociatedStudies: React.FC<AssociatedStudiesProps> = ({\n  rootEndpoint,\n}) => {\n  const accession = useURLAccession();\n\n  const [studiesPage] = useQueryParamState('studies-page', 1, Number);\n  const [studiesPageSize] = useQueryParamState(\n    'studies-page_size',\n    initialPageSize,\n    Number\n  );\n  const [studiesOrder] = useQueryParamState('studies-order', '');\n  const { data, loading, error, isStale, downloadURL } = useMGnifyData(\n    `${rootEndpoint}/${accession}/studies`,\n    {\n      page: studiesPage as number,\n      ordering: studiesOrder as string,\n      page_size: studiesPageSize as number,\n    }\n  );\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !data) return <FetchError error={error} />;\n  if (!(data.data as MGnifyDatum[]).length) return null;\n\n  const columns = [\n    {\n      id: 'biome_id',\n      Header: 'Biome',\n      accessor: (study) => study.relationships.biomes.data?.[0]?.id,\n      Cell: ({ cell }) => (\n        <span\n          className={`biome_icon icon_xs ${getBiomeIcon(cell.value)}`}\n          style={{ float: 'initial' }}\n        />\n      ),\n      className: 'mg-biome',\n    },\n    {\n      id: 'study',\n      Header: 'Study accession',\n      accessor: 'id',\n      Cell: ({ cell }) => (\n        <Link to={`/studies/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      Header: 'Name',\n      accessor: 'attributes.study-name',\n    },\n    {\n      Header: 'Abstract',\n      accessor: 'attributes.study-abstract',\n      Cell: ({ cell }) => <TruncatedText text={(cell.value as string) || ''} />,\n    },\n    {\n      Header: 'Samples Count',\n      accessor: 'attributes.samples-count',\n    },\n    {\n      id: 'last_update',\n      Header: 'Last Updated',\n      accessor: 'attributes.last-update',\n      Cell: ({ cell }) => new Date(cell.value).toLocaleDateString(),\n    },\n  ];\n  const showPagination = (data.meta?.pagination?.count || 1) > initialPageSize;\n\n  return (\n    <EMGTable\n      cols={columns}\n      data={data as MGnifyResponseList}\n      initialPage={(studiesPage as number) - 1}\n      initialPageSize={initialPageSize}\n      className=\"mg-studies-table\"\n      loading={loading}\n      isStale={isStale}\n      namespace=\"studies-\"\n      showPagination={showPagination}\n      downloadURL={downloadURL}\n      dataCy=\"associated-studies\"\n    />\n  );\n};\n\nexport default AssociatedStudies;\n","import React from 'react';\n\nconst Box: React.FC<{ label: string; theme?: string; dataCy?: string }> = ({\n  label,\n  theme = 'primary',\n  children,\n  dataCy,\n}) => (\n  <div className=\"vf-grid\" data-cy={dataCy}>\n    <div className={`vf-box vf-box--easy vf-box-theme--${theme}`}>\n      <h5 className=\"vf-box__heading\">{label}</h5>\n      <div className=\"vf-box__text\">{children}</div>\n    </div>\n  </div>\n);\n\nexport default Box;\n","import React from 'react';\n\ntype KeyValueProps = {\n  list: { key: string; value: string | React.ElementType }[];\n  dataCy?: string;\n};\n\nconst KeyValueList: React.FC<KeyValueProps> = ({ list, dataCy }) => (\n  <div\n    className=\"vf-grid vf-grid__col-2\"\n    style={{\n      gridTemplateColumns: '1fr 2fr',\n      rowGap: '0.5rem',\n    }}\n    data-cy={dataCy}\n  >\n    {list.map(({ key, value: Value }) => (\n      <React.Fragment key={key}>\n        <div style={{ textAlign: 'right' }}>{key}:</div>\n        <div>{typeof Value === 'string' ? Value : <Value />}</div>\n      </React.Fragment>\n    ))}\n  </div>\n);\n\nexport default KeyValueList;\n","import React from 'react';\nimport Tooltip from 'components/UI/Tooltip';\n\nconst TruncatedText: React.FC<{\n  maxLength?: number;\n  text: string;\n  withTooltip?: boolean;\n}> = ({ text, maxLength = 250, withTooltip = false }) => {\n  const isTruncated = text.length >= maxLength;\n  const truncated = (\n    <>\n      {text.substring(0, maxLength)}\n      {isTruncated && '...'}\n    </>\n  );\n  if (withTooltip && isTruncated)\n    return (\n      <Tooltip content={text}>\n        <span>{truncated}</span>\n      </Tooltip>\n    );\n  return truncated;\n};\n\nexport default TruncatedText;\n","import React from 'react';\nimport Tippy from '@tippyjs/react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'tippy.js/dist/tippy.css';\nimport './style.css';\n\ntype TooltipProps = {\n  content: React.ReactNode;\n  children?: React.ReactNode;\n  interactive?: boolean;\n};\n\nconst Tooltip: React.FC<TooltipProps> = ({\n  content,\n  children,\n  interactive = false,\n}) => (\n  <Tippy content={content} interactive={interactive}>\n    {children as React.ReactElement}\n  </Tippy>\n);\nexport default Tooltip;\n","import { useLocation } from 'react-router-dom';\n\nconst useURLAccession = (): string | undefined => {\n  const location = useLocation();\n  let { pathname } = location;\n  if (pathname.trim().endsWith('/')) pathname = pathname.trim().slice(0, -1);\n  const parts = pathname.split('/');\n  return parts?.[parts.length - 1];\n};\n\nexport default useURLAccession;\n","import React from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Box from 'components/UI/Box';\nimport KeyValueList from 'components/UI/KeyValueList';\nimport ExtLink from 'components/UI/ExtLink';\nimport AssociatedStudies from 'components/Study/Studies';\nimport PublicationAnnotations from 'components/Publications/EuropePMCAnnotations';\n\nconst PublicationPage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`publications/${accession}`);\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: publicationData } = data as MGnifyResponseObj;\n\n  const details = [\n    {\n      key: 'Journal name',\n      value: publicationData.attributes['iso-journal'] as string,\n    },\n    {\n      key: 'DOI',\n      value: () => (\n        <ExtLink href={`https://www.doi.org/${publicationData.attributes.doi}`}>\n          {publicationData.attributes.doi}\n        </ExtLink>\n      ),\n    },\n    {\n      key: 'PMID',\n      value: () => (\n        <ExtLink\n          href={`https://europepmc.org/abstract/MED/${publicationData.id}`}\n        >\n          {publicationData.id}\n        </ExtLink>\n      ),\n    },\n    {\n      key: 'Published year',\n      value: String(publicationData.attributes['published-year']),\n    },\n  ];\n  if (publicationData.attributes['medline-journal']) {\n    details.push({\n      key: 'Medical journal',\n      value: () => (\n        <ExtLink href={publicationData.attributes['medline-journal'] as string}>\n          {publicationData.attributes['medline-journal']}\n        </ExtLink>\n      ),\n    });\n  }\n  return (\n    <section className=\"vf-content\">\n      <h2>Publication: {publicationData?.attributes?.['pub-title'] || ''}</h2>\n      <h4>{publicationData?.attributes?.authors || ''}</h4>\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          {publicationData?.attributes?.abstract && (\n            <div>{publicationData.attributes.abstract}</div>\n          )}\n          <Box label=\"Publication details\">\n            <KeyValueList list={details} />\n          </Box>\n          <Box label=\"Europe PMC Annotations\">\n            <PublicationAnnotations\n              publicationId={accession}\n              pubmedId={publicationData.id}\n            />\n          </Box>\n          <Box label=\"Associated studies\">\n            <AssociatedStudies rootEndpoint=\"publications\" />\n          </Box>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default PublicationPage;\n"],"names":["AccordionElement","title","children","isOpen","setIsOpen","useState","className","onClick","type","xmlns","viewBox","d","AccordionContentPanel","AccordionList","titles","nestedLevel","map","i","key","AnnotationSuperGroup","superGroup","length","g","style","padding","description","annotations","anno","annotation_text","mentions","mention","id","section","split","ExtLink","href","tags","tag","uri","name","prefix","exact","postfix","PublicationAnnotations","publicationId","pubmedId","data","loading","error","useMGnifyData","Loading","size","FetchError","hasAnnotations","sample_processing","other","width","textAlign","src","height","alt","PublicationAnnotationsPopupBadge","isModalOpen","setIsModalOpen","EMGModal","onRequestClose","contentLabel","rootEndpoint","accession","studiesPage","Number","studiesPageSize","studiesOrder","isStale","downloadURL","page","ordering","page_size","columns","Header","accessor","study","relationships","biomes","Cell","cell","value","float","to","text","Date","toLocaleDateString","showPagination","meta","pagination","count","cols","initialPage","initialPageSize","namespace","dataCy","label","theme","list","gridTemplateColumns","rowGap","Value","maxLength","withTooltip","isTruncated","truncated","substring","content","interactive","location","pathname","trim","endsWith","slice","parts","publicationData","details","attributes","doi","String","push","authors","abstract"],"sourceRoot":""}