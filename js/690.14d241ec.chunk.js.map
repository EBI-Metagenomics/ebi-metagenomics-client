{"version":3,"file":"js/690.14d241ec.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/Nav/RouteForHash/index.tsx","webpack://mgportalv2/./src/components/UI/FetchError/index.tsx","webpack://mgportalv2/./src/components/UI/KeyValueList/index.tsx","webpack://mgportalv2/./src/components/UI/Tabs/index.tsx","webpack://mgportalv2/./src/hooks/useURLAccession/index.tsx","webpack://mgportalv2/./src/components/Analysis/Overview/index.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/QCChart.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/ContigsHistogram.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/NucleotidesHistogram.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/ContigsDistribution.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/SeqLengthChart.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/GCContentChart.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/index.tsx","webpack://mgportalv2/./src/pages/Analysis/index.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\ntype PropsType = {\n  hash: string;\n  isDefault?: boolean;\n};\nconst RouteForHash: React.FC<PropsType> = ({\n  hash,\n  isDefault = false,\n  children,\n}) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (location.hash === '' && hash !== '' && isDefault) {\n      navigate(hash, { replace: true });\n    }\n  });\n\n  if (location.hash === hash) {\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport default RouteForHash;\n","import React from 'react';\nimport { ErrorFromFetch, ErrorTypes } from 'hooks/data/useData';\n\nconst refreshPage = (): void => {\n  window.location.reload();\n};\n\nconst FetchError: React.FC<{ error: ErrorFromFetch }> = ({ error }) => {\n  if (!error || error.type === ErrorTypes.NullURL) return null;\n  return (\n    <div\n      className=\"vf-box vf-box-theme--primary vf-box--easy\"\n      style={{\n        backgroundColor: 'lemonchiffon',\n      }}\n    >\n      <h3 className=\"vf-box__heading\">\n        <span className=\"icon icon-common icon-exclamation-triangle\" /> Error\n        Fetching Data\n      </h3>\n      <p className=\"vf-box__text\">\n        {error?.type === ErrorTypes.FetchError &&\n          `There were problems with the request. [${error.error}]`}\n        {error?.type === ErrorTypes.NotOK &&\n          `The response from the server was not OK [Status: ${error.status}].`}\n        {error?.type === ErrorTypes.JSONError &&\n          `The recovered resource didn't follow the expected format [${error.error}].`}\n      </p>\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--tertiary vf-button--sm \"\n          onClick={refreshPage}\n        >\n          Refresh\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FetchError;\n","import React from 'react';\n\ntype KeyValueProps = {\n  list: { key: string; value: string | React.ElementType }[];\n};\n\nconst KeyValueList: React.FC<KeyValueProps> = ({ list }) => (\n  <div\n    className=\"vf-grid vf-grid__col-2\"\n    style={{\n      gridTemplateColumns: '1fr 2fr',\n      rowGap: '0.5rem',\n    }}\n  >\n    {list.map(({ key, value: Value }) => (\n      <React.Fragment key={key}>\n        <div style={{ textAlign: 'right' }}>{key}:</div>\n        <div>{typeof Value === 'string' ? Value : <Value />}</div>\n      </React.Fragment>\n    ))}\n  </div>\n);\n\nexport default KeyValueList;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Tab: React.FC = () => null;\n\ntype TabsProps = {\n  tabs: Array<{\n    label: string | React.ElementType;\n    to: string;\n  }>;\n};\nconst Tabs: React.FC<TabsProps> = ({ tabs }) => {\n  const location = useLocation();\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label: Label, to }) => (\n          <li className=\"vf-tabs__item\" key={to}>\n            <Link\n              className={`vf-tabs__link ${\n                to === location.pathname ||\n                (to.startsWith('#') && to === location.hash) ||\n                (to === '#' && location.hash === '')\n                  ? 'is-active'\n                  : ''\n              }`}\n              to={to}\n            >\n              {typeof Label === 'string' ? Label : <Label />}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import { useLocation } from 'react-router-dom';\n\nconst useURLAccession = (): string | undefined => {\n  const location = useLocation();\n  let { pathname } = location;\n  if (pathname.trim().endsWith('/')) pathname = pathname.trim().slice(0, -1);\n  const parts = pathname.split('/');\n  return parts?.[parts.length - 1];\n};\n\nexport default useURLAccession;\n","import React from 'react';\nimport KeyValueList from 'components/UI/KeyValueList';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport { Link } from 'react-router-dom';\n\ntype GenomeOverviewProps = {\n  data: MGnifyDatum;\n};\n\nfunction isAssembly(experimentType: string): boolean {\n  return ['assembly', 'hybrid_assembly', 'long_reads_assembly'].includes(\n    experimentType\n  );\n}\n\nconst AnalysisOverview: React.FC<GenomeOverviewProps> = ({ data }) => {\n  return (\n    <section>\n      <div className=\"vf-stack\">\n        <details open>\n          <summary>\n            <b>Description</b>\n          </summary>\n\n          <KeyValueList\n            list={[\n              {\n                key: 'Study',\n                value:\n                  data.relationships?.study?.data?.id &&\n                  (() => (\n                    <Link to={`/studies/${data.relationships.study.data.id}`}>\n                      {data.relationships.study.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Sample',\n                value:\n                  data.relationships?.sample?.data?.id &&\n                  (() => (\n                    <Link to={`/samples/${data.relationships.sample.data.id}`}>\n                      {data.relationships.sample.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Assembly',\n                value:\n                  data.relationships?.assembly?.data?.id &&\n                  isAssembly(data.attributes['experiment-type'] as string) &&\n                  (() => (\n                    <Link\n                      to={`/assemblies/${data.relationships.assembly.data.id}`}\n                    >\n                      {data.relationships.assembly.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Run',\n                value:\n                  data.relationships?.run?.data?.id &&\n                  (() => (\n                    <Link to={`/runs/${data.relationships.run.data.id}`}>\n                      {data.relationships.run.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Pipeline version',\n                value:\n                  data.attributes?.['pipeline-version'] &&\n                  (() => (\n                    <Link\n                      to={`/pipelines/${data.attributes['pipeline-version']}`}\n                    >\n                      {data.attributes['pipeline-version']}\n                    </Link>\n                  )),\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Experiment details</b>\n          </summary>\n          <KeyValueList\n            list={[\n              // TODO: the lists should obtained from runs for hybrid_assembly\n              {\n                key: 'Experiment type',\n                value: data.attributes['experiment-type'] as string,\n              },\n              {\n                key: 'Instrument model',\n                value: data.attributes['instrument-model'] as string,\n              },\n              {\n                key: 'Instrument platform',\n                value: data.attributes['instrument-platform'] as string,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n      </div>\n    </section>\n  );\n};\nexport default AnalysisOverview;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport { MGnifyDatum } from 'hooks/data/useData';\n\ntype QualityControlProps = {\n  analysisData: MGnifyDatum;\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst QualityControlChart: React.FC<QualityControlProps> = ({\n  analysisData,\n  summaryData,\n}) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const isAssembly = analysisData.attributes['experiment-type'] === 'assembly';\n\n  const unit = isAssembly ? 'contigs' : 'reads';\n  const capUnit = isAssembly ? 'Contigs' : 'Reads';\n\n  const remaining = [0, 0, 0, 0, 0];\n  const filtered = [0, 0, 0, 0, 0];\n  const subsampled = [0, 0, 0, 0, 0];\n\n  const analysisSummary = {};\n  (\n    (analysisData.attributes?.['analysis-summary'] as {\n      key: string;\n      value: string;\n    }[]) || []\n  ).forEach(({ key, value }) => {\n    analysisSummary[key] = value;\n  });\n\n  subsampled[4] = Number(summaryData.sequence_count);\n  remaining[0] = Number(analysisSummary['Submitted nucleotide sequences']);\n  remaining[1] = Number(\n    analysisSummary['Nucleotide sequences after format-specific filtering']\n  );\n  remaining[2] = Number(\n    analysisSummary['Nucleotide sequences after length filtering']\n  );\n  remaining[3] = Number(\n    analysisSummary['Nucleotide sequences after undetermined bases filtering']\n  );\n  filtered[2] = remaining[1] - remaining[2];\n  filtered[1] = remaining[0] - remaining[1];\n  filtered[4] = remaining[3] - remaining[4] - subsampled[4];\n\n  const options = {\n    chart: {\n      type: 'bar',\n      height: 240,\n    },\n    title: {\n      text: `Number of sequence ${unit} per QC step`,\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Count',\n      },\n    },\n    xAxis: {\n      categories: [\n        `Initial ${unit}`,\n        'Trimming',\n        'Length filtering',\n        'Ambiguous base filtering',\n        `${capUnit} subsampled for QC analysis`,\n      ],\n    },\n    plotOptions: {\n      series: {\n        stacking: 'normal',\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: `${capUnit} filtered out`,\n        data: filtered,\n        color: '#CCCCD3',\n      },\n      {\n        name: `${capUnit} remaining`,\n        data: remaining,\n        color: '#058DC7',\n      },\n      {\n        name: `${capUnit} after sampling`,\n        data: subsampled,\n        color: '#8dc7c7',\n      },\n    ],\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default QualityControlChart;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, ResponseFormat, TSVResponse } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\n\ntype ContigsHistogramProps = {\n  analysisData: MGnifyDatum;\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst ContigsHistogram: React.FC<ContigsHistogramProps> = ({\n  analysisData,\n  summaryData,\n}) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/seq-length`,\n    {},\n    {},\n    ResponseFormat.TSV\n  );\n\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const histData = (data as unknown as TSVResponse).map(([x, y]) => [\n    Number(x),\n    Number(y),\n  ]);\n  const lengthMax = Math.max(...histData.map(([x]) => x));\n\n  const isAssembly = analysisData.attributes['experiment-type'] === 'assembly';\n  const unit = isAssembly ? 'contigs' : 'reads';\n  const capUnit = isAssembly ? 'Contigs' : 'Reads';\n\n  const options = {\n    chart: {\n      marginLeft: 78,\n      style: {\n        fontFamily: 'Helvetica',\n      },\n      zoomType: 'x',\n    },\n    title: {\n      text: `${capUnit} length histogram`,\n      style: {\n        fontSize: 16,\n        fontWeight: 'bold',\n      },\n    },\n    // TODO: Form wha I can see isFromSubset is not in use anymore.\n    // Remove this code if after confirming\n    // subtitle: {\n    //     text: ((chartOptions['isFromSubset'])\n    //         ? 'A subset of the sequences was used to generate this chart -'\n    //         : '') + 'Click and drag in the plot area to zoom in'\n    // },\n    yAxis: {\n      title: { text: `Number of ${unit}` },\n    },\n    xAxis: {\n      min: 0,\n      max: 100 * (Math.floor(lengthMax / 100) + 1),\n      plotBands:\n        summaryData === null\n          ? []\n          : [\n              {\n                // visualize the standard deviation\n                from:\n                  Number(summaryData.average_length) -\n                  Number(summaryData.standard_deviation_length),\n                to:\n                  Number(summaryData.average_length) +\n                  Number(summaryData.standard_deviation_length),\n                color: 'rgba(128, 128, 128, .2)',\n                label: {\n                  text: `Standard Deviation<br/>\\u00B1${Number(\n                    summaryData.standard_deviation_length\n                  ).toFixed(2)}`,\n                  style: {\n                    color: '#666666',\n                    fontSize: '0.8em',\n                  },\n                },\n              },\n            ],\n    },\n    series: [\n      {\n        name: capUnit,\n        data: histData,\n        color: '#058dc7', // (chartOptions['isFromSubset']) ? '#8dc7c7' : '#058dc7'\n      },\n    ],\n    legend: { enabled: false },\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    // exporting: util.getExportingStructure(urlToFile)\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default ContigsHistogram;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { ResponseFormat, TSVResponse } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\n\nconst NucleotidesHistogram: React.FC = () => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/nucleotide-distribution`,\n    {},\n    {},\n    ResponseFormat.TSV\n  );\n\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const dataHist = { pos: [], A: [], G: [], T: [], C: [], N: [] };\n  const colors = {\n    A: 'rgb(16, 150, 24)',\n    G: 'rgb(255, 153, 0)',\n    C: 'rgb(51, 102, 204)',\n    T: 'rgb(220, 57, 18)',\n    N: 'rgb(138, 65, 23)',\n  };\n  const headers = (data as unknown as TSVResponse)[0];\n  (data as unknown as TSVResponse).slice(1).forEach((line) => {\n    line.forEach((v, i) => {\n      dataHist[headers[i]].push(Number(v));\n    });\n  });\n\n  const options = {\n    chart: {\n      type: 'area',\n      style: {\n        fontFamily: 'Helvetica',\n      },\n    },\n    title: {\n      text: 'Nucleotide position histogram',\n      style: {\n        fontSize: 16,\n        fontWeight: 'bold',\n      },\n    },\n    xAxis: {\n      categories: dataHist.pos,\n      tickmarkPlacement: 'on',\n      title: { enabled: false },\n    },\n    yAxis: {\n      min: 0,\n      max: 100,\n      title: { enabled: false },\n    },\n    plotOptions: {\n      area: {\n        stacking: 'normal',\n        lineColor: '#666666',\n        lineWidth: 1,\n        marker: {\n          lineWidth: 1,\n          lineColor: '#666666',\n        },\n      },\n    },\n    tooltip: { shared: true },\n    series: ['A', 'T', 'C', 'G', 'N'].map((d) => ({\n      name: d,\n      data: dataHist[d],\n      color: colors[d],\n    })),\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    // exporting: util.getExportingStructure(urlToFile),\n    // TODO: Add download options\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default NucleotidesHistogram;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, ResponseFormat, TSVResponse } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\n\ntype ContigsHistogramProps = {\n  analysisData: MGnifyDatum;\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst ContigsDistribution: React.FC<ContigsHistogramProps> = ({\n  analysisData,\n  summaryData,\n}) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/gc-distribution`,\n    {},\n    {},\n    ResponseFormat.TSV\n  );\n\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const distData = (data as unknown as TSVResponse).map(([x, y]) => [\n    Number(x),\n    Number(y),\n  ]);\n\n  const isAssembly = analysisData.attributes['experiment-type'] === 'assembly';\n  const unit = isAssembly ? 'contigs' : 'reads';\n  const capUnit = isAssembly ? 'Contigs' : 'Reads';\n\n  const options = {\n    chart: {\n      style: {\n        fontFamily: 'Helvetica',\n      },\n      zoomType: 'x',\n    },\n    title: {\n      text: `${capUnit} GC distribution`,\n      style: {\n        fontSize: 16,\n        fontWeight: 'bold',\n      },\n    },\n    // subtitle: {\n    //     text: ( (typeof chartOptions !== 'undefined' &&\n    //         chartOptions['isFromSubset'])\n    //         ? 'A subset of the sequences was used to generate this chart. - '\n    //         : '') + 'Click and drag in the plot area to zoom in'\n    // },\n    yAxis: {\n      title: { text: `Number of ${unit}` },\n    },\n    xAxis: {\n      min: 0,\n      max: 100,\n\n      plotBands:\n        summaryData === null\n          ? []\n          : [\n              {\n                // visualize the standard deviation\n                from:\n                  Number(summaryData.average_gc_content) -\n                  Number(summaryData.standard_deviation_gc_content),\n                to:\n                  Number(summaryData.average_gc_content) +\n                  Number(summaryData.standard_deviation_gc_content),\n                color: 'rgba(128, 128, 128, .2)',\n                borderColor: '#000000',\n                label: {\n                  text: `Standard Deviation<br/>\\u00B1${Number(\n                    summaryData.standard_deviation_gc_content\n                  ).toFixed(2)}`,\n                  style: {\n                    color: '#666666',\n                    fontSize: '0.8em',\n                  },\n                },\n              },\n            ],\n    },\n    series: [\n      {\n        name: capUnit,\n        data: distData,\n        color: '#058dc7', // (chartOptions['isFromSubset']) ? '#8dc7c7' : '#058dc7'\n      },\n    ],\n    legend: { enabled: false },\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    // exporting: util.getExportingStructure(urlToFile)\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default ContigsDistribution;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\ntype SeqLengthChartProps = {\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst SeqLengthChart: React.FC<SeqLengthChartProps> = ({ summaryData }) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n\n  const options = {\n    chart: {\n      type: 'bar',\n      marginTop: 0, // Keep all charts left aligned\n      height: 120,\n    },\n    title: false,\n    xAxis: {\n      categories: ['Minimum', 'Average', 'Maximum'],\n      title: { enabled: false },\n      lineColor: '#595959',\n      tickColor: '',\n    },\n    yAxis: {\n      min: 0,\n      max: 100 * (Math.floor(Number(summaryData.length_max) / 100) + 1),\n      title: { text: 'Sequence length (bp)' },\n      plotBands: [\n        {\n          // visualize the standard deviation\n          from:\n            Number(summaryData.average_length) -\n            Number(summaryData.standard_deviation_length),\n          to:\n            summaryData.average_length +\n            Number(summaryData.standard_deviation_length),\n          color: 'rgba(128, 128, 128, .2)',\n        },\n      ],\n    },\n    plotOptions: {\n      series: {\n        grouping: false,\n        shadow: false,\n        borderWidth: 0,\n      },\n    },\n    series: [\n      {\n        name: 'Length',\n        data: [\n          {\n            y: Number(summaryData.length_min),\n            x: 0,\n            color: 'rgb(114, 191, 63)',\n          },\n          {\n            y: Number(summaryData.average_length),\n            x: 1,\n            color: 'rgb(63, 114, 191)',\n          },\n          {\n            y: Number(summaryData.length_max),\n            x: 2,\n            color: 'rgb(114, 63, 191)',\n          },\n        ],\n        pointPadding: -0.2,\n        tooltip: {\n          /* eslint-disable react/no-this-in-sfc */\n          pointFormatter() {\n            return `<span style=\"color:${this.color}\">\\u25CF</span> ${\n              this.category\n            }: <b>${this.y.toFixed(2)}</b><br/>`;\n          },\n          /* eslint-enable react/no-this-in-sfc */\n        },\n      },\n    ],\n    legend: { enabled: false },\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    exporting: { enabled: false },\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default SeqLengthChart;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\ntype GCContentChartProps = {\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst GCContentChart: React.FC<GCContentChartProps> = ({ summaryData }) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n\n  const options = {\n    chart: {\n      type: 'bar',\n      marginTop: 0, // Keep all charts left aligned\n      height: 150,\n    },\n    title: false,\n    xAxis: {\n      categories: ['Content'],\n      title: { enabled: false },\n      lineColor: '#595959',\n      tickColor: '',\n    },\n    yAxis: {\n      min: 0,\n      max: 100,\n      title: { enabled: false },\n      plotBands: [\n        {\n          // visualize the standard deviation\n          from:\n            Number(summaryData.average_gc_content) -\n            Number(summaryData.standard_deviation_gc_content),\n          to:\n            Number(summaryData.average_gc_content) +\n            Number(summaryData.standard_deviation_gc_content),\n          color: 'rgba(128, 128, 128, .2)',\n        },\n      ],\n    },\n    plotOptions: {\n      series: {\n        grouping: false,\n        shadow: false,\n        borderWidth: 0,\n      },\n    },\n    series: [\n      {\n        name: 'GC content',\n        pointPadding: 0.25,\n        color: 'rgb(63, 114, 191)',\n        tooltip: {\n          /* eslint-disable react/no-this-in-sfc */\n          pointFormatter() {\n            return `<span style=\"color:${this.color}\">\\u25CF</span> ${\n              this.series.name\n            }: <b>${this.y.toFixed(2)}%</b><br/>`;\n          },\n          /* eslint-enable react/no-this-in-sfc */\n        },\n        data: [Number(summaryData.average_gc_content)],\n      },\n      {\n        name: 'AT content',\n        color: 'rgb(114, 63, 191)',\n        pointPadding: 0.25,\n        threshold: Number(summaryData.average_gc_content),\n        tooltip: {\n          /* eslint-disable react/no-this-in-sfc */\n          pointFormatter() {\n            const val = (100 - Number(summaryData.average_gc_content)).toFixed(\n              2\n            );\n            // prettier-ignore\n            return `\n              <span style=\"color:${this.color}\">\\u25CF</span>\n              ${this.series.name}: <b>${val}%</b>\n              <br/>`;\n          },\n          /* eslint-enable react/no-this-in-sfc */\n        },\n        data: [100],\n      },\n    ],\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    exporting: { enabled: false },\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default GCContentChart;\n","import React from 'react';\n\nimport useURLAccession from 'hooks/useURLAccession';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport { MGnifyDatum, ResponseFormat } from 'hooks/data/useData';\nimport QualityControlChart from './QCChart';\nimport ContigsHistogram from './ContigsHistogram';\nimport NucleotidesHistogram from './NucleotidesHistogram';\nimport ContigsDistribution from './ContigsDistribution';\nimport SeqLengthChart from './SeqLengthChart';\nimport GCContentChart from './GCContentChart';\nimport './style.css';\n\ntype QualityControlProps = {\n  analysisData: MGnifyDatum;\n};\nconst QualityControl: React.FC<QualityControlProps> = ({ analysisData }) => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/summary`,\n    {},\n    {},\n    ResponseFormat.TSV\n  );\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const summaryData = Object.fromEntries(\n    data as unknown as Array<[k: string, v: string]>\n  );\n\n  const isAssembly = analysisData.attributes['experiment-type'] === 'assembly';\n  const unit = isAssembly ? 'contig' : 'read';\n  const units = isAssembly ? 'contigs' : 'reads';\n\n  return (\n    <div className=\"vf-stack vf-stack--200\">\n      <p>\n        The chart below shows the number of {units} which pass the quality\n        control steps in the pipeline. Paired-end sequences may have been\n        merged, in which case the initial number of {units} may differ from the\n        number given by ENA.\n      </p>\n      <QualityControlChart\n        analysisData={analysisData}\n        summaryData={summaryData}\n      />\n      {Number(analysisData.attributes['pipeline-version']) > 2 && (\n        <>\n          <p>\n            The histograms below show the distributions of sequence lengths\n            (left) and percentage GC content (right) for the sequences having\n            passed quality control. Note that for large files, the distributions\n            were compiled from a random subset of 2 million\n            {units}. The standard deviations are shown on each plot. The bar\n            chart underneath each graph indicates the minimum, mean and maximum\n            length and mean GC and AT content, respectively.\n          </p>\n          <div className=\"vf-grid vf-grid__col-2\">\n            <div className=\"vf-stack\">\n              <ContigsHistogram\n                analysisData={analysisData}\n                summaryData={summaryData}\n              />\n              <SeqLengthChart summaryData={summaryData} />\n            </div>\n            <div className=\"vf-stack\">\n              <ContigsDistribution\n                analysisData={analysisData}\n                summaryData={summaryData}\n              />\n              <GCContentChart summaryData={summaryData} />\n            </div>\n          </div>\n          <p>\n            The graph below show the relative abundance of nucletotides (A, C,\n            G, T, or ambiguous base &quot;N&quot;) at each position starting\n            from the beginning of each {unit} up to the first 500 base pairs.\n          </p>\n          <NucleotidesHistogram />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default QualityControl;\n","import React from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Tabs from 'components/UI/Tabs';\nimport Overview from 'components/Analysis/Overview';\nimport QualityControl from 'components/Analysis/QualityControl';\nimport RouteForHash from 'components/Nav/RouteForHash';\nimport { Link } from 'react-router-dom';\n\nconst hasAbundance = (\n  includes: { attributes?: { 'group-type'?: string } }[]\n): boolean => {\n  return includes.some(\n    (included) => included?.attributes?.['group-type'] === 'Statistics'\n  );\n};\n\nconst isAssembly = (data: MGnifyDatum): boolean =>\n  data.attributes['experiment-type'] === 'assembly';\nconst isAtleastVersion5 = (data: MGnifyDatum): boolean =>\n  Number(data.attributes['pipeline-version']) >= 5;\nconst isNotAmplicon = (data: MGnifyDatum): boolean =>\n  data.attributes['experiment-type'] !== 'amplicon';\n\nconst AnalysisPage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`analyses/${accession}`, {\n    include: 'downloads',\n  });\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: analysisData, included } = data as MGnifyResponseObj;\n\n  const tabs = [\n    { label: 'Overview', to: '#overview' },\n    { label: 'Quality control', to: '#qc' },\n    { label: 'Taxonomic analysis', to: '#taxonomic' },\n    isNotAmplicon(analysisData)\n      ? { label: 'Functional analysis', to: '#functional' }\n      : null,\n    hasAbundance(included)\n      ? { label: 'Abundance and comparison', to: '#abundance' }\n      : null,\n    isAssembly(analysisData) && isAtleastVersion5(analysisData)\n      ? { label: 'Pathways/Systems', to: '#path-systems' }\n      : null,\n    isAssembly(analysisData) && isAtleastVersion5(analysisData)\n      ? { label: 'Contig Viewer', to: '#contigs-viewer' }\n      : null,\n    { label: 'Download', to: '#download' },\n  ].filter(Boolean);\n\n  return (\n    <section className=\"vf-content\">\n      <h2>Analysis {accession}</h2>\n      <h4>\n        <Link\n          to={\n            isAssembly(analysisData)\n              ? `/assemblies/${analysisData.relationships.assembly.data.id}`\n              : `/runs/${analysisData.relationships.run.data.id}`\n          }\n        >\n          Other Analyses\n        </Link>\n      </h4>\n      <Tabs tabs={tabs} />\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <RouteForHash hash=\"#overview\" isDefault>\n            <Overview data={analysisData} />\n          </RouteForHash>\n          <RouteForHash hash=\"#qc\">\n            <QualityControl analysisData={analysisData} />\n          </RouteForHash>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default AnalysisPage;\n"],"names":["hash","isDefault","children","location","navigate","useEffect","replace","refreshPage","window","reload","error","type","className","style","backgroundColor","status","onClick","list","gridTemplateColumns","rowGap","map","key","value","Value","textAlign","tabs","label","Label","to","pathname","startsWith","trim","endsWith","slice","parts","split","length","data","experimentType","open","KeyValueList","relationships","study","id","sample","assembly","attributes","includes","run","filter","analysisData","summaryData","chartComponentRef","useRef","isAssembly","unit","capUnit","remaining","filtered","subsampled","analysisSummary","forEach","Number","sequence_count","options","chart","height","title","text","yAxis","min","xAxis","categories","plotOptions","series","stacking","credits","enabled","name","color","highcharts","ref","accession","useURLAccession","loading","useMGnifyData","Loading","size","FetchError","histData","x","y","lengthMax","Math","max","marginLeft","fontFamily","zoomType","fontSize","fontWeight","floor","plotBands","from","average_length","standard_deviation_length","toFixed","legend","navigation","buttonOptions","width","symbolX","symbolY","dataHist","pos","A","G","T","C","N","colors","headers","line","v","i","push","tickmarkPlacement","area","lineColor","lineWidth","marker","tooltip","shared","d","distData","average_gc_content","standard_deviation_gc_content","borderColor","marginTop","tickColor","length_max","grouping","shadow","borderWidth","length_min","pointPadding","pointFormatter","this","category","exporting","threshold","val","Object","fromEntries","units","isAtleastVersion5","isNotAmplicon","include","included","some","Boolean","Tabs","RouteForHash","Overview"],"sourceRoot":""}