{"version":3,"file":"js/726.0dd0ad52.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/Nav/RouteForHash/index.tsx","webpack://mgportalv2/./src/components/UI/ExtLink/index.tsx","webpack://mgportalv2/./src/components/UI/FetchError/index.tsx","webpack://mgportalv2/./src/components/UI/KeyValueList/index.tsx","webpack://mgportalv2/./src/components/UI/Tabs/index.tsx","webpack://mgportalv2/./src/hooks/useURLAccession/index.tsx","webpack://mgportalv2/./src/components/Genomes/Overview/index.tsx","webpack://mgportalv2/./src/pages/Genome/index.tsx","webpack://mgportalv2/./src/utils/taxon.ts"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\ntype PropsType = {\n  hash: string;\n  isDefault?: boolean;\n};\nconst RouteForHash: React.FC<PropsType> = ({\n  hash,\n  isDefault = false,\n  children,\n}) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (location.hash === '' && hash !== '' && isDefault) {\n      navigate(hash, { replace: true });\n    }\n  });\n\n  if (location.hash === hash) {\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport default RouteForHash;\n","import React from 'react';\n\nimport './style.css';\n\ntype ExtLinkProps = {\n  href: string;\n  title?: string;\n  id?: string;\n};\nconst ExtLink: React.FC<ExtLinkProps> = ({ href, id, title, children }) => (\n  <a\n    href={href}\n    title={title}\n    id={id}\n    target=\"_blank\"\n    rel=\"noreferrer noopener\"\n    className=\"mg-ext\"\n  >\n    <span className=\"icon icon-common icon-external-link-alt\" /> {children}\n  </a>\n);\n\nexport default ExtLink;\n","import React from 'react';\nimport { ErrorFromFetch, ErrorTypes } from 'hooks/data/useData';\n\nconst refreshPage = (): void => {\n  window.location.reload();\n};\n\nconst FetchError: React.FC<{ error: ErrorFromFetch }> = ({ error }) => {\n  if (!error || error.type === ErrorTypes.NullURL) return null;\n  return (\n    <div\n      className=\"vf-box vf-box-theme--primary vf-box--easy\"\n      style={{\n        backgroundColor: 'lemonchiffon',\n      }}\n    >\n      <h3 className=\"vf-box__heading\">\n        <span className=\"icon icon-common icon-exclamation-triangle\" /> Error\n        Fetching Data\n      </h3>\n      <p className=\"vf-box__text\">\n        {error?.type === ErrorTypes.FetchError &&\n          `There were problems with the request. [${error.error}]`}\n        {error?.type === ErrorTypes.NotOK &&\n          `The response from the server was not OK [Status: ${error.status}].`}\n        {error?.type === ErrorTypes.JSONError &&\n          `The recovered resource didn't follow the expected format [${error.error}].`}\n      </p>\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--tertiary vf-button--sm \"\n          onClick={refreshPage}\n        >\n          Refresh\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FetchError;\n","import React from 'react';\n\ntype KeyValueProps = {\n  list: { key: string; value: string | React.ElementType }[];\n};\n\nconst KeyValueList: React.FC<KeyValueProps> = ({ list }) => (\n  <div\n    className=\"vf-grid vf-grid__col-2\"\n    style={{\n      gridTemplateColumns: '1fr 2fr',\n      rowGap: '0.5rem',\n    }}\n  >\n    {list.map(({ key, value: Value }) => (\n      <React.Fragment key={key}>\n        <div style={{ textAlign: 'right' }}>{key}:</div>\n        <div>{typeof Value === 'string' ? Value : <Value />}</div>\n      </React.Fragment>\n    ))}\n  </div>\n);\n\nexport default KeyValueList;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Tab: React.FC = () => null;\n\ntype TabsProps = {\n  tabs: Array<{\n    label: string | React.ElementType;\n    to: string;\n  }>;\n};\nconst Tabs: React.FC<TabsProps> = ({ tabs }) => {\n  const location = useLocation();\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label: Label, to }) => (\n          <li className=\"vf-tabs__item\" key={to}>\n            <Link\n              className={`vf-tabs__link ${\n                to === location.pathname ||\n                (to.startsWith('#') && to === location.hash) ||\n                (to === '#' && location.hash === '')\n                  ? 'is-active'\n                  : ''\n              }`}\n              to={to}\n            >\n              {typeof Label === 'string' ? Label : <Label />}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import { useLocation } from 'react-router-dom';\n\nconst useURLAccession = (): string | undefined => {\n  const location = useLocation();\n  const parts = location.pathname.split('/');\n  return parts?.[parts.length - 1];\n};\n\nexport default useURLAccession;\n","import React from 'react';\nimport KeyValueList from 'components/UI/KeyValueList';\nimport ExtLink from 'components/UI/ExtLink';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport { cleanTaxLineage } from 'utils/taxon';\n\nconst ENA_VIEW_URL = 'https://www.ebi.ac.uk/ena/browser/view/';\n\nconst IMG_URL =\n  ' https://img.jgi.doe.gov/cgi-bin/m/main.cgi?section=TaxonDetail&page=taxonDetail&taxon_oid=';\nconst NCBI_ASSEMBLY_URL = 'https://www.ncbi.nlm.nih.gov/assembly/';\nconst NCBI_SAMPLE_URL = 'https://www.ncbi.nlm.nih.gov/biosample/?term=';\nconst NCBI_PROJECT_URL = 'https://www.ncbi.nlm.nih.gov/bioproject/';\nconst PATRIC_URL = 'https://www.patricbrc.org/view/Genome/';\n\ntype GenomeOverviewProps = {\n  data: MGnifyDatum;\n};\n\nconst GenomeOverview: React.FC<GenomeOverviewProps> = ({ data }) => {\n  return (\n    <section>\n      <div className=\"vf-stack\">\n        <details open>\n          <summary>\n            <b>Genome statistics</b>\n          </summary>\n\n          <KeyValueList\n            list={[\n              { key: 'Type', value: data.attributes.type as string },\n              { key: 'Length (bp)', value: String(data.attributes.length) },\n              {\n                key: 'Contamination',\n                value: `${data.attributes.contamination}%`,\n              },\n              {\n                key: 'Completeness',\n                value: `${data.attributes.completeness}%`,\n              },\n              {\n                key: 'Num. of contigs',\n                value: String(data.attributes['num-contigs']),\n              },\n              {\n                key: 'Total number of genomes in species',\n                value: String(data.attributes['num-genomes-total']),\n              },\n              {\n                key: 'Non-redundant number of genomes in species',\n                value: String(data.attributes['num-genomes-non-redundant']),\n              },\n              {\n                key: 'Number of proteins',\n                value: String(data.attributes['num-proteins']),\n              },\n              { key: 'GC content', value: `${data.attributes['gc-content']}%` },\n              {\n                key: 'Taxonomic lineage',\n                value: cleanTaxLineage(\n                  data.attributes['taxon-lineage'] as string,\n                  ' > '\n                ),\n              },\n              { key: 'N50', value: String(data.attributes['n-50']) },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Genome annotations</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'InterPro coverage',\n                value: `${data.attributes['ipr-coverage']}%`,\n              },\n              {\n                key: 'EggNog coverage',\n                value: `${data.attributes['eggnog-coverage']}%`,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Pan-genome statistics</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'Pan-genome size',\n                value: `${data.attributes['pangenome-size']}%`,\n              },\n              {\n                key: 'Pan-genome core size',\n                value: `${data.attributes['pangenome-core-size']}%`,\n              },\n              {\n                key: 'Pan-genome accessory size',\n                value: `${data.attributes['pangenome-accessory-size']}%`,\n              },\n              {\n                key: 'Pan-genome InterPro coverage',\n                value: `${data.attributes['pangenome-ipr-coverage']}%`,\n              },\n              {\n                key: 'Pan-genome EggNOG coverage',\n                value: `${data.attributes['pangenome-eggnog-coverage']}%`,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Genome RNA coverage</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'rRNA 5s total gene length coverage',\n                value: `${data.attributes['rna-5s']}%`,\n              },\n              {\n                key: 'rRNA 16s total gene length coverage',\n                value: `${data.attributes['rna-16s']}%`,\n              },\n              {\n                key: 'rRNA 23s total gene length coverage',\n                value: `${data.attributes['rna-23s']}%`,\n              },\n              {\n                key: 'tRNAs',\n                value: `${data.attributes.trnas}%`,\n              },\n              {\n                key: 'ncRNA',\n                value: `${data.attributes['nc-rnas']}%`,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Geographic metadata</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'Origin of representative genome',\n                value: data.attributes['geographic-origin'] as string,\n              },\n              {\n                key: 'Geographic range of pan-genome',\n                value: (data.attributes['geographic-range'] as string[]).join(\n                  ', '\n                ),\n              },\n            ]}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>External links</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'ENA genome accession',\n                value: data.attributes['ena-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          ENA_VIEW_URL + data.attributes['ena-genome-accession']\n                        }\n                      >\n                        {data.attributes['ena-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'ENA sample accession',\n                value: data.attributes['ena-sample-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          ENA_VIEW_URL + data.attributes['ena-sample-accession']\n                        }\n                      >\n                        {data.attributes['ena-sample-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'ENA study accession',\n                value: data.attributes['ena-study-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          ENA_VIEW_URL + data.attributes['ena-study-accession']\n                        }\n                      >\n                        {data.attributes['ena-study-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'IMG genome accession',\n                value: data.attributes['img-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={IMG_URL + data.attributes['img-genome-accession']}\n                      >\n                        {data.attributes['img-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'NCBI genome accession',\n                value: data.attributes['ncbi-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          NCBI_ASSEMBLY_URL +\n                          data.attributes['ncbi-genome-accession']\n                        }\n                      >\n                        {data.attributes['ncbi-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'NCBI sample accession',\n                value: data.attributes['ncbi-sample-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          NCBI_SAMPLE_URL +\n                          data.attributes['ncbi-sample-accession']\n                        }\n                      >\n                        {data.attributes['ncbi-sample-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'NCBI study accession',\n                value: data.attributes['ncbi-study-accessi']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          NCBI_PROJECT_URL +\n                          data.attributes['ncbi-study-accessi']\n                        }\n                      >\n                        {data.attributes['ncbi-study-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'PATRIC genome accession',\n                value: data.attributes['patric-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          PATRIC_URL +\n                          data.attributes['patric-genome-accession']\n                        }\n                      >\n                        {data.attributes['patric-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n      </div>\n    </section>\n  );\n};\nexport default GenomeOverview;\n","import React, { Suspense, lazy } from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Tabs from 'components/UI/Tabs';\nimport RouteForHash from 'components/Nav/RouteForHash';\nimport Overview from 'components/Genomes/Overview';\n// import GenomeBrowser from 'components/Genomes/Browser';\nimport { cleanTaxLineage } from 'utils/taxon';\n\nconst GenomeBrowser = lazy(() => import('components/Genomes/Browser'));\n\nconst tabs = [\n  { label: 'Overview', to: '#overview' },\n  { label: 'Browse genome', to: '#genome-browser' },\n  { label: 'COG analysis', to: '#cog-analysis' },\n  { label: 'KEGG class analysis', to: '#kegg-class-analysis' },\n  { label: 'KEGG module analysis', to: '#kegg-module-analysis' },\n  { label: 'Downloads', to: '#downloads' },\n];\n\nconst GenomePage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`genomes/${accession}`);\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: genomeData } = data as MGnifyResponseObj;\n  return (\n    <section className=\"vf-content\">\n      <h2>Genome {accession}</h2>\n      <p>\n        <b>Type:</b> {genomeData.attributes.type}\n      </p>\n      <p>\n        <b>Taxonomic lineage:</b>{' '}\n        {cleanTaxLineage(\n          genomeData.attributes['taxon-lineage'] as string,\n          ' > '\n        )}\n      </p>\n      <Tabs tabs={tabs} />\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <RouteForHash hash=\"#overview\" isDefault>\n            <Overview data={genomeData} />\n          </RouteForHash>\n          <RouteForHash hash=\"#genome-browser\">\n            <Suspense fallback={<Loading size=\"large\" />}>\n              <GenomeBrowser />\n            </Suspense>\n          </RouteForHash>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default GenomePage;\n","/**\n * Remove the s__ prefixes from a lineage.\n * @param {string} lineage string with the lineage `d__Bacteria;p__Proteobacteria;c__Gammapr...`\n * @param {string} replace replace string\n * @return {string}\n */\nexport function cleanTaxLineage(lineage: string, replace = ''): string {\n  return lineage.replace(/;/g, '').replace(/[d|p|c|o|f|g|s]__/g, replace);\n}\n\n/**\n * Retrieve a non-blank taxonomic identity from the species level or upwards\n * @param {string} fullLineage\n * @param {bool} removePrefix true if this should remove the 'd|p|c|o|f|g|s__' prefix\n * @return {string}\n */\nexport function getSimpleTaxLineage(\n  fullLineage: string,\n  removePrefix: boolean\n): string {\n  const l = fullLineage.split(';');\n  let head = l.pop();\n  // Remove all until species\n  while (head.indexOf('s__') === -1) {\n    head = l.pop();\n  }\n  // Find first non-null\n  while (head.length <= 3) {\n    head = l.pop();\n  }\n  if (removePrefix && head) {\n    return cleanTaxLineage(head);\n  }\n  return head;\n}\n"],"names":["hash","isDefault","children","location","navigate","useEffect","replace","href","id","title","target","rel","className","refreshPage","window","reload","error","type","style","backgroundColor","status","onClick","list","gridTemplateColumns","rowGap","map","key","value","Value","textAlign","tabs","label","Label","to","pathname","startsWith","parts","split","length","ENA_VIEW_URL","data","open","KeyValueList","attributes","String","contamination","completeness","filter","trnas","join","ExtLink","GenomeBrowser","lazy","accession","useURLAccession","loading","useMGnifyData","Loading","size","FetchError","genomeData","Tabs","RouteForHash","Overview","Suspense","fallback","cleanTaxLineage","lineage","getSimpleTaxLineage","fullLineage","removePrefix","l","head","pop","indexOf"],"sourceRoot":""}