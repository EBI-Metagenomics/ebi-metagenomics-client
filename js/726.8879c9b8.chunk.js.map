{"version":3,"file":"js/726.8879c9b8.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/Downloads/index.tsx","webpack://mgportalv2/./src/components/Nav/RouteForHash/index.tsx","webpack://mgportalv2/./src/components/UI/KeyValueList/index.tsx","webpack://mgportalv2/./src/components/UI/Tabs/index.tsx","webpack://mgportalv2/./src/hooks/useURLAccession/index.tsx","webpack://mgportalv2/./src/components/Genomes/Overview/index.tsx","webpack://mgportalv2/./src/pages/Genome/index.tsx","webpack://mgportalv2/./src/utils/taxon.ts","webpack://mgportalv2/./src/utils/urls.ts"],"sourcesContent":["import React, { useMemo } from 'react';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, MGnifyResponseList } from 'hooks/data/useData';\n\ntype DownloadsProps = {\n  endpoint: string;\n  accession: string;\n};\nconst Downloads: React.FC<DownloadsProps> = ({ endpoint, accession }) => {\n  const { data, loading, error } = useMGnifyData(\n    `${endpoint}/${accession}/downloads`,\n    {\n      page_size: 100,\n    }\n  );\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'attributes.description.description',\n      },\n      {\n        Header: 'Compression',\n        accessor: 'attributes.file-format.compression',\n        Cell: ({ cell }) => (cell.value ? 'Yes' : '-'),\n      },\n      {\n        Header: 'Format',\n        accessor: 'attributes.file-format.name',\n      },\n      {\n        Header: 'Action',\n        accessor: 'links.self',\n        Cell: ({ cell }) => (\n          <a\n            href={cell.value}\n            className=\"vf-button vf-button--link\"\n            style={{ whiteSpace: 'nowrap' }}\n            download\n          >\n            <span className=\"icon icon-common icon-download\" /> Download\n          </a>\n        ),\n      },\n    ],\n    []\n  );\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n\n  const categories = {};\n\n  (data as MGnifyResponseList).data.forEach((download) => {\n    if (!categories[download.attributes['group-type'] as string]) {\n      categories[download.attributes['group-type'] as string] = [];\n    }\n    categories[download.attributes['group-type'] as string].push(download);\n  });\n  return (\n    <div className=\"vf-stock\">\n      {Object.entries(categories).map(([category, downloads]) => (\n        <section key={category}>\n          <EMGTable\n            cols={columns}\n            data={downloads as Array<MGnifyDatum>}\n            Title={category}\n            loading={loading}\n            showPagination={false}\n          />\n          <hr />\n        </section>\n      ))}\n    </div>\n  );\n};\n\nexport default Downloads;\n","import React, { useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\ntype PropsType = {\n  hash: string;\n  isDefault?: boolean;\n};\nconst RouteForHash: React.FC<PropsType> = ({\n  hash,\n  isDefault = false,\n  children,\n}) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (location.hash === '' && hash !== '' && isDefault) {\n      navigate(hash, { replace: true });\n    }\n  });\n\n  if (location.hash === hash) {\n    // eslint-disable-next-line react/jsx-no-useless-fragment\n    return <div id={`tab-${hash.slice(1) || 'default'}`}>{children}</div>;\n  }\n  return null;\n};\n\nexport default RouteForHash;\n","import React from 'react';\n\ntype KeyValueProps = {\n  list: { key: string; value: string | React.ElementType }[];\n  dataCy?: string;\n};\n\nconst KeyValueList: React.FC<KeyValueProps> = ({ list, dataCy }) => (\n  <div\n    className=\"vf-grid vf-grid__col-2\"\n    style={{\n      gridTemplateColumns: '1fr 2fr',\n      rowGap: '0.5rem',\n    }}\n    data-cy={dataCy}\n  >\n    {list.map(({ key, value: Value }) => (\n      <React.Fragment key={key}>\n        <div style={{ textAlign: 'right' }}>{key}:</div>\n        <div>{typeof Value === 'string' ? Value : <Value />}</div>\n      </React.Fragment>\n    ))}\n  </div>\n);\n\nexport default KeyValueList;\n","import React, { useMemo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Tab: React.FC = () => null;\n\ntype TabsProps = {\n  tabs: Array<{\n    label: string | React.ElementType;\n    to: string;\n  }>;\n  preservedQueryParameters?: string[];\n};\nconst Tabs: React.FC<TabsProps> = ({ tabs, preservedQueryParameters }) => {\n  const location = useLocation();\n  const queryParamString = useMemo(() => {\n    if (!preservedQueryParameters) return '';\n    const preserved = new URLSearchParams();\n    const existing = new URLSearchParams(location.search);\n    let anyPreserved = false;\n    preservedQueryParameters.forEach((queryParam) => {\n      if (existing.has(queryParam))\n        preserved.append(queryParam, existing.get(queryParam));\n      anyPreserved = true;\n    });\n    return anyPreserved ? `?${preserved.toString()}` : '';\n  }, [preservedQueryParameters, location.search]);\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label: Label, to }) => (\n          <li className=\"vf-tabs__item\" key={to}>\n            <Link\n              className={`vf-tabs__link ${\n                to === location.pathname ||\n                (to.startsWith('#') && to === location.hash) ||\n                (to === '#' && location.hash === '')\n                  ? 'is-active'\n                  : ''\n              }`}\n              to={to + queryParamString}\n            >\n              {typeof Label === 'string' ? Label : <Label />}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import { useLocation } from 'react-router-dom';\n\nconst useURLAccession = (): string | undefined => {\n  const location = useLocation();\n  let { pathname } = location;\n  if (pathname.trim().endsWith('/')) pathname = pathname.trim().slice(0, -1);\n  const parts = pathname.split('/');\n  return parts?.[parts.length - 1];\n};\n\nexport default useURLAccession;\n","import React from 'react';\nimport KeyValueList from 'components/UI/KeyValueList';\nimport ExtLink from 'components/UI/ExtLink';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport { cleanTaxLineage } from 'utils/taxon';\nimport {\n  ENA_VIEW_URL,\n  IMG_URL,\n  NCBI_ASSEMBLY_URL,\n  NCBI_PROJECT_URL,\n  NCBI_SAMPLE_URL,\n  PATRIC_URL,\n} from 'utils/urls';\n\ntype GenomeOverviewProps = {\n  data: MGnifyDatum;\n};\n\nfunction notEmpty(listValue: unknown): boolean {\n  return !!listValue && listValue !== 'undefined' && listValue !== 'undefined%';\n}\n\nconst GenomeOverview: React.FC<GenomeOverviewProps> = ({ data }) => {\n  return (\n    <section>\n      <div className=\"vf-stack\">\n        <details open>\n          <summary>\n            <b>Genome statistics</b>\n          </summary>\n\n          <KeyValueList\n            list={[\n              { key: 'Type', value: data.attributes.type as string },\n              { key: 'Length (bp)', value: String(data.attributes.length) },\n              {\n                key: 'Contamination',\n                value: `${data.attributes.contamination}%`,\n              },\n              {\n                key: 'Completeness',\n                value: `${data.attributes.completeness}%`,\n              },\n              {\n                key: 'Num. of contigs',\n                value: String(data.attributes['num-contigs']),\n              },\n              {\n                key: 'Total number of genomes in species',\n                value: String(data.attributes['num-genomes-total']),\n              },\n              {\n                key: 'Non-redundant number of genomes in species',\n                value: String(data.attributes['num-genomes-non-redundant']),\n              },\n              {\n                key: 'Number of proteins',\n                value: String(data.attributes['num-proteins']),\n              },\n              { key: 'GC content', value: `${data.attributes['gc-content']}%` },\n              {\n                key: 'Taxonomic lineage',\n                value: cleanTaxLineage(\n                  data.attributes['taxon-lineage'] as string,\n                  ' > '\n                ),\n              },\n              { key: 'N50', value: String(data.attributes['n-50']) },\n            ].filter(({ value }) => notEmpty(value))}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Genome annotations</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'InterPro coverage',\n                value: `${data.attributes['ipr-coverage']}%`,\n              },\n              {\n                key: 'EggNog coverage',\n                value: `${data.attributes['eggnog-coverage']}%`,\n              },\n            ].filter(({ value }) => notEmpty(value))}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Pan-genome statistics</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'Pan-genome size',\n                value: `${data.attributes['pangenome-size']}`,\n              },\n              {\n                key: 'Pan-genome core size',\n                value: `${data.attributes['pangenome-core-size']}`,\n              },\n              {\n                key: 'Pan-genome accessory size',\n                value: `${data.attributes['pangenome-accessory-size']}`,\n              },\n            ].filter(({ value }) => notEmpty(value))}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Genome RNA coverage</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'rRNA 5s total gene length coverage',\n                value: `${data.attributes['rna-5s']}%`,\n              },\n              {\n                key: 'rRNA 16s total gene length coverage',\n                value: `${data.attributes['rna-16s']}%`,\n              },\n              {\n                key: 'rRNA 23s total gene length coverage',\n                value: `${data.attributes['rna-23s']}%`,\n              },\n              {\n                key: 'tRNAs',\n                value: `${data.attributes.trnas}`,\n              },\n              {\n                key: 'ncRNA',\n                value: `${data.attributes['nc-rnas']}`,\n              },\n            ].filter(({ value }) => notEmpty(value))}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Geographic metadata</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'Origin of representative genome',\n                value: data.attributes['geographic-origin'] as string,\n              },\n              {\n                key: 'Geographic range of pan-genome',\n                value: (data.attributes['geographic-range'] as string[]).join(\n                  ', '\n                ),\n              },\n            ]}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>External links</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'ENA genome accession',\n                value: data.attributes['ena-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          ENA_VIEW_URL + data.attributes['ena-genome-accession']\n                        }\n                      >\n                        {data.attributes['ena-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'ENA sample accession',\n                value: data.attributes['ena-sample-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          ENA_VIEW_URL + data.attributes['ena-sample-accession']\n                        }\n                      >\n                        {data.attributes['ena-sample-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'ENA study accession',\n                value: data.attributes['ena-study-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          ENA_VIEW_URL + data.attributes['ena-study-accession']\n                        }\n                      >\n                        {data.attributes['ena-study-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'IMG genome accession',\n                value: data.attributes['img-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={IMG_URL + data.attributes['img-genome-accession']}\n                      >\n                        {data.attributes['img-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'NCBI genome accession',\n                value: data.attributes['ncbi-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          NCBI_ASSEMBLY_URL +\n                          data.attributes['ncbi-genome-accession']\n                        }\n                      >\n                        {data.attributes['ncbi-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'NCBI sample accession',\n                value: data.attributes['ncbi-sample-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          NCBI_SAMPLE_URL +\n                          data.attributes['ncbi-sample-accession']\n                        }\n                      >\n                        {data.attributes['ncbi-sample-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'NCBI study accession',\n                value: data.attributes['ncbi-study-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          NCBI_PROJECT_URL +\n                          data.attributes['ncbi-study-accession']\n                        }\n                      >\n                        {data.attributes['ncbi-study-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'PATRIC genome accession',\n                value: data.attributes['patric-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          PATRIC_URL +\n                          data.attributes['patric-genome-accession']\n                        }\n                      >\n                        {data.attributes['patric-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n            ].filter(({ value }) => notEmpty(value))}\n          />\n        </details>\n      </div>\n    </section>\n  );\n};\nexport default GenomeOverview;\n","import React, { Suspense, lazy } from 'react';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Tabs from 'components/UI/Tabs';\nimport RouteForHash from 'components/Nav/RouteForHash';\nimport Overview from 'components/Genomes/Overview';\nimport Downloads from 'components/Downloads';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { cleanTaxLineage } from 'utils/taxon';\n\nconst GenomeBrowser = lazy(() => import('components/Genomes/Browser'));\nconst COGAnalysis = lazy(() => import('components/Genomes/COGAnalysis'));\nconst KEGGClassAnalysis = lazy(\n  () => import('components/Genomes/KEGGClassAnalysis')\n);\nconst KEGGModulesAnalysis = lazy(\n  () => import('components/Genomes/KEGGModulesAnalysis')\n);\n\nconst tabs = [\n  { label: 'Overview', to: '#overview' },\n  { label: 'Browse genome', to: '#genome-browser' },\n  { label: 'COG analysis', to: '#cog-analysis' },\n  { label: 'KEGG class analysis', to: '#kegg-class-analysis' },\n  { label: 'KEGG module analysis', to: '#kegg-module-analysis' },\n  { label: 'Downloads', to: '#downloads' },\n];\n\nconst GenomePage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`genomes/${accession}`);\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: genomeData } = data as MGnifyResponseObj;\n  return (\n    <section className=\"vf-content\">\n      <h2>Genome {accession}</h2>\n      <p>\n        <b>Type:</b> {genomeData.attributes.type}\n      </p>\n      <p>\n        <b>Taxonomic lineage:</b>{' '}\n        {cleanTaxLineage(\n          genomeData.attributes['taxon-lineage'] as string,\n          ' > '\n        )}\n      </p>\n      <Tabs tabs={tabs} />\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <RouteForHash hash=\"#overview\" isDefault>\n            <Overview data={genomeData} />\n          </RouteForHash>\n          <RouteForHash hash=\"#genome-browser\">\n            <Suspense fallback={<Loading size=\"large\" />}>\n              <GenomeBrowser />\n            </Suspense>\n          </RouteForHash>\n          <RouteForHash hash=\"#cog-analysis\">\n            <Suspense fallback={<Loading size=\"large\" />}>\n              <COGAnalysis />\n            </Suspense>\n          </RouteForHash>\n          <RouteForHash hash=\"#kegg-class-analysis\">\n            <Suspense fallback={<Loading size=\"large\" />}>\n              <KEGGClassAnalysis />\n            </Suspense>\n          </RouteForHash>\n          <RouteForHash hash=\"#kegg-module-analysis\">\n            <Suspense fallback={<Loading size=\"large\" />}>\n              <KEGGModulesAnalysis />\n            </Suspense>\n          </RouteForHash>\n          <RouteForHash hash=\"#downloads\">\n            <Downloads endpoint=\"genomes\" accession={accession} />\n          </RouteForHash>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default GenomePage;\n","/**\n * Remove the s__ prefixes from a lineage.\n * @param {string} lineage string with the lineage `d__Bacteria;p__Proteobacteria;c__Gammapr...`\n * @param {string} replace replace string\n * @return {string}\n */\nexport function cleanTaxLineage(lineage: string, replace = ''): string {\n  let cleaned = lineage\n    .replace(/;/g, '')\n    .replace(/[d|p|c|o|f|g|s]__/g, replace);\n  if (cleaned.startsWith(replace)) {\n    cleaned = cleaned.substring(replace.length).trimStart();\n  }\n  return cleaned;\n}\n\n/**\n * Retrieve a non-blank taxonomic identity from the species level or upwards\n * @param {string} fullLineage\n * @param {bool} removePrefix true if this should remove the 'd|p|c|o|f|g|s__' prefix\n * @return {string}\n */\nexport function getSimpleTaxLineage(\n  fullLineage: string,\n  removePrefix: boolean\n): string {\n  const l = fullLineage.split(';');\n  let head = l.pop();\n  // Remove all until species\n  while (head.indexOf('s__') === -1) {\n    head = l.pop();\n  }\n  // Find first non-null\n  while (head.length <= 3) {\n    head = l.pop();\n  }\n  if (removePrefix && head) {\n    return cleanTaxLineage(head);\n  }\n  return head;\n}\n\nexport const TAXONOMY_COLOURS = [\n  '#ABD3DB',\n  '#F2D9D0',\n  '#F2A477',\n  '#5F9595',\n  '#D9C4B8',\n  '#EEEEAB',\n  '#8990B3',\n  '#DEFFE3',\n  '#A0B392',\n  '#DEE3FF',\n  '#F2F2F2',\n];\n","export const ENA_VIEW_URL = 'https://www.ebi.ac.uk/ena/browser/view/';\nexport const IMG_URL =\n  ' https://img.jgi.doe.gov/cgi-bin/m/main.cgi?section=TaxonDetail&page=taxonDetail&taxon_oid=';\nexport const NCBI_ASSEMBLY_URL = 'https://www.ncbi.nlm.nih.gov/assembly/';\nexport const NCBI_SAMPLE_URL = 'https://www.ncbi.nlm.nih.gov/biosample/?term=';\nexport const NCBI_PROJECT_URL = 'https://www.ncbi.nlm.nih.gov/bioproject/';\nexport const PATRIC_URL = 'https://www.patricbrc.org/view/Genome/';\n"],"names":["endpoint","accession","data","loading","error","page_size","columns","useMemo","Header","accessor","Cell","cell","value","href","className","style","whiteSpace","download","size","categories","forEach","attributes","push","Object","entries","map","category","downloads","key","cols","Title","showPagination","hash","isDefault","children","location","navigate","useEffect","replace","id","slice","list","dataCy","gridTemplateColumns","rowGap","Value","textAlign","tabs","preservedQueryParameters","queryParamString","preserved","URLSearchParams","existing","search","anyPreserved","queryParam","has","append","get","toString","label","Label","to","pathname","startsWith","trim","endsWith","parts","split","length","notEmpty","listValue","open","KeyValueList","type","String","contamination","completeness","filter","trnas","join","ExtLink","GenomeBrowser","lazy","COGAnalysis","KEGGClassAnalysis","KEGGModulesAnalysis","useURLAccession","useMGnifyData","Loading","FetchError","genomeData","Tabs","RouteForHash","Overview","Suspense","fallback","Downloads","cleanTaxLineage","lineage","cleaned","substring","trimStart","getSimpleTaxLineage","fullLineage","removePrefix","l","head","pop","indexOf","TAXONOMY_COLOURS","ENA_VIEW_URL","IMG_URL","NCBI_ASSEMBLY_URL","NCBI_SAMPLE_URL","NCBI_PROJECT_URL","PATRIC_URL"],"sourceRoot":""}