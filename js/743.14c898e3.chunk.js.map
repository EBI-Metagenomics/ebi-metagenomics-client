{"version":3,"file":"js/743.14c898e3.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./node_modules/lodash-es/_unescapeHtmlChar.js","webpack://mgportalv2/./node_modules/lodash-es/_basePropertyOf.js","webpack://mgportalv2/./node_modules/lodash-es/unescape.js","webpack://mgportalv2/./src/components/Analysis/Analyses/index.tsx","webpack://mgportalv2/./src/components/Assembly/Assemblies/index.tsx","webpack://mgportalv2/./src/components/UI/Box/index.tsx","webpack://mgportalv2/./src/components/UI/KeyValueList/index.tsx","webpack://mgportalv2/./src/hooks/useURLAccession/index.tsx","webpack://mgportalv2/./src/pages/Run/index.tsx","webpack://mgportalv2/./src/utils/urls.ts","webpack://mgportalv2/./node_modules/lodash-es/_arrayMap.js","webpack://mgportalv2/./node_modules/lodash-es/_baseToString.js","webpack://mgportalv2/./node_modules/lodash-es/isArray.js","webpack://mgportalv2/./node_modules/lodash-es/toString.js"],"sourcesContent":["import basePropertyOf from './_basePropertyOf.js';\n\n/** Used to map HTML entities to characters. */\nvar htmlUnescapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\"\n};\n\n/**\n * Used by `_.unescape` to convert HTML entities to characters.\n *\n * @private\n * @param {string} chr The matched character to unescape.\n * @returns {string} Returns the unescaped character.\n */\nvar unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\nexport default unescapeHtmlChar;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default basePropertyOf;\n","import toString from './toString.js';\nimport unescapeHtmlChar from './_unescapeHtmlChar.js';\n\n/** Used to match HTML entities and HTML characters. */\nvar reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n    reHasEscapedHtml = RegExp(reEscapedHtml.source);\n\n/**\n * The inverse of `_.escape`; this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n * their corresponding characters.\n *\n * **Note:** No other HTML entities are unescaped. To unescape additional\n * HTML entities use a third-party library like [_he_](https://mths.be/he).\n *\n * @static\n * @memberOf _\n * @since 0.6.0\n * @category String\n * @param {string} [string=''] The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('fred, barney, &amp; pebbles');\n * // => 'fred, barney, & pebbles'\n */\nfunction unescape(string) {\n  string = toString(string);\n  return (string && reHasEscapedHtml.test(string))\n    ? string.replace(reEscapedHtml, unescapeHtmlChar)\n    : string;\n}\n\nexport default unescape;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { unescape } from 'lodash-es';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList, MGnifyDatum } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport { getBiomeIcon } from 'utils/biomes';\n\nconst initialPageSize = 10;\ntype AssociatedAnaysesProps = {\n  rootEndpoint: string;\n};\n\nconst AnalysesTable: React.FC<AssociatedAnaysesProps> = ({ rootEndpoint }) => {\n  const accession = useURLAccession();\n  const [queryParameters] = useQueryParametersState(\n    {\n      'analyses-page': 1,\n      'analyses-page_size': initialPageSize,\n      'analyses-order': '',\n    },\n    {\n      'analyses-page': Number,\n      'analyses-page_size': Number,\n    }\n  );\n  const { data, loading, error, isStale, downloadURL } = useMGnifyData(\n    `${rootEndpoint}/${accession}/analyses`,\n    {\n      include: 'sample',\n      page: queryParameters['analyses-page'] as number,\n      ordering: queryParameters['analyses-order'] as string,\n      page_size: queryParameters['analyses-page_size'] as number,\n    }\n  );\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !data) return <FetchError error={error} />;\n\n  if (!(data.data as MGnifyDatum[]).length) return null;\n\n  const samples = {};\n  (data.included || [])\n    ?.filter(({ type }) => type === 'samples')\n    .forEach((sample) => {\n      samples[sample.id as string] = {\n        description: sample.attributes['sample-desc'],\n        biome: (\n          sample.relationships as Record<string, { data: { id: string } }>\n        ).biome.data.id,\n      };\n    });\n  const columns = [\n    {\n      id: 'biome_id',\n      Header: 'Biome',\n      accessor: (analysis) =>\n        samples?.[analysis?.relationships?.sample?.data?.id]?.biome || '',\n      Cell: ({ cell }) => (\n        <span\n          className={`biome_icon icon_xs ${getBiomeIcon(cell.value)}`}\n          style={{ float: 'initial' }}\n        />\n      ),\n      className: 'mg-biome',\n    },\n    {\n      id: 'sample',\n      Header: 'Sample accession',\n      accessor: (analysis) => analysis?.relationships?.sample?.data?.id,\n      Cell: ({ cell }) => (\n        <Link to={`/samples/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'description_id',\n      Header: 'Sample description',\n      accessor: (analysis) =>\n        samples?.[analysis?.relationships?.sample?.data?.id]?.description || '',\n      Cell: ({ cell }) => unescape(cell.value),\n    },\n    {\n      id: 'assembly_run_id',\n      Header: ' Run / Assembly accession',\n      accessor: (analysis) => ({\n        assembly: analysis?.relationships?.assembly?.data?.id || '',\n        run: analysis?.relationships?.run?.data?.id || '',\n      }),\n      Cell: ({ cell }) => (\n        <>\n          {cell.value.assembly && (\n            <Link to={`/assemblies/${cell.value.assembly}`}>\n              {cell.value.assembly}\n            </Link>\n          )}\n          {cell.value.run && (\n            <Link to={`/runs/${cell.value.run}`}>{cell.value.run}</Link>\n          )}\n        </>\n      ),\n    },\n    {\n      id: 'pipeline_id',\n      Header: 'Pipeline version',\n      accessor: (analysis) => analysis.attributes['pipeline-version'],\n      Cell: ({ cell }) => (\n        <Link to={`/pipelines/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'analysis_id',\n      Header: 'Analysis accession',\n      accessor: (analysis) => analysis.id,\n      Cell: ({ cell }) => (\n        <Link to={`/analyses/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n  ];\n  const showPagination = (data.meta?.pagination?.count || 1) > initialPageSize;\n  return (\n    <EMGTable\n      cols={columns}\n      data={data as MGnifyResponseList}\n      Title=\"Analyses\"\n      initialPage={(queryParameters['analyses-page'] as number) - 1}\n      initialPageSize={initialPageSize}\n      className=\"mg-anlyses-table\"\n      loading={loading}\n      isStale={isStale}\n      namespace=\"analyses-\"\n      showPagination={showPagination}\n      downloadURL={downloadURL}\n    />\n  );\n};\n\nexport default AnalysesTable;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, MGnifyResponseList } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport InfoBanner from 'src/components/UI/InfoBanner';\n\nconst initialPageSize = 10;\n\nconst getURLByEndpoint = (endpoint: string, accession: string): string => {\n  if (endpoint === 'runs') return `runs/${accession}/assemblies`;\n  return 'assemblies';\n};\ntype AssociatedAssembliesProps = {\n  rootEndpoint: string;\n};\n\nconst AssociatedAssemblies: React.FC<AssociatedAssembliesProps> = ({\n  rootEndpoint,\n}) => {\n  const accession = useURLAccession();\n  const [queryParameters] = useQueryParametersState(\n    {\n      'assembly-page': 1,\n      'assembly-page_size': initialPageSize,\n      'assembly-order': '',\n    },\n    {\n      'assembly-page': Number,\n      'assembly-page_size': Number,\n    }\n  );\n  const url = getURLByEndpoint(rootEndpoint, accession);\n  const { data, loading, error, isStale, downloadURL } = useMGnifyData(url, {\n    sample_accession: rootEndpoint === 'samples' ? accession : undefined,\n    page: queryParameters['assembly-page'] as number,\n    ordering: queryParameters['assembly-order'] as string,\n    page_size: queryParameters['assembly-page_size'] as number,\n  });\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !data) return <FetchError error={error} />;\n  if (!(data.data as MGnifyDatum[]).length)\n    return <InfoBanner type=\"info\" title=\"No associated assemblies found.\" />;\n\n  const columns = [\n    {\n      Header: 'Assembly ID',\n      accessor: 'id',\n      Cell: ({ cell }) => (\n        <Link to={`/assemblies/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      Header: 'Experiment type',\n      accessor: 'attributes.experiment-type',\n    },\n    {\n      Header: 'WGS ID',\n      accessor: 'attributes.wgs-accession',\n    },\n    {\n      Header: 'Legacy ID',\n      accessor: 'attributes.legacy-accession',\n    },\n    {\n      Header: 'Pipeline versions',\n      accessor: 'relationships.pipelines.data',\n      Cell: ({ cell }) =>\n        (cell.value as { id: string }[]).map(({ id }) => id).join(', '),\n    },\n  ];\n  const showPagination = (data.meta?.pagination?.count || 1) > initialPageSize;\n\n  return (\n    <EMGTable\n      cols={columns}\n      data={data as MGnifyResponseList}\n      initialPage={(queryParameters['assembly-page'] as number) - 1}\n      initialPageSize={initialPageSize}\n      className=\"mg-assembly-table\"\n      loading={loading}\n      isStale={isStale}\n      namespace=\"assembly-\"\n      showPagination={showPagination}\n      downloadURL={downloadURL}\n    />\n  );\n};\n\nexport default AssociatedAssemblies;\n","import React from 'react';\n\nconst Box: React.FC<{ label: string; theme?: string }> = ({\n  label,\n  theme = 'primary',\n  children,\n}) => (\n  <div className=\"vf-grid\">\n    <div className={`vf-box vf-box--easy vf-box-theme--${theme}`}>\n      <h5 className=\"vf-box__heading\">{label}</h5>\n      <div className=\"vf-box__text\">{children}</div>\n    </div>\n  </div>\n);\n\nexport default Box;\n","import React from 'react';\n\ntype KeyValueProps = {\n  list: { key: string; value: string | React.ElementType }[];\n};\n\nconst KeyValueList: React.FC<KeyValueProps> = ({ list }) => (\n  <div\n    className=\"vf-grid vf-grid__col-2\"\n    style={{\n      gridTemplateColumns: '1fr 2fr',\n      rowGap: '0.5rem',\n    }}\n  >\n    {list.map(({ key, value: Value }) => (\n      <React.Fragment key={key}>\n        <div style={{ textAlign: 'right' }}>{key}:</div>\n        <div>{typeof Value === 'string' ? Value : <Value />}</div>\n      </React.Fragment>\n    ))}\n  </div>\n);\n\nexport default KeyValueList;\n","import { useLocation } from 'react-router-dom';\n\nconst useURLAccession = (): string | undefined => {\n  const location = useLocation();\n  let { pathname } = location;\n  if (pathname.trim().endsWith('/')) pathname = pathname.trim().slice(0, -1);\n  const parts = pathname.split('/');\n  return parts?.[parts.length - 1];\n};\n\nexport default useURLAccession;\n","import React from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Box from 'components/UI/Box';\nimport KeyValueList from 'components/UI/KeyValueList';\nimport ExtLink from 'components/UI/ExtLink';\nimport { Link } from 'react-router-dom';\nimport AssociatedAssemblies from 'components/Assembly/Assemblies';\nimport AssociatedAnalyses from 'components/Analysis/Analyses';\nimport { ENA_VIEW_URL } from 'utils/urls';\n\nconst RunPage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`runs/${accession}`);\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: runData } = data as MGnifyResponseObj;\n\n  const details = [\n    {\n      key: 'Study',\n      value: () => (\n        <Link to={`/studies/${runData.relationships.study.data.id}`}>\n          {runData.relationships.study.data.id}\n        </Link>\n      ),\n    },\n    {\n      key: 'Sample',\n      value: () => (\n        <Link to={`/samples/${runData.relationships.sample.data.id}`}>\n          {runData.relationships.sample.data.id}\n        </Link>\n      ),\n    },\n    {\n      key: 'ENA accession',\n      value: () => (\n        <ExtLink href={`${ENA_VIEW_URL}${runData.id}`}>{runData.id}</ExtLink>\n      ),\n    },\n    {\n      key: 'Experiment type',\n      value: String(runData.attributes['experiment-type']),\n    },\n    {\n      key: 'Instrument model',\n      value: String(runData.attributes['instrument-model']),\n    },\n    {\n      key: '\tInstrument platform type',\n      value: String(runData.attributes['instrument-platform']),\n    },\n  ];\n  return (\n    <section className=\"vf-content\">\n      <h2>Run: {runData?.id || ''}</h2>\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <Box label=\"Description\">\n            <KeyValueList list={details} />\n          </Box>\n          <Box label=\"Associated analyses\">\n            <AssociatedAnalyses rootEndpoint=\"runs\" />\n          </Box>\n          <Box label=\"Associated assemblies\">\n            <AssociatedAssemblies rootEndpoint=\"runs\" />\n          </Box>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default RunPage;\n","export const ENA_VIEW_URL = 'https://www.ebi.ac.uk/ena/browser/view/';\nexport const IMG_URL =\n  ' https://img.jgi.doe.gov/cgi-bin/m/main.cgi?section=TaxonDetail&page=taxonDetail&taxon_oid=';\nexport const NCBI_ASSEMBLY_URL = 'https://www.ncbi.nlm.nih.gov/assembly/';\nexport const NCBI_SAMPLE_URL = 'https://www.ncbi.nlm.nih.gov/biosample/?term=';\nexport const NCBI_PROJECT_URL = 'https://www.ncbi.nlm.nih.gov/bioproject/';\nexport const PATRIC_URL = 'https://www.patricbrc.org/view/Genome/';\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n"],"names":["object","key","undefined","reEscapedHtml","reHasEscapedHtml","RegExp","source","rootEndpoint","accession","useURLAccession","queryParameters","Number","data","loading","error","isStale","downloadURL","useMGnifyData","include","page","ordering","page_size","Loading","size","FetchError","length","samples","included","filter","type","forEach","sample","id","description","attributes","biome","relationships","columns","Header","accessor","analysis","Cell","cell","className","value","style","float","to","string","test","replace","assembly","run","showPagination","meta","pagination","count","EMGTable","cols","Title","initialPage","initialPageSize","namespace","url","endpoint","getURLByEndpoint","sample_accession","title","map","join","label","theme","children","list","gridTemplateColumns","rowGap","Value","textAlign","location","pathname","trim","endsWith","slice","parts","split","runData","details","study","href","String","ENA_VIEW_URL","IMG_URL","NCBI_ASSEMBLY_URL","NCBI_SAMPLE_URL","NCBI_PROJECT_URL","PATRIC_URL","array","iteratee","index","result","Array","symbolProto","symbolToString","toString","baseToString","call","isArray"],"sourceRoot":""}