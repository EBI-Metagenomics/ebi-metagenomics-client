{"version":3,"file":"js/794.89c6e959.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/Genomes/Browser/Popup/index.tsx","webpack://mgportalv2/./src/components/UI/ArrowForLink/index.tsx","webpack://mgportalv2/./src/components/UI/EMGModal/index.tsx","webpack://mgportalv2/./src/components/UI/FileUploaderButton/index.tsx","webpack://mgportalv2/./src/components/UI/Hierarchy/index.tsx","webpack://mgportalv2/./src/components/UI/InfoBanner/index.tsx","webpack://mgportalv2/./src/components/UI/KeyValueList/index.tsx","webpack://mgportalv2/./src/components/UI/Tooltip/index.tsx","webpack://mgportalv2/./src/pages/Analysis/AnalysisContext.tsx","webpack://mgportalv2/./src/components/Analysis/Overview/index.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/QCChart.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/ContigsHistogram.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/NucleotidesHistogram.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/ContigsDistribution.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/SeqLengthChart.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/GCContentChart.tsx","webpack://mgportalv2/./src/components/Analysis/QualityControl/index.tsx","webpack://mgportalv2/./src/components/Analysis/ContigViewer/ContigsQueryContext.tsx","webpack://mgportalv2/./src/components/UI/EMGTable/CursorPagination/index.tsx","webpack://mgportalv2/./src/components/Analysis/ContigViewer/Table/index.tsx","webpack://mgportalv2/./src/components/Analysis/ContigViewer/GFFCompare/gff_db.ts","webpack://mgportalv2/./src/components/UI/PlainTable/index.tsx","webpack://mgportalv2/./src/components/Analysis/ContigViewer/GFFCompare/index.tsx","webpack://mgportalv2/./src/components/Analysis/ContigViewer/index.tsx","webpack://mgportalv2/./src/components/UI/TabsForQueryParameter/index.tsx","webpack://mgportalv2/./src/components/Analysis/Taxonomy/PhylumTable/index.tsx","webpack://mgportalv2/./src/components/Analysis/Taxonomy/PhylumCharts/Pie/index.tsx","webpack://mgportalv2/./src/components/Analysis/Taxonomy/PhylumCharts/Column/index.tsx","webpack://mgportalv2/./src/components/Analysis/Taxonomy/PhylumCharts/StackedColumn/index.tsx","webpack://mgportalv2/./src/components/Analysis/Taxonomy/PhylumCharts/index.tsx","webpack://mgportalv2/./src/components/Analysis/Taxonomy/index.tsx","webpack://mgportalv2/./src/hooks/data/useInterProMatchesProvider/index.tsx","webpack://mgportalv2/./src/components/Analysis/Functional/InterPro/InterProMatchesChart.tsx","webpack://mgportalv2/./src/components/Analysis/Functional/InterPro/QCChart.tsx","webpack://mgportalv2/./src/components/Analysis/Functional/InterPro/index.tsx","webpack://mgportalv2/./src/components/Analysis/Functional/GO/BarChart.tsx","webpack://mgportalv2/./src/components/Analysis/Functional/GO/PieChart.tsx","webpack://mgportalv2/./src/components/Analysis/Functional/GO/index.tsx","webpack://mgportalv2/./src/components/Analysis/Functional/Pfam/Table.tsx","webpack://mgportalv2/./src/components/Analysis/Functional/Pfam/BarChart.tsx","webpack://mgportalv2/./src/components/Analysis/Functional/Pfam/index.tsx","webpack://mgportalv2/./src/components/Analysis/Functional/KO/Table.tsx","webpack://mgportalv2/./src/components/Analysis/Functional/KO/BarChart.tsx","webpack://mgportalv2/./src/components/Analysis/Functional/KO/index.tsx","webpack://mgportalv2/./src/components/Analysis/Functional/index.tsx","webpack://mgportalv2/./src/components/Analysis/Pathways/KeggModule/Table.tsx","webpack://mgportalv2/./src/components/Analysis/Pathways/KeggModule/BarChart.tsx","webpack://mgportalv2/./src/components/Analysis/Pathways/KeggModule/index.tsx","webpack://mgportalv2/./src/components/Analysis/Pathways/AntiSMASH/Table.tsx","webpack://mgportalv2/./src/components/Analysis/Pathways/AntiSMASH/BarChart.tsx","webpack://mgportalv2/./src/components/Analysis/Pathways/AntiSMASH/index.tsx","webpack://mgportalv2/./src/components/Analysis/Pathways/GenomeProperties/index.tsx","webpack://mgportalv2/./src/components/Analysis/Pathways/index.tsx","webpack://mgportalv2/./src/pages/Analysis/index.tsx"],"sourcesContent":["import React from 'react';\nimport ExtLink from 'components/UI/ExtLink';\nimport './style.css';\n\ntype PropertyDataType = { name: string; value: string | number };\ntype GenomeBrowserPopupProps = {\n  data: PropertyDataType[];\n};\ntype FormattedData = {\n  name?: string;\n  gene?: string;\n  product?: string;\n  properties: {\n    title: string;\n    data: {\n      name?: string;\n      Value?: string | React.ElementType;\n    }[];\n  }[];\n};\n\nconst antiSMASHLabels = {\n  biosynthetic: 'Core biosynthetic gene',\n  'biosynthetic-additional': 'Additional biosynthetic gene',\n  regulatory: 'Regulatory genes',\n  transport: 'Transport-related gene',\n  resistance: 'Resistance genes',\n};\n\nconst MultipleField: React.FC<{\n  value: string;\n  url?: string;\n  decodeValue?: boolean;\n}> = ({ value, url, decodeValue }) => {\n  if (!value) return null;\n  const parts = value.split(',');\n  return (\n    <ul className=\"vf-list\">\n      {parts.map((part) => {\n        const text = decodeValue ? decodeURIComponent(part) : part;\n        return (\n          <li key={part} className=\"igv-popup-multiple-field-item\">\n            {url ? <ExtLink href={`${url}${part}`}>{text}</ExtLink> : text}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\n/**\n * Calculate the property length.\n * @return {int} the length or undefined\n */\nconst getProtLength = (attributes: {\n  start?: string | number | null;\n  end?: string | number | null;\n}): number => {\n  const start =\n    typeof attributes.start === 'string'\n      ? parseInt(attributes.start, 10)\n      : attributes.start;\n  const end =\n    typeof attributes.end === 'string'\n      ? parseInt(attributes.end, 10)\n      : attributes.end;\n  if (\n    Number.isNaN(start) ||\n    Number.isNaN(end) ||\n    start === null ||\n    end === null\n  ) {\n    return undefined;\n  }\n  return Math.ceil((end - start) / 3);\n};\nconst formatData = (rawData: PropertyDataType[]): FormattedData => {\n  const attributes: {\n    [name: string]: string | null;\n  } = rawData.reduce((memo, el) => {\n    // eslint-disable-next-line no-param-reassign\n    if (el.name) memo[el.name.toLowerCase()] = el.value;\n    return memo;\n  }, {});\n\n  const functionalData = {\n    title: 'Functional annotation',\n    data: [\n      {\n        name: 'E.C Number',\n        Value:\n          attributes.ecnumber &&\n          (() => (\n            <MultipleField\n              value={attributes.ecnumber}\n              url=\"https://enzyme.expasy.org/EC/\"\n            />\n          )),\n      },\n      {\n        name: 'Pfam',\n        Value:\n          attributes.pfam &&\n          (() => (\n            <MultipleField\n              value={attributes.pfam}\n              url=\"https://pfam.xfam.org/family/\"\n            />\n          )),\n      },\n      {\n        name: 'KEGG',\n        Value:\n          attributes.kegg &&\n          (() => (\n            <MultipleField\n              value={attributes.kegg}\n              url=\"https://www.genome.jp/dbget-bin/www_bget?\"\n            />\n          )),\n      },\n      {\n        name: 'eggNOG',\n        Value: attributes.eggnog && decodeURIComponent(attributes.eggnog),\n      },\n      {\n        name: 'COG',\n        Value:\n          attributes.cog && (() => <MultipleField value={attributes.cog} />),\n      },\n      {\n        name: 'GO',\n        Value:\n          attributes.go &&\n          (() => (\n            <MultipleField\n              value={attributes.go}\n              url=\"https://www.ebi.ac.uk/ols/search?q=\"\n            />\n          )),\n      },\n      {\n        name: 'InterPro',\n        Value:\n          attributes.interpro &&\n          (() => (\n            <MultipleField\n              value={attributes.interpro}\n              url=\"https://www.ebi.ac.uk/interpro/entry/InterPro/'\"\n            />\n          )),\n      },\n      {\n        // antiSMASH\n        name: 'Gene type',\n        Value:\n          attributes.as_type &&\n          (antiSMASHLabels[attributes.as_type] || attributes.as_type),\n      },\n      {\n        // Notes are URL encoded during the GFF generation\n        name: 'Notes',\n        Value:\n          attributes.as_notes &&\n          (() => (\n            <MultipleField value={decodeURIComponent(attributes.as_notes)} />\n          )),\n      },\n      {\n        name: 'Cluster',\n        Value:\n          attributes.as_gene_clusters &&\n          (() => <MultipleField value={attributes.as_gene_clusters} />),\n      },\n    ],\n  };\n  const otherData = {\n    title: 'Feature details',\n    data: [\n      {\n        name: 'Type',\n        Value: attributes.type,\n      },\n      {\n        name: 'Inference',\n        Value: attributes.inference,\n      },\n      {\n        name: 'Start / End',\n        Value: `${attributes.start}/${attributes.end}`,\n      },\n      {\n        name: 'Protein length',\n        Value: String(getProtLength(attributes)),\n      },\n    ],\n  };\n\n  const metaproteomicData = {\n    title: 'Metaproteomics',\n    data: [\n      {\n        name: 'Peptide sequences',\n        Value:\n          attributes.peptide_sequences &&\n          (() => (\n            <MultipleField value={attributes.peptide_sequences} decodeValue />\n          )),\n      },\n      {\n        name: 'Pride ID',\n        Value:\n          attributes.pride_id &&\n          (() => (\n            <ExtLink\n              href={`https://www.ebi.ac.uk/pride/archive/projects/${attributes.pride_id}`}\n            >\n              {attributes.pride_id}\n            </ExtLink>\n          )),\n      },\n    ],\n  };\n\n  return {\n    name: attributes.id,\n    gene: attributes.gene,\n    product: attributes.product,\n    properties: [functionalData, otherData, metaproteomicData],\n  };\n};\n\nconst GenomeBrowserPopup: React.FC<GenomeBrowserPopupProps> = ({ data }) => {\n  const { name, gene, product, properties } = formatData(data);\n  return (\n    <>\n      <table className=\"stack hover igv-popover-table\">\n        <caption className=\"igv-popover-section-header\">Feature</caption>\n        <tbody>\n          {name && (\n            <tr>\n              <td className=\"igv-popover-table-td-name\">ID</td>\n              <td>{name}</td>\n            </tr>\n          )}\n          {gene && (\n            <tr>\n              <td className=\"igv-popover-table-td-name\">Gene</td>\n              <td>\n                <em>{gene}</em>\n              </td>\n            </tr>\n          )}\n          {product && (\n            <tr>\n              <td className=\"igv-popover-table-td-name\">Product</td>\n              <td>{product}</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n      {properties.map((property) => (\n        <table className=\"stack hover igv-popover-table\" key={property.title}>\n          {property.data.filter((d) => !!d.Value).length > 0 && (\n            <caption className=\"igv-popover-section-header\">\n              {property.title}\n            </caption>\n          )}\n          <tbody>\n            {property.data\n              .map(\n                ({ name: pName, Value }) =>\n                  Value && (\n                    <tr key={pName}>\n                      <td className=\"igv-popover-table-td-name\">{pName}</td>\n                      <td>{typeof Value === 'string' ? Value : <Value />}</td>\n                    </tr>\n                  )\n              )\n              .filter(Boolean)}\n          </tbody>\n        </table>\n      ))}\n    </>\n  );\n};\n\nexport default GenomeBrowserPopup;\n","/* eslint-disable max-len */\nimport React from 'react';\n\nconst ArrowForLink: React.FC = () => (\n  <svg\n    aria-hidden=\"true\"\n    className=\"vf-card__heading__icon | vf-icon vf-icon-arrow--inline-end\"\n    width=\"1em\"\n    height=\"1em\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    preserveAspectRatio=\"none\"\n  >\n    <path\n      d=\"M0 12c0 6.627 5.373 12 12 12s12-5.373 12-12S18.627 0 12 0C5.376.008.008 5.376 0 12zm13.707-5.209l4.5 4.5a1 1 0 010 1.414l-4.5 4.5a1 1 0 01-1.414-1.414l2.366-2.367a.25.25 0 00-.177-.424H6a1 1 0 010-2h8.482a.25.25 0 00.177-.427l-2.366-2.368a1 1 0 011.414-1.414z\"\n      fill=\"currentColor\"\n      fillRule=\"nonzero\"\n    />\n  </svg>\n);\n\nexport default ArrowForLink;\n","import React, { ReactChild, ReactChildren } from 'react';\n\nimport Modal from 'react-modal';\n\nimport './style.css';\n\nModal.setAppElement('#root');\n\nconst modalStyle = {\n  overlay: {\n    zIndex: 10000,\n    position: 'fixed',\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    maxHeight: 'calc(100vh - 5em)',\n    overflowY: 'auto',\n  },\n};\n\ntype ModalProps = {\n  isOpen: boolean;\n  onRequestClose: () => void;\n  contentLabel: string;\n  children: ReactChild | ReactChild[] | ReactChildren | ReactChildren[];\n};\nconst EMGModal: React.FC<ModalProps> = ({\n  isOpen,\n  onRequestClose,\n  contentLabel,\n  children,\n}) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      contentLabel={contentLabel}\n      style={modalStyle}\n    >\n      <div className=\"emg-modal-close\">\n        <button\n          onClick={onRequestClose}\n          className=\"vf-button vf-button--link\"\n          type=\"button\"\n        >\n          <i className=\"icon icon-common icon-times\" />\n        </button>\n      </div>\n      {children}\n    </Modal>\n  );\n};\n\nexport default EMGModal;\n","import React, { useRef, FormEvent } from 'react';\n\ntype FileUploaderButtonProps = {\n  onChange: (event: FormEvent) => void;\n  accept?: string;\n};\nconst FileUploaderButton: React.FC<FileUploaderButtonProps> = ({\n  onChange,\n  accept,\n}) => {\n  const fileInput = useRef(null);\n  return (\n    <>\n      <input\n        type=\"file\"\n        hidden\n        ref={fileInput}\n        onChange={onChange}\n        accept={accept}\n      />\n      <button\n        className=\"vf-button vf-button--primary vf-button--sm\"\n        onClick={() => fileInput.current?.click()}\n        type=\"button\"\n      >\n        Browse for file...\n      </button>\n    </>\n  );\n};\n\nexport default FileUploaderButton;\n","import React, { useState, useEffect } from 'react';\nimport './style.css';\n\nconst ANIMATION_TIME = 400;\n\nexport type Node = {\n  name: string;\n  countgen?: number;\n  type?: string;\n  children?: Node[];\n  [key: string]: unknown;\n};\n\ninterface HierarchyNodeProps {\n  tree: Node;\n  depth?: number;\n  shouldExpand?: boolean;\n  collapsing?: boolean;\n  getLabel?: (node: Node) => string | React.ReactElement;\n  triggerExpandAll?: boolean;\n  triggerCollapseAll?: boolean;\n}\nconst HierarchyNode: React.FC<HierarchyNodeProps> = ({\n  tree,\n  depth = 0,\n  shouldExpand = true,\n  collapsing = false,\n  getLabel = (node) => node.name,\n  triggerExpandAll = false,\n  triggerCollapseAll = false,\n}) => {\n  const [displayChildren, setDisplayChildren] = useState(shouldExpand);\n  const [triggerExpandAllChildren, setTriggerExpandAllChildren] =\n    useState(triggerExpandAll);\n  const [show, setShow] = useState(false);\n  const [hideChildren, setHideChildren] = useState(false);\n  useEffect(() => setShow(true), []);\n  useEffect(() => {\n    if (hideChildren) {\n      setTimeout(() => setDisplayChildren(false), ANIMATION_TIME);\n    }\n  }, [hideChildren]);\n  useEffect(() => {\n    if (triggerExpandAll) {\n      setDisplayChildren(true);\n      setTriggerExpandAllChildren(true);\n      setTimeout(() => setTriggerExpandAllChildren(false), ANIMATION_TIME);\n    }\n  }, [triggerExpandAll]);\n  useEffect(() => {\n    if (triggerCollapseAll) {\n      setDisplayChildren(false);\n    }\n  }, [triggerCollapseAll]);\n  const handleExpanderClick = (): void => {\n    setHideChildren(displayChildren);\n    if (!displayChildren) setDisplayChildren(true);\n  };\n  return (\n    <div\n      style={{\n        marginLeft: `${depth * 0.5}rem`,\n      }}\n    >\n      <div\n        className={`mg-hierarchy-selector ${show && !collapsing ? 'show' : ''}`}\n      >\n        {tree.children?.length ? (\n          <button\n            type=\"button\"\n            className=\"mg-expander\"\n            onClick={handleExpanderClick}\n          >\n            {displayChildren ? '▾' : '▸'}\n          </button>\n        ) : (\n          <span className=\"mg-hierarchy-spacer\" />\n        )}\n        <div>\n          <span className=\"mg-hierarchy-label\">\n            {getLabel(tree)}{' '}\n            {tree.countgen && (\n              <span className=\"mg-number\">{tree.countgen}</span>\n            )}\n          </span>\n        </div>\n      </div>\n      {tree.children &&\n        tree.children.length > 0 &&\n        displayChildren &&\n        tree.children.map((child) => (\n          <HierarchyNode\n            key={child.name}\n            tree={child}\n            depth={depth + 1}\n            shouldExpand={tree.countgen === 1 && child.countgen === 1}\n            getLabel={getLabel}\n            collapsing={hideChildren}\n            triggerExpandAll={triggerExpandAllChildren}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default HierarchyNode;\n","import React from 'react';\n\ntype InfoBannerProps = {\n  type?: 'info' | 'warning' | 'error';\n  title?: string;\n};\nconst InfoBanner: React.FC<InfoBannerProps> = ({ type, title, children }) => {\n  return (\n    <div\n      className={`vf-banner vf-banner--alert ${\n        ['warning', 'error'].includes(type)\n          ? 'vf-banner--warning'\n          : 'vf-banner--info'\n      }`}\n    >\n      {(title || type) && (\n        <h3 className=\"vf-box__heading\">\n          {type === 'info' && <span className=\"icon icon-common icon-info\" />}\n          {type === 'error' && <span className=\"icon icon-common icon-bolt\" />}\n          {type === 'warning' && (\n            <span className=\"icon icon-common icon-exclamation-triangle\" />\n          )}{' '}\n          {title || ''}\n        </h3>\n      )}\n      <div className=\"vf-banner__content\">{children}</div>\n    </div>\n  );\n};\n\nexport default InfoBanner;\n","import React from 'react';\n\ntype KeyValueProps = {\n  list: { key: string; value: string | React.ElementType }[];\n};\n\nconst KeyValueList: React.FC<KeyValueProps> = ({ list }) => (\n  <div\n    className=\"vf-grid vf-grid__col-2\"\n    style={{\n      gridTemplateColumns: '1fr 2fr',\n      rowGap: '0.5rem',\n    }}\n  >\n    {list.map(({ key, value: Value }) => (\n      <React.Fragment key={key}>\n        <div style={{ textAlign: 'right' }}>{key}:</div>\n        <div>{typeof Value === 'string' ? Value : <Value />}</div>\n      </React.Fragment>\n    ))}\n  </div>\n);\n\nexport default KeyValueList;\n","import React from 'react';\nimport Tippy from '@tippyjs/react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport 'tippy.js/dist/tippy.css';\n\ntype TooltipProps = {\n  content: React.ReactNode;\n  children?: React.ReactNode;\n};\n\nconst Tooltip: React.FC<TooltipProps> = ({ content, children }) => (\n  <Tippy content={content}>{children as React.ReactElement}</Tippy>\n);\nexport default Tooltip;\n","import React from 'react';\n\nconst AnalysisContext = React.createContext({\n  overviewData: null,\n});\n\nexport default AnalysisContext;\n","import React, { useContext } from 'react';\nimport KeyValueList from 'components/UI/KeyValueList';\nimport { Link } from 'react-router-dom';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\n\nfunction isAssembly(experimentType: string): boolean {\n  return ['assembly', 'hybrid_assembly', 'long_reads_assembly'].includes(\n    experimentType\n  );\n}\n\nconst AnalysisOverview: React.FC = () => {\n  const { overviewData: data } = useContext(AnalysisContext);\n\n  return (\n    <section>\n      <div className=\"vf-stack\">\n        <details open>\n          <summary>\n            <b>Description</b>\n          </summary>\n\n          <KeyValueList\n            list={[\n              {\n                key: 'Study',\n                value:\n                  data.relationships?.study?.data?.id &&\n                  (() => (\n                    <Link to={`/studies/${data.relationships.study.data.id}`}>\n                      {data.relationships.study.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Sample',\n                value:\n                  data.relationships?.sample?.data?.id &&\n                  (() => (\n                    <Link to={`/samples/${data.relationships.sample.data.id}`}>\n                      {data.relationships.sample.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Assembly',\n                value:\n                  data.relationships?.assembly?.data?.id &&\n                  isAssembly(data.attributes['experiment-type'] as string) &&\n                  (() => (\n                    <Link\n                      to={`/assemblies/${data.relationships.assembly.data.id}`}\n                    >\n                      {data.relationships.assembly.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Run',\n                value:\n                  data.relationships?.run?.data?.id &&\n                  (() => (\n                    <Link to={`/runs/${data.relationships.run.data.id}`}>\n                      {data.relationships.run.data.id}\n                    </Link>\n                  )),\n              },\n              {\n                key: 'Pipeline version',\n                value:\n                  data.attributes?.['pipeline-version'] &&\n                  (() => (\n                    <Link\n                      to={`/pipelines/${data.attributes['pipeline-version']}`}\n                    >\n                      {data.attributes['pipeline-version']}\n                    </Link>\n                  )),\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Experiment details</b>\n          </summary>\n          <KeyValueList\n            list={[\n              // TODO: the lists should obtained from runs for hybrid_assembly\n              {\n                key: 'Experiment type',\n                value: data.attributes['experiment-type'] as string,\n              },\n              {\n                key: 'Instrument model',\n                value: data.attributes['instrument-model'] as string,\n              },\n              {\n                key: 'Instrument platform',\n                value: data.attributes['instrument-platform'] as string,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n      </div>\n    </section>\n  );\n};\nexport default AnalysisOverview;\n","import React, { useRef, useContext } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\n\ntype QualityControlProps = {\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst QualityControlChart: React.FC<QualityControlProps> = ({\n  summaryData,\n}) => {\n  const { overviewData: analysisData } = useContext(AnalysisContext);\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const isAssembly = analysisData.attributes['experiment-type'] === 'assembly';\n\n  const unit = isAssembly ? 'contigs' : 'reads';\n  const capUnit = isAssembly ? 'Contigs' : 'Reads';\n\n  const remaining = [0, 0, 0, 0, 0];\n  const filtered = [0, 0, 0, 0, 0];\n  const subsampled = [0, 0, 0, 0, 0];\n\n  const analysisSummary = {};\n  (\n    (analysisData.attributes?.['analysis-summary'] as {\n      key: string;\n      value: string;\n    }[]) || []\n  ).forEach(({ key, value }) => {\n    analysisSummary[key] = value;\n  });\n\n  subsampled[4] = Number(summaryData.sequence_count);\n  remaining[0] = Number(analysisSummary['Submitted nucleotide sequences']);\n  remaining[1] = Number(\n    analysisSummary['Nucleotide sequences after format-specific filtering']\n  );\n  remaining[2] = Number(\n    analysisSummary['Nucleotide sequences after length filtering']\n  );\n  remaining[3] = Number(\n    analysisSummary['Nucleotide sequences after undetermined bases filtering']\n  );\n  filtered[2] = remaining[1] - remaining[2];\n  filtered[1] = remaining[0] - remaining[1];\n  filtered[4] = remaining[3] - remaining[4] - subsampled[4];\n\n  const options = {\n    chart: {\n      type: 'bar',\n      height: 240,\n    },\n    title: {\n      text: `Number of sequence ${unit} per QC step`,\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Count',\n      },\n    },\n    xAxis: {\n      categories: [\n        `Initial ${unit}`,\n        'Trimming',\n        'Length filtering',\n        'Ambiguous base filtering',\n        `${capUnit} subsampled for QC analysis`,\n      ],\n    },\n    plotOptions: {\n      series: {\n        stacking: 'normal',\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: `${capUnit} filtered out`,\n        data: filtered,\n        color: '#CCCCD3',\n      },\n      {\n        name: `${capUnit} remaining`,\n        data: remaining,\n        color: '#058DC7',\n      },\n      {\n        name: `${capUnit} after sampling`,\n        data: subsampled,\n        color: '#8dc7c7',\n      },\n    ],\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default QualityControlChart;\n","import React, { useContext, useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { ResponseFormat, TSVResponse } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\n\ntype ContigsHistogramProps = {\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst ContigsHistogram: React.FC<ContigsHistogramProps> = ({ summaryData }) => {\n  const { overviewData } = useContext(AnalysisContext);\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/seq-length`,\n    {},\n    {},\n    ResponseFormat.TSV\n  );\n\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const histData = (data as unknown as TSVResponse).map(([x, y]) => [\n    Number(x),\n    Number(y),\n  ]);\n  const lengthMax = Math.max(...histData.map(([x]) => x));\n\n  const isAssembly = overviewData.attributes['experiment-type'] === 'assembly';\n  const unit = isAssembly ? 'contigs' : 'reads';\n  const capUnit = isAssembly ? 'Contigs' : 'Reads';\n\n  const options = {\n    chart: {\n      marginLeft: 78,\n      style: {\n        fontFamily: 'Helvetica',\n      },\n      zoomType: 'x',\n    },\n    title: {\n      text: `${capUnit} length histogram`,\n      style: {\n        fontSize: 16,\n        fontWeight: 'bold',\n      },\n    },\n    // TODO: Form wha I can see isFromSubset is not in use anymore.\n    // Remove this code if after confirming\n    // subtitle: {\n    //     text: ((chartOptions['isFromSubset'])\n    //         ? 'A subset of the sequences was used to generate this chart -'\n    //         : '') + 'Click and drag in the plot area to zoom in'\n    // },\n    yAxis: {\n      title: { text: `Number of ${unit}` },\n    },\n    xAxis: {\n      min: 0,\n      max: 100 * (Math.floor(lengthMax / 100) + 1),\n      plotBands:\n        summaryData === null\n          ? []\n          : [\n              {\n                // visualize the standard deviation\n                from:\n                  Number(summaryData.average_length) -\n                  Number(summaryData.standard_deviation_length),\n                to:\n                  Number(summaryData.average_length) +\n                  Number(summaryData.standard_deviation_length),\n                color: 'rgba(128, 128, 128, .2)',\n                label: {\n                  text: `Standard Deviation<br/>\\u00B1${Number(\n                    summaryData.standard_deviation_length\n                  ).toFixed(2)}`,\n                  style: {\n                    color: '#666666',\n                    fontSize: '0.8em',\n                  },\n                },\n              },\n            ],\n    },\n    series: [\n      {\n        name: capUnit,\n        data: histData,\n        color: '#058dc7', // (chartOptions['isFromSubset']) ? '#8dc7c7' : '#058dc7'\n      },\n    ],\n    legend: { enabled: false },\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    // exporting: util.getExportingStructure(urlToFile)\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default ContigsHistogram;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { ResponseFormat, TSVResponse } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\n\nconst NucleotidesHistogram: React.FC = () => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/nucleotide-distribution`,\n    {},\n    {},\n    ResponseFormat.TSV\n  );\n\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const dataHist = { pos: [], A: [], G: [], T: [], C: [], N: [] };\n  const colors = {\n    A: 'rgb(16, 150, 24)',\n    G: 'rgb(255, 153, 0)',\n    C: 'rgb(51, 102, 204)',\n    T: 'rgb(220, 57, 18)',\n    N: 'rgb(138, 65, 23)',\n  };\n  const headers = (data as unknown as TSVResponse)[0];\n  (data as unknown as TSVResponse).slice(1).forEach((line) => {\n    line.forEach((v, i) => {\n      dataHist[headers[i]].push(Number(v));\n    });\n  });\n\n  const options = {\n    chart: {\n      type: 'area',\n      style: {\n        fontFamily: 'Helvetica',\n      },\n    },\n    title: {\n      text: 'Nucleotide position histogram',\n      style: {\n        fontSize: 16,\n        fontWeight: 'bold',\n      },\n    },\n    xAxis: {\n      categories: dataHist.pos,\n      tickmarkPlacement: 'on',\n      title: { enabled: false },\n    },\n    yAxis: {\n      min: 0,\n      max: 100,\n      title: { enabled: false },\n    },\n    plotOptions: {\n      area: {\n        stacking: 'normal',\n        lineColor: '#666666',\n        lineWidth: 1,\n        marker: {\n          lineWidth: 1,\n          lineColor: '#666666',\n        },\n      },\n    },\n    tooltip: { shared: true },\n    series: ['A', 'T', 'C', 'G', 'N'].map((d) => ({\n      name: d,\n      data: dataHist[d],\n      color: colors[d],\n    })),\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    // exporting: util.getExportingStructure(urlToFile),\n    // TODO: Add download options\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default NucleotidesHistogram;\n","import React, { useContext, useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { ResponseFormat, TSVResponse } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\n\ntype ContigsHistogramProps = {\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst ContigsDistribution: React.FC<ContigsHistogramProps> = ({\n  summaryData,\n}) => {\n  const { overviewData } = useContext(AnalysisContext);\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/gc-distribution`,\n    {},\n    {},\n    ResponseFormat.TSV\n  );\n\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const distData = (data as unknown as TSVResponse).map(([x, y]) => [\n    Number(x),\n    Number(y),\n  ]);\n\n  const isAssembly = overviewData.attributes['experiment-type'] === 'assembly';\n  const unit = isAssembly ? 'contigs' : 'reads';\n  const capUnit = isAssembly ? 'Contigs' : 'Reads';\n\n  const options = {\n    chart: {\n      style: {\n        fontFamily: 'Helvetica',\n      },\n      zoomType: 'x',\n    },\n    title: {\n      text: `${capUnit} GC distribution`,\n      style: {\n        fontSize: 16,\n        fontWeight: 'bold',\n      },\n    },\n    // subtitle: {\n    //     text: ( (typeof chartOptions !== 'undefined' &&\n    //         chartOptions['isFromSubset'])\n    //         ? 'A subset of the sequences was used to generate this chart. - '\n    //         : '') + 'Click and drag in the plot area to zoom in'\n    // },\n    yAxis: {\n      title: { text: `Number of ${unit}` },\n    },\n    xAxis: {\n      min: 0,\n      max: 100,\n\n      plotBands:\n        summaryData === null\n          ? []\n          : [\n              {\n                // visualize the standard deviation\n                from:\n                  Number(summaryData.average_gc_content) -\n                  Number(summaryData.standard_deviation_gc_content),\n                to:\n                  Number(summaryData.average_gc_content) +\n                  Number(summaryData.standard_deviation_gc_content),\n                color: 'rgba(128, 128, 128, .2)',\n                borderColor: '#000000',\n                label: {\n                  text: `Standard Deviation<br/>\\u00B1${Number(\n                    summaryData.standard_deviation_gc_content\n                  ).toFixed(2)}`,\n                  style: {\n                    color: '#666666',\n                    fontSize: '0.8em',\n                  },\n                },\n              },\n            ],\n    },\n    series: [\n      {\n        name: capUnit,\n        data: distData,\n        color: '#058dc7', // (chartOptions['isFromSubset']) ? '#8dc7c7' : '#058dc7'\n      },\n    ],\n    legend: { enabled: false },\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    // exporting: util.getExportingStructure(urlToFile)\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default ContigsDistribution;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\ntype SeqLengthChartProps = {\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst SeqLengthChart: React.FC<SeqLengthChartProps> = ({ summaryData }) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n\n  const options = {\n    chart: {\n      type: 'bar',\n      marginTop: 0, // Keep all charts left aligned\n      height: 120,\n    },\n    title: false,\n    xAxis: {\n      categories: ['Minimum', 'Average', 'Maximum'],\n      title: { enabled: false },\n      lineColor: '#595959',\n      tickColor: '',\n    },\n    yAxis: {\n      min: 0,\n      max: 100 * (Math.floor(Number(summaryData.length_max) / 100) + 1),\n      title: { text: 'Sequence length (bp)' },\n      plotBands: [\n        {\n          // visualize the standard deviation\n          from:\n            Number(summaryData.average_length) -\n            Number(summaryData.standard_deviation_length),\n          to:\n            summaryData.average_length +\n            Number(summaryData.standard_deviation_length),\n          color: 'rgba(128, 128, 128, .2)',\n        },\n      ],\n    },\n    plotOptions: {\n      series: {\n        grouping: false,\n        shadow: false,\n        borderWidth: 0,\n      },\n    },\n    series: [\n      {\n        name: 'Length',\n        data: [\n          {\n            y: Number(summaryData.length_min),\n            x: 0,\n            color: 'rgb(114, 191, 63)',\n          },\n          {\n            y: Number(summaryData.average_length),\n            x: 1,\n            color: 'rgb(63, 114, 191)',\n          },\n          {\n            y: Number(summaryData.length_max),\n            x: 2,\n            color: 'rgb(114, 63, 191)',\n          },\n        ],\n        pointPadding: -0.2,\n        tooltip: {\n          /* eslint-disable react/no-this-in-sfc */\n          pointFormatter() {\n            return `<span style=\"color:${this.color}\">\\u25CF</span> ${\n              this.category\n            }: <b>${this.y.toFixed(2)}</b><br/>`;\n          },\n          /* eslint-enable react/no-this-in-sfc */\n        },\n      },\n    ],\n    legend: { enabled: false },\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    exporting: { enabled: false },\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default SeqLengthChart;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\ntype GCContentChartProps = {\n  summaryData: {\n    [key: string]: string;\n  };\n};\nconst GCContentChart: React.FC<GCContentChartProps> = ({ summaryData }) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n\n  const options = {\n    chart: {\n      type: 'bar',\n      marginTop: 0, // Keep all charts left aligned\n      height: 150,\n    },\n    title: false,\n    xAxis: {\n      categories: ['Content'],\n      title: { enabled: false },\n      lineColor: '#595959',\n      tickColor: '',\n    },\n    yAxis: {\n      min: 0,\n      max: 100,\n      title: { enabled: false },\n      plotBands: [\n        {\n          // visualize the standard deviation\n          from:\n            Number(summaryData.average_gc_content) -\n            Number(summaryData.standard_deviation_gc_content),\n          to:\n            Number(summaryData.average_gc_content) +\n            Number(summaryData.standard_deviation_gc_content),\n          color: 'rgba(128, 128, 128, .2)',\n        },\n      ],\n    },\n    plotOptions: {\n      series: {\n        grouping: false,\n        shadow: false,\n        borderWidth: 0,\n      },\n    },\n    series: [\n      {\n        name: 'GC content',\n        pointPadding: 0.25,\n        color: 'rgb(63, 114, 191)',\n        tooltip: {\n          /* eslint-disable react/no-this-in-sfc */\n          pointFormatter() {\n            return `<span style=\"color:${this.color}\">\\u25CF</span> ${\n              this.series.name\n            }: <b>${this.y.toFixed(2)}%</b><br/>`;\n          },\n          /* eslint-enable react/no-this-in-sfc */\n        },\n        data: [Number(summaryData.average_gc_content)],\n      },\n      {\n        name: 'AT content',\n        color: 'rgb(114, 63, 191)',\n        pointPadding: 0.25,\n        threshold: Number(summaryData.average_gc_content),\n        tooltip: {\n          /* eslint-disable react/no-this-in-sfc */\n          pointFormatter() {\n            const val = (100 - Number(summaryData.average_gc_content)).toFixed(\n              2\n            );\n            // prettier-ignore\n            return `\n              <span style=\"color:${this.color}\">\\u25CF</span>\n              ${this.series.name}: <b>${val}%</b>\n              <br/>`;\n          },\n          /* eslint-enable react/no-this-in-sfc */\n        },\n        data: [100],\n      },\n    ],\n    credits: false,\n    navigation: {\n      buttonOptions: {\n        height: 32,\n        width: 32,\n        symbolX: 16,\n        symbolY: 16,\n        y: -10,\n      },\n    },\n    exporting: { enabled: false },\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default GCContentChart;\n","import React, { useContext } from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport { ResponseFormat } from 'hooks/data/useData';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport QualityControlChart from './QCChart';\nimport ContigsHistogram from './ContigsHistogram';\nimport NucleotidesHistogram from './NucleotidesHistogram';\nimport ContigsDistribution from './ContigsDistribution';\nimport SeqLengthChart from './SeqLengthChart';\nimport GCContentChart from './GCContentChart';\n\nimport './style.css';\n\nconst QualityControl: React.FC = () => {\n  const { overviewData: analysisData } = useContext(AnalysisContext);\n  const accession = analysisData.id;\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/summary`,\n    {},\n    {},\n    ResponseFormat.TSV\n  );\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const summaryData = Object.fromEntries(\n    data as unknown as Array<[k: string, v: string]>\n  );\n\n  const isAssembly = analysisData.attributes['experiment-type'] === 'assembly';\n  const unit = isAssembly ? 'contig' : 'read';\n  const units = isAssembly ? 'contigs' : 'reads';\n\n  return (\n    <div className=\"vf-stack vf-stack--200\">\n      <p>\n        The chart below shows the number of {units} which pass the quality\n        control steps in the pipeline. Paired-end sequences may have been\n        merged, in which case the initial number of {units} may differ from the\n        number given by ENA.\n      </p>\n      <QualityControlChart summaryData={summaryData} />\n      {Number(analysisData.attributes['pipeline-version']) > 2 && (\n        <>\n          <p>\n            The histograms below show the distributions of sequence lengths\n            (left) and percentage GC content (right) for the sequences having\n            passed quality control. Note that for large files, the distributions\n            were compiled from a random subset of 2 million\n            {units}. The standard deviations are shown on each plot. The bar\n            chart underneath each graph indicates the minimum, mean and maximum\n            length and mean GC and AT content, respectively.\n          </p>\n          <div className=\"vf-grid vf-grid__col-2\">\n            <div className=\"vf-stack\">\n              <ContigsHistogram summaryData={summaryData} />\n              <SeqLengthChart summaryData={summaryData} />\n            </div>\n            <div className=\"vf-stack\">\n              <ContigsDistribution summaryData={summaryData} />\n              <GCContentChart summaryData={summaryData} />\n            </div>\n          </div>\n          <p>\n            The graph below show the relative abundance of nucletotides (A, C,\n            G, T, or ambiguous base &quot;N&quot;) at each position starting\n            from the beginning of each {unit} up to the first 500 base pairs.\n          </p>\n          <NucleotidesHistogram />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default QualityControl;\n","import React from 'react';\nimport { QueryState } from 'hooks/useQueryParamState';\nimport { noop } from 'lodash-es';\n\nconst ContigsQueryContext = React.createContext({\n  contigsQueryData: {\n    data: null,\n    loading: false,\n    error: null,\n  },\n  queryParameters: {} as QueryState,\n  setQueryParameters: noop as (s: QueryState) => void,\n});\n\nexport default ContigsQueryContext;\n","import { KeyValue } from 'hooks/data/useData';\nimport React from 'react';\n\ntype EMGTableProps = {\n  paginationLinks: KeyValue;\n  handleCursor: (cursor: string) => void;\n};\n\nconst pageCursorFromPaginationURL = (linkURL): string => {\n  return linkURL.split('cursor=')[1].split('&')[0];\n};\n\nconst CursorPagination: React.FC<EMGTableProps> = ({\n  paginationLinks,\n  handleCursor,\n}) => {\n  const canPreviousPage = !!paginationLinks.prev;\n  const canNextPage = !!paginationLinks.next;\n\n  return (\n    <section className=\"mg-table-footer\">\n      <nav className=\"vf-pagination\" aria-label=\"Pagination\">\n        <ul className=\"vf-pagination__list\">\n          <li className=\"vf-pagination__item vf-pagination__item--previous-page\">\n            <button\n              disabled={!canPreviousPage}\n              type=\"button\"\n              onClick={() =>\n                handleCursor(pageCursorFromPaginationURL(paginationLinks.prev))\n              }\n              className=\"vf-button vf-button--link vf-pagination__link\"\n            >\n              Previous<span className=\"vf-u-sr-only\"> page</span>\n            </button>\n          </li>\n\n          <li className=\"vf-pagination__item vf-pagination__item--next-page\">\n            <button\n              disabled={!canNextPage}\n              type=\"button\"\n              onClick={() =>\n                handleCursor(pageCursorFromPaginationURL(paginationLinks.next))\n              }\n              className=\"vf-button vf-button--link vf-pagination__link\"\n            >\n              Next<span className=\"vf-u-sr-only\"> page</span>\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </section>\n  );\n};\n\nexport default CursorPagination;\n","import React, { useContext, useMemo } from 'react';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport Tooltip from 'components/UI/Tooltip';\nimport ContigsQueryContext from 'components/Analysis/ContigViewer/ContigsQueryContext';\n\nimport './style.css';\n\nimport ArrowForLink from 'components/UI/ArrowForLink';\nimport CursorPagination from 'components/UI/EMGTable/CursorPagination';\n\ntype ContigFeatureProps = {\n  annotationType: string;\n  present: boolean;\n};\n\nconst ContigFeatureFlag: React.FC<ContigFeatureProps> = ({\n  annotationType,\n  present,\n}) => {\n  let color;\n  const letter = annotationType[0].toUpperCase();\n  switch (annotationType) {\n    case 'cog':\n      color = '#3b6fb6';\n      break;\n    case 'kegg':\n      color = '#18974c';\n      break;\n    case 'pfam':\n      color = '#193f90';\n      break;\n    case 'interpro':\n      color = '#734595';\n      break;\n    case 'go':\n      color = '#f49e17';\n      break;\n    case 'antismash':\n      color = '#b65417';\n      break;\n    default:\n      color = '#8d8f8e';\n  }\n  if (!present) {\n    color += '55';\n  }\n  const tooltip = `${\n    present ? 'Has' : 'Does’t have'\n  } ${annotationType} annotations`;\n  return (\n    <Tooltip content={tooltip}>\n      <div\n        className=\"emg-contig-feature-flag vf-text vf-text-body--4\"\n        style={{ borderColor: color, color }}\n      >\n        {letter}\n      </div>\n    </Tooltip>\n  );\n};\n\nconst ContigsTable: React.FC = () => {\n  const { contigsQueryData, setQueryParameters, queryParameters } =\n    useContext(ContigsQueryContext);\n  const { data, loading, error } = contigsQueryData || {};\n\n  const contigsColumns = useMemo(() => {\n    return [\n      {\n        id: 'contig_id',\n        Header: 'Name',\n        accessor: (contig) => contig.attributes['contig-id'],\n        Cell: ({ cell }) => (\n          <button\n            className=\"vf-button vf-button--link vf-button--sm contig-id-button\"\n            type=\"button\"\n            onClick={() =>\n              setQueryParameters({\n                ...queryParameters,\n                selectedContig: cell.value,\n              })\n            }\n          >\n            {cell.value}\n            <ArrowForLink />\n          </button>\n        ),\n      },\n      {\n        id: 'length',\n        Header: 'Length (bp)',\n        accessor: (contig) => contig.attributes.length,\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n      {\n        id: 'coverage',\n        Header: 'Coverage',\n        accessor: (contig) => contig.attributes.coverage,\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n      {\n        id: 'features',\n        Header: 'Features',\n        accessor: (contig) => contig.attributes,\n        Cell: ({ cell }) => {\n          const flags = Object.entries(cell.value)\n            .filter(([key]) => key.startsWith('has-'))\n            .map(([key, value]) => (\n              <ContigFeatureFlag\n                key={key}\n                annotationType={key.substring(4)}\n                present={!!value}\n              />\n            ));\n          return <div className=\"emg-contig-feature-flags\">{flags}</div>;\n        },\n      },\n    ];\n  }, [queryParameters, setQueryParameters]);\n\n  if (loading && !data) return <Loading size=\"large\" />;\n  if (error || !data) return <FetchError error={error} />;\n\n  return (\n    <div>\n      <EMGTable\n        cols={contigsColumns}\n        data={data}\n        showPagination={false}\n        title={() => (\n          <>\n            Assembly Contigs\n            <span className=\"mg-number\">{data.meta.pagination.count}</span>\n          </>\n        )}\n        initialPage={0}\n        className=\"mg-contigs-table\"\n        namespace=\"contigs_\"\n        loading={loading}\n      />\n      <CursorPagination\n        paginationLinks={data.links}\n        handleCursor={(cursor) =>\n          setQueryParameters({ ...queryParameters, contigsPageCursor: cursor })\n        }\n      />\n    </div>\n  );\n};\n\nexport default ContigsTable;\n","import Dexie, { Table } from 'dexie';\n\nexport interface GFF {\n  id?: number;\n  name: string;\n  size: number;\n  encodedGFF: string;\n  added: Date;\n}\n\nexport class GFFDb extends Dexie {\n  gffs!: Table<GFF>;\n\n  constructor() {\n    super('emgGFF');\n    this.version(1).stores({\n      gffs: '++id, name',\n    });\n  }\n}\n\nexport const db = new GFFDb();\n\nexport async function encodeGFF(file: File): Promise<string> {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      const text = reader.result;\n      resolve(btoa(text as string));\n    };\n    reader.readAsText(file);\n  });\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useRef } from 'react';\nimport { Column, useSortBy, useTable } from 'react-table';\n\nimport Loading from 'components/UI/Loading';\n\ntype EMGTableProps = {\n  cols: Column[];\n  data: Array<unknown>;\n  className?: string;\n  sortable?: boolean;\n  loading?: boolean;\n  isStale?: boolean;\n};\n\nconst PlainTable: React.FC<EMGTableProps> = ({\n  cols,\n  data,\n  className = '',\n  sortable = false,\n  loading = false,\n  isStale = false,\n}) => {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable(\n      {\n        columns: cols,\n        data,\n      },\n      useSortBy\n    );\n  const tableRef = useRef(null);\n\n  if (loading && !isStale) return <Loading size=\"small\" />;\n\n  return (\n    <section>\n      <div className=\"mg-table-overlay-container\">\n        <div className={loading && isStale ? 'mg-table-overlay' : undefined} />\n        <table\n          {...getTableProps}\n          className={`vf-table--striped mg-table ${className}`}\n          ref={tableRef}\n        >\n          <thead className=\"vf-table__header\">\n            {headerGroups.map((headerGroup) => (\n              <tr\n                {...headerGroup.getHeaderGroupProps()}\n                className=\"vf-table__row\"\n              >\n                {headerGroup.headers.map((column) => (\n                  <th\n                    {...(sortable && column.canSort\n                      ? column.getHeaderProps(column.getSortByToggleProps())\n                      : { key: column.id })}\n                    className=\"vf-table__heading\"\n                  >\n                    {column.render('Header')}\n                    {sortable && column.canSort && (\n                      <>\n                        &nbsp;\n                        <span>\n                          {/* eslint-disable-next-line no-nested-ternary */}\n                          {column.isSorted ? (\n                            column.isSortedDesc ? (\n                              <i className=\"icon icon-common icon-sort-down\" />\n                            ) : (\n                              <i className=\"icon icon-common icon-sort-up\" />\n                            )\n                          ) : (\n                            <i className=\"icon icon-common icon-sort\" />\n                          )}\n                        </span>\n                      </>\n                    )}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"vf-table__body\">\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()} className=\"vf-table__row\">\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()} className=\"vf-table__cell\">\n                        {cell.render('Cell')}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </section>\n  );\n};\n\nexport default PlainTable;\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\n\nimport {\n  db,\n  encodeGFF,\n} from 'components/Analysis/ContigViewer/GFFCompare/gff_db';\nimport { useLiveQuery } from 'dexie-react-hooks';\n\nimport ArrowForLink from 'components/UI/ArrowForLink';\nimport PlainTable from 'components/UI/PlainTable';\nimport FileUploaderButton from 'components/UI/FileUploaderButton';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport ContigsQueryContext from 'components/Analysis/ContigViewer/ContigsQueryContext';\nimport { Browser } from 'igv';\nimport EMGModal from 'components/UI/EMGModal';\n\ntype GFFCompareProps = {\n  igvBrowser: Browser;\n};\n\nconst GFFCompare: React.FC<GFFCompareProps> = ({ igvBrowser }) => {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [uploadError, setUploadError] = useState(null);\n\n  const [comparisonQueryParams, setComparisonQueryParams] =\n    useQueryParametersState(\n      { gffComparisonId: null },\n      { gffComparisonId: Number }\n    );\n\n  const { setQueryParameters, queryParameters } =\n    useContext(ContigsQueryContext);\n\n  const gffs = useLiveQuery(() => db.gffs.toArray());\n\n  useEffect(() => {\n    if (comparisonQueryParams.gffComparisonId) {\n      db.gffs.get(comparisonQueryParams.gffComparisonId).then((gff) => {\n        if (gff === undefined) {\n          setComparisonQueryParams({ gffComparisonId: null });\n        } else {\n          igvBrowser.removeTrackByName(gff.name);\n          igvBrowser.loadTrack({\n            name: gff.name,\n            type: 'annotation',\n            url: `data:application/octet-stream;base64,${gff.encodedGFF}`,\n            format: 'gff3',\n            filterTypes: [],\n            removable: false,\n          });\n        }\n      });\n    }\n  }, [comparisonQueryParams, igvBrowser, setComparisonQueryParams]);\n\n  const columns = useMemo(() => {\n    return [\n      {\n        id: 'name',\n        Header: 'GFF Filename',\n        accessor: (gff) => gff.name,\n        Cell: ({ cell, row }) => (\n          <button\n            className=\"vf-button vf-button--link vf-button--sm contig-id-button\"\n            type=\"button\"\n            onClick={async () => {\n              const gff = await db.gffs.get(row.original.id);\n              setQueryParameters({\n                ...queryParameters,\n                gffComparisonId: gff.id,\n              });\n              setIsOpen(false);\n            }}\n          >\n            {cell.value}\n            <ArrowForLink />\n          </button>\n        ),\n      },\n      {\n        id: 'size',\n        Header: 'File size (Kb)',\n        accessor: (gff) => gff.size,\n        Cell: ({ cell }) => <span>{cell.value}</span>,\n      },\n      {\n        id: 'added',\n        Header: 'Added',\n        accessor: (gff) => gff.added,\n        Cell: ({ cell }) => <span>{cell.value?.toLocaleString()}</span>,\n      },\n      {\n        id: 'del',\n        Header: 'Remove',\n        accessor: (gff) => gff.id,\n        Cell: ({ cell }) => (\n          <button\n            className=\"vf-button vf-button--link vf-button--sm\"\n            type=\"button\"\n            onClick={() => db.gffs.delete(cell.value)}\n          >\n            Remove\n          </button>\n        ),\n      },\n    ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [comparisonQueryParams, setComparisonQueryParams]);\n\n  async function addGff(gffFile): Promise<void> {\n    if (!gffFile) return;\n    const encoded = await encodeGFF(gffFile);\n    try {\n      await db.gffs.add({\n        name: gffFile.name,\n        size: gffFile.size,\n        added: new Date(Date.now()),\n        encodedGFF: encoded,\n      });\n      setUploadError(null);\n    } catch (error) {\n      setUploadError(`GFF upload error: ${error}`);\n    }\n  }\n\n  return (\n    <div>\n      <EMGModal\n        isOpen={modalIsOpen}\n        onRequestClose={() => setIsOpen(false)}\n        contentLabel=\"Example Modal\"\n      >\n        <div className=\"vf-stack vf-stack--800\">\n          <h1>Compare a GFF to the contig</h1>\n          <form className=\"vf-stack vf-stack--400\" action=\"#\" method=\"get\">\n            <div className=\"vf-form__item vf-stack\">\n              <label\n                htmlFor=\"upload-picker\"\n                className=\"vf-form__label vf-form__label--required\"\n              >\n                <h2>Upload a GFF file from your computer</h2>\n              </label>\n\n              <p className=\"vf-form__helper\">\n                The GFF will be stored in your browser, not sent to MGnify\n                servers.\n              </p>\n              <FileUploaderButton\n                onChange={(e) =>\n                  addGff((e.target as HTMLInputElement).files[0])\n                }\n                accept=\".gff,.gff3\"\n              />\n              {uploadError && (\n                <p className=\"vf-form__helper vf-form__helper--error\">\n                  {uploadError}\n                </p>\n              )}\n            </div>\n          </form>\n          <div className=\"vf-stack vf-stack--200\">\n            <h2>Previously uploaded GFFs</h2>\n            <p className=\"vf-form__helper\">\n              Click the GFF’s name to view it in the browser\n            </p>\n            <PlainTable cols={columns} data={gffs} />\n          </div>\n        </div>\n      </EMGModal>\n      <button\n        className=\"vf-button vf-button--secondary vf-button--sm\"\n        type=\"button\"\n        onClick={() => setIsOpen(true)}\n      >\n        Load a GFF\n      </button>\n    </div>\n  );\n};\n\nexport default GFFCompare;\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\n\nimport useURLAccession from 'hooks/useURLAccession';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useData, {\n  KeyValue,\n  MGnifyDatum,\n  ResponseFormat,\n} from 'hooks/data/useData';\nimport './style.css';\nimport UserContext from 'pages/Login/UserContext';\nimport igv from 'igv';\n\nimport ContigsTable from 'components/Analysis/ContigViewer/Table';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport ContigsQueryContext from 'components/Analysis/ContigViewer/ContigsQueryContext';\nimport { find } from 'lodash-es';\nimport GFFCompare from 'components/Analysis/ContigViewer/GFFCompare';\nimport ReactDOMServer from 'react-dom/server';\nimport GenomeBrowserPopup from 'components/Genomes/Browser/Popup';\n\ntype ContigProps = {\n  contig: MGnifyDatum;\n};\n\nconst Contig: React.FC<ContigProps> = ({ contig }) => {\n  const accession = useURLAccession();\n  const { config } = useContext(UserContext);\n  const contigId = contig.attributes['contig-id'];\n  const fastaURL = `${config.api}analyses/${contig.attributes.accession}/contigs/${contigId}`;\n\n  const { data, loading, error } = useData(fastaURL, ResponseFormat.TXT);\n\n  const antiSMASH = contig.attributes['has-antismash'];\n  const displayName = contig.attributes['contig-name'];\n  const [igvBrowser, setIgvBrowser] = useState(null);\n\n  const igvContainer = useCallback(\n    (node) => {\n      const options = {\n        showChromosomeWidget: false,\n        showTrackLabelButton: true,\n        showTrackLabels: true,\n        showCenterGuide: false,\n        reference: {\n          indexed: false,\n          fastaURL,\n        },\n        tracks: [\n          {\n            name: displayName,\n            type: 'mgnify-annotation',\n            format: 'gff3',\n            url: `${config.api}analyses/${accession}/contigs/${contigId}/annotations`,\n            displayMode: 'EXPANDED',\n            label: 'Functional annotation',\n            colorAttributes: [\n              ['Default', ''],\n              ['COG', 'COG'],\n              ['GO', 'GO'],\n              ['KEGG', 'KEGG'],\n              ['Pfam', 'Pfam'],\n              ['InterPro', 'InterPro'],\n            ],\n            colorBy: undefined,\n            defaultColour: undefined,\n            labelBy: undefined,\n          },\n        ],\n        showLegend: true,\n        legendParent: '#contig',\n      };\n      if (antiSMASH) {\n        options.tracks.push({\n          colorAttributes: [],\n          name: undefined,\n          type: 'mgnify-annotation',\n          format: 'gff3',\n          displayMode: 'EXPANDED',\n          url: `${config.api}analyses/${accession}/contigs/${contigId}/annotations?antismash=True`,\n          label: 'antiSMASH',\n          colorBy: 'as_type',\n          defaultColour: '#BEBEBE',\n          labelBy: 'as_gene_clusters',\n        });\n      }\n\n      if (node === null) return;\n      igv.createBrowser(node, options).then((browser) => {\n        browser.on('trackclick', (ignored, trackData) =>\n          ReactDOMServer.renderToString(<GenomeBrowserPopup data={trackData} />)\n        );\n        setIgvBrowser(browser);\n      });\n    },\n    [fastaURL, displayName, config.api, accession, contigId, antiSMASH]\n  );\n\n  if (loading) return <Loading size=\"small\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n\n  return (\n    <div id=\"contig\">\n      <div ref={igvContainer} />\n      <GFFCompare igvBrowser={igvBrowser} />\n    </div>\n  );\n};\n\nconst ContigsViewer: React.FC = () => {\n  const accession = useURLAccession();\n\n  const [queryParameters, setQueryParameters] = useQueryParametersState({\n    contigsPageCursor: '',\n    selectedContig: '',\n    gffComparisonId: '',\n  });\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/contigs`,\n    { cursor: queryParameters.contigsPageCursor as string },\n    {}\n  );\n\n  const context = useMemo(\n    () => ({\n      contigsQueryData: { data, loading, error },\n      queryParameters,\n      setQueryParameters,\n    }),\n    [data, error, loading, queryParameters, setQueryParameters]\n  );\n\n  const contig = useMemo(() => {\n    let selectedContig;\n    if (!data) return null;\n\n    const selectedContigId =\n      queryParameters.selectedContig ||\n      data.data?.[0]?.attributes?.['contig-id'];\n\n    if (selectedContigId) {\n      selectedContig = find(data.data, (c: KeyValue) => {\n        return c.attributes['contig-id'] === selectedContigId;\n      });\n      if (selectedContig) {\n        return selectedContig;\n      }\n    }\n    return null;\n  }, [data, queryParameters]);\n\n  useEffect(() => {\n    // If a new contig is autoselected (e.g. page change), put it in URL\n    if (\n      contig &&\n      contig.attributes['contig-id'] !== queryParameters.selectedContig\n    ) {\n      setQueryParameters({\n        ...queryParameters,\n        selectedContig: contig.attributes['contig-id'],\n      });\n    }\n  });\n\n  useEffect(() => {\n    // If the contig in URL isnt in the data-page, remove the bad ID from URL\n    if (queryParameters.selectedContig && data && !contig) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { selectedContig: notInPageContigId, ...otherQueryParams } =\n        queryParameters;\n      setQueryParameters(otherQueryParams);\n    }\n  }, [data, contig, queryParameters, setQueryParameters]);\n\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data || !contig) return <Loading />;\n  // const isAssembly = analysisData.attributes['experiment-type'] === 'assembly';\n  // const unit = isAssembly ? 'contig' : 'read';\n  // const units = isAssembly ? 'contigs' : 'reads';\n  return (\n    <div className=\"vf-stack vf-stack--800\">\n      <ContigsQueryContext.Provider value={context}>\n        <section>\n          <div className=\"vf-stack\">\n            <details open>\n              <summary>\n                <b>Contig browser</b>\n              </summary>\n              <Contig contig={contig} />\n            </details>\n          </div>\n        </section>\n        <section>\n          <ContigsTable />\n        </section>\n      </ContigsQueryContext.Provider>\n    </div>\n  );\n};\n\nexport default ContigsViewer;\n","import React, { useEffect } from 'react';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\n\ntype TabsProps = {\n  tabs: Array<{\n    label: string | React.ElementType;\n    to: string;\n  }>;\n  queryParameter: string;\n  defaultValue: string;\n};\nconst TabsForQueryParameter: React.FC<TabsProps> = ({\n  tabs,\n  queryParameter,\n  defaultValue,\n}) => {\n  const [queryParameters, setQueryParameters] = useQueryParametersState({\n    [queryParameter]: '',\n  });\n  useEffect(() => {\n    if (queryParameters[queryParameter] === '') {\n      setQueryParameters({\n        ...queryParameters,\n        [queryParameter]: defaultValue,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [queryParameters, queryParameter]);\n  const value = queryParameters[queryParameter];\n\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label: Label, to }) => (\n          <li className=\"vf-tabs__item\" key={to}>\n            <button\n              type=\"button\"\n              className={`vf-tabs__link mg-button-as-tab ${\n                to === value ? 'is-active' : ''\n              }`}\n              onClick={() =>\n                setQueryParameters({\n                  ...queryParameters,\n                  [queryParameter]: to,\n                })\n              }\n            >\n              {typeof Label === 'string' ? Label : <Label />}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TabsForQueryParameter;\n","import React from 'react';\nimport { Row } from 'react-table';\n\nimport EMGTable from 'components/UI/EMGTable';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport { TaxDatum } from '../PhylumCharts';\n\nconst sortFunction = (order) => (a: TaxDatum, b: TaxDatum) => {\n  switch (order) {\n    case 'i':\n    case 'y':\n    case 'percentage':\n      return Number(a[order]) - Number(b[order]);\n    case '-i':\n    case '-y':\n    case '-percentage':\n      return Number(b[order.slice(1)]) - Number(a[order.slice(1)]);\n    case 'name':\n      return b.name >= a.name ? -1 : 1;\n    case '-name':\n      return a.name >= b.name ? -1 : 1;\n    case 'lineage':\n      return b.lineage[0] >= a.lineage[0] ? -1 : 1;\n    case '-lineage':\n      return a.lineage[0] >= b.lineage[0] ? -1 : 1;\n    default:\n      return 0;\n  }\n};\n\ntype PhylumTableProps = {\n  clusteredData: Array<TaxDatum>;\n  onMouseEnterRow?: (row: Row) => void;\n  onMouseLeaveRow?: (row: Row) => void;\n};\nconst PhylumTable: React.FC<PhylumTableProps> = ({\n  clusteredData,\n  onMouseEnterRow = () => null,\n  onMouseLeaveRow = () => null,\n}) => {\n  const [{ order }] = useQueryParametersState({ order: '' });\n\n  const columns = [\n    {\n      Header: '',\n      accessor: 'i',\n    },\n    {\n      id: 'name',\n      Header: 'Phylum',\n      accessor: (x) => x,\n      Cell: ({ cell }) => (\n        <>\n          <div\n            style={{\n              width: '1rem',\n              height: '1rem',\n              display: 'inline-block',\n              backgroundColor: cell.value.color,\n              verticalAlign: 'sub',\n            }}\n          >\n            &nbsp;\n          </div>{' '}\n          {cell.value.name}\n        </>\n      ),\n    },\n    {\n      id: 'lineage',\n      Header: 'Domain',\n      accessor: 'lineage[0]',\n    },\n    {\n      Header: 'Unique OTUs',\n      accessor: 'y',\n    },\n    {\n      Header: '%',\n      accessor: 'percentage',\n    },\n  ];\n  return (\n    <EMGTable\n      cols={columns}\n      data={clusteredData.sort(sortFunction(order))}\n      initialPageSize={100}\n      className=\"mg-anlyses-table\"\n      showPagination={false}\n      onMouseEnterRow={onMouseEnterRow}\n      onMouseLeaveRow={onMouseLeaveRow}\n      sortable\n    />\n  );\n};\n\nexport default PhylumTable;\n","import React, { useRef, useEffect } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { TAXONOMY_COLOURS } from 'utils/taxon';\nimport { TaxDatum } from '..';\n\n/**\n * Sum data by parameter\n */\nfunction sumData(data: { y: number }[]): number {\n  let sum = 0;\n  data.forEach((e) => {\n    sum += e.y;\n  });\n  return sum;\n}\n/**\n * Extend reference array of colours such that last colour is duplicated for\n * additional data point\n */\nfunction duplicateLastColor(colours: string[], data: unknown[]): string[] {\n  const newColours = [];\n  let i = 0;\n  while (i < data.length) {\n    newColours.push(colours[Math.min(i, colours.length - 1)]);\n    i += 1;\n  }\n  return newColours;\n}\n\n/**\n * Group all data after index n into single category\n */\nfunction groupAfterN(clusteredData: TaxDatum[], n: number): TaxDatum[] {\n  const top10 = clusteredData.slice(0, n);\n  if (clusteredData.length > n) {\n    const others = {\n      name: 'Other',\n      lineageA: [],\n      lineage: [],\n      y: 0,\n      i: n + 1,\n      color: 'grey',\n    };\n    clusteredData.slice(n).forEach((d) => {\n      others.y += d.y;\n      if (others.lineageA.indexOf(d.lineage[0]) === -1) {\n        others.lineageA.push(d.lineage[0]);\n      }\n    });\n    others.lineage = [others.lineageA.join(', ')];\n    top10.push(others);\n  }\n  return top10;\n}\n\ntype PieProps = {\n  clusteredData: Array<TaxDatum>;\n  title: string;\n  showLegend?: boolean;\n  showTotal?: boolean;\n  selectedValue?: number | null;\n};\n\nconst PieChart: React.FC<PieProps> = ({\n  clusteredData,\n  title,\n  selectedValue = null,\n  showLegend = false,\n  showTotal = false,\n}) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  useEffect(() => {\n    if (chartComponentRef.current && selectedValue !== null) {\n      const index = Math.min(\n        selectedValue as number,\n        chartComponentRef.current.chart.series[0].data.length - 1\n      );\n      chartComponentRef.current.chart.series[0].data.forEach((d) =>\n        d.setState('')\n      );\n      chartComponentRef.current.chart.series[0].data[index].setState('hover');\n      chartComponentRef.current.chart.tooltip.refresh(\n        chartComponentRef.current.chart.series[0].data[index]\n      );\n    }\n  }, [selectedValue]);\n  const groupedData = groupAfterN(clusteredData, 10);\n  const options: Record<string, unknown> = {\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false,\n      type: 'pie',\n    },\n    title: {\n      text: title,\n    },\n    tooltip: {\n      pointFormat: '<b>{point.y}</b> {series.name} ({point.percentage:.2f}%)',\n    },\n    plotOptions: {\n      pie: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        dataLabels: {\n          enabled: true,\n          format: '<b>{point.name}</b>: {point.percentage:.2f} %',\n          style: {\n            color: 'black',\n          },\n        },\n        colors: duplicateLastColor(TAXONOMY_COLOURS, groupedData),\n        showInLegend: showLegend,\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: 'reads',\n        colorByPoint: true,\n        data: groupedData,\n      },\n    ],\n  };\n  if (showTotal) {\n    options.subtitle = {\n      text: `Total: ${sumData(clusteredData)} reads`,\n    };\n  }\n\n  if (showLegend) {\n    options.legend = {\n      title: {\n        text: 'Click to hide',\n      },\n      align: 'right',\n      verticalAlign: 'middle',\n      layout: 'vertical',\n      /* eslint-disable react/no-this-in-sfc */\n      labelFormatter() {\n        if (this.name.length > 15) {\n          return `${this.name.slice(0, 15)}...`;\n        }\n        return this.name;\n      },\n      /* eslint-enable react/no-this-in-sfc */\n    };\n  }\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default PieChart;\n","import React, { useRef, useEffect } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { TAXONOMY_COLOURS } from 'utils/taxon';\nimport { TaxDatum } from '..';\n\nconst NUM_COLUMNS = 10;\n\n/**\n * Sum data by parameter\n */\nfunction sumData(data: { y: number }[]): number {\n  let sum = 0;\n  data.forEach((e) => {\n    sum += e.y;\n  });\n  return sum;\n}\ntype ColumnChartProps = {\n  clusteredData: Array<TaxDatum>;\n  title: string;\n  showLegend?: boolean;\n  showTotal?: boolean;\n  selectedValue?: number | null;\n};\n\nconst ColumnChart: React.FC<ColumnChartProps> = ({\n  clusteredData,\n  title,\n  selectedValue = null,\n  showLegend = false,\n  showTotal = false,\n}) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  useEffect(() => {\n    if (chartComponentRef.current && selectedValue !== null) {\n      const index = selectedValue as number;\n\n      chartComponentRef.current.chart.series[0].data.forEach((d) =>\n        d.setState('')\n      );\n      if (index < chartComponentRef.current.chart.series[0].data.length) {\n        chartComponentRef.current.chart.series[0].data[index].setState('hover');\n        chartComponentRef.current.chart.tooltip.refresh(\n          chartComponentRef.current.chart.series[0].data[index]\n        );\n      }\n    }\n  }, [selectedValue]);\n\n  const dataSummary = clusteredData.slice(0, NUM_COLUMNS);\n  const categories = dataSummary.map((e) => e.name);\n  const total = sumData(clusteredData);\n  const options: Record<string, unknown> = {\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false,\n      type: 'column',\n    },\n    title: {\n      text: title,\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        colorByPoint: true,\n        data: dataSummary,\n        colors: TAXONOMY_COLOURS,\n      },\n    ],\n    xAxis: {\n      categories,\n      title: {\n        text: null,\n      },\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Number of sequences',\n        align: 'high',\n      },\n      labels: {\n        overflow: 'justify',\n      },\n    },\n    tooltip: {\n      /* eslint-disable react/no-this-in-sfc */\n      formatter() {\n        const perc = (100 * this.y) / total;\n        return `${this.x}<br/><b>${this.y}</b> reads (${perc.toFixed(2)}%)`;\n      },\n      /* eslint-enable react/no-this-in-sfc */\n    },\n    legend: {\n      enabled: false,\n    },\n  };\n  if (showTotal) {\n    options.subtitle = {\n      text: `Total: ${sumData(clusteredData)} reads`,\n    };\n  }\n\n  if (showLegend) {\n    options.legend = {\n      title: {\n        text: 'Click to hide',\n      },\n      align: 'right',\n      verticalAlign: 'middle',\n      layout: 'vertical',\n      /* eslint-disable react/no-this-in-sfc */\n      labelFormatter() {\n        if (this.name.length > 15) {\n          return `${this.name.slice(0, 15)}...`;\n        }\n        return this.name;\n      },\n      /* eslint-enable react/no-this-in-sfc */\n    };\n  }\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default ColumnChart;\n","import React, { useRef, useEffect } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { TAXONOMY_COLOURS } from 'utils/taxon';\nimport { TaxDatum } from '..';\n\n/**\n * Sum data by parameter\n */\nfunction sumData(data: { y: number }[]): number {\n  let sum = 0;\n  data.forEach((e) => {\n    sum += e.y;\n  });\n  return sum;\n}\n/**\n * Reformat data into multiple series\n */\nfunction transformData(\n  data: Array<{ name: string; y: number }>\n): Array<{ name: string; data: [number]; color: string }> {\n  let i = 0;\n  const maxColorIndex = TAXONOMY_COLOURS.length - 1;\n  return data.map((e) => ({\n    name: e.name,\n    data: [e.y],\n    color: TAXONOMY_COLOURS[Math.min(i++, maxColorIndex)],\n  }));\n}\n\ntype StackedColumnChartProps = {\n  clusteredData: Array<TaxDatum>;\n  title: string;\n  showLegend?: boolean;\n  selectedValue?: number | null;\n};\n\nconst StackedColumnChart: React.FC<StackedColumnChartProps> = ({\n  clusteredData,\n  title,\n  selectedValue = null,\n  showLegend = false,\n}) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  useEffect(() => {\n    if (chartComponentRef.current && selectedValue !== null) {\n      const index = selectedValue as number;\n\n      chartComponentRef.current.chart.series[0].data.forEach((d) =>\n        d.setState('')\n      );\n      if (index < chartComponentRef.current.chart.series.length) {\n        chartComponentRef.current.chart.series[index].data[0].setState('hover');\n        chartComponentRef.current.chart.tooltip.refresh(\n          chartComponentRef.current.chart.series[index].data[0]\n        );\n      }\n    }\n  }, [selectedValue]);\n\n  const dataSummary = transformData(clusteredData);\n  const sum = sumData(clusteredData);\n  const options: Record<string, unknown> = {\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false,\n      type: 'column',\n    },\n    title: {\n      text: title,\n    },\n    subtitle: {\n      text: `Total: ${sum} reads`,\n    },\n    credits: {\n      enabled: false,\n    },\n    tooltip: {\n      /* eslint-disable react/no-this-in-sfc */\n      formatter() {\n        const perc = (100 * this.y) / sum;\n        return (\n          `${this.series.name}<br/>` +\n          `<b>${this.y}</b> reads (${perc.toFixed(2)}%)`\n        );\n      },\n      /* eslint-enable react/no-this-in-sfc */\n    },\n    plotOptions: {\n      series: {\n        stacking: 'percent',\n        dataLabels: {\n          enabled: true,\n        },\n      },\n    },\n    yAxis: {\n      min: 0,\n      max: 100,\n    },\n    xAxis: {\n      title: {\n        text: null,\n        enabled: false,\n      },\n      labels: {\n        enabled: false,\n      },\n    },\n    legend: {\n      enabled: false,\n    },\n    series: dataSummary,\n  };\n\n  if (showLegend) {\n    options.legend = {\n      title: {\n        text: 'Click to hide',\n      },\n      align: 'right',\n      verticalAlign: 'middle',\n      layout: 'vertical',\n      /* eslint-disable react/no-this-in-sfc */\n      labelFormatter() {\n        if (this.name.length > 15) {\n          return `${this.name.slice(0, 15)}...`;\n        }\n        return this.name;\n      },\n      /* eslint-enable react/no-this-in-sfc */\n    };\n  }\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\n\nexport default StackedColumnChart;\n","import React, { useState } from 'react';\nimport { Row } from 'react-table';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport { TAXONOMY_COLOURS } from 'utils/taxon';\nimport PhylumTable from '../PhylumTable';\nimport PhylumPie from './Pie';\nimport PhylumColumn from './Column';\nimport PhylumStackedColumn from './StackedColumn';\n\nconst DEPTH_TO_CLUSTER = 2;\n\nexport type TaxDatum = {\n  name: string;\n  i: number;\n  y: number;\n  lineage: string[];\n  color: string;\n};\n\n/**\n * Cluster data by depth\n */\nfunction clusterData(\n  data: Array<{ attributes: Record<string, unknown> }>,\n  depth = 0\n): Array<TaxDatum> {\n  const clusteredData: {\n    [k: string]: { v: number; l: string[] };\n  } = {};\n  let total = 0;\n  data.forEach((d) => {\n    const attr = d.attributes;\n    const lineage = String(attr.lineage).split(':');\n    // Remove empty strings\n    let category: string;\n    if (lineage.length < depth) {\n      category = lineage[lineage.length - 1];\n    } else {\n      category = lineage[depth];\n    }\n\n    if (\n      depth > 0 &&\n      ['', 'Bacteria', 'Eukaryota', 'other_sequences', undefined].includes(\n        category\n      )\n    ) {\n      if (lineage[0] === 'Bacteria') {\n        category = 'Unassigned Bacteria';\n      } else {\n        category = 'Unassigned';\n      }\n    }\n    if (lineage[0] === 'Unusigned' && lineage.length === 1) {\n      category = 'Unassigned';\n    }\n\n    const val = Number(attr.count);\n    total += val;\n    if (category in clusteredData) {\n      clusteredData[category].v += val;\n    } else {\n      clusteredData[category] = {\n        v: val,\n        l: lineage,\n      };\n    }\n  });\n\n  return Object.entries(clusteredData)\n    .map(([name, { v, l }]) => ({\n      name,\n      y: v,\n      lineage: l,\n    }))\n    .sort((a, b) => b.y - a.y)\n    .map((x, i) => ({\n      ...x,\n      i: i + 1,\n      color: TAXONOMY_COLOURS[Math.min(i, TAXONOMY_COLOURS.length - 1)],\n      percentage: ((x.y * 100) / total).toFixed(2),\n    }));\n}\n\ntype PhylumChartsProps = {\n  accession: string;\n  category: string;\n  chartType: string;\n};\nconst PhylumCharts: React.FC<PhylumChartsProps> = ({\n  accession,\n  category,\n  chartType,\n}) => {\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/taxonomy${category}`\n  );\n  const [selectedRow, setSelectedRow] = useState(null);\n\n  if (loading) return <Loading />;\n  if (error) return <FetchError error={error} />;\n  const clusteredData = clusterData(\n    data.data as MGnifyDatum[],\n    DEPTH_TO_CLUSTER\n  );\n  const clusteredDataTop = clusterData(data.data as MGnifyDatum[]);\n  const includesDomainCharts = ['', '/ssu', '/lsu'].includes(category);\n  const handleMouseEnterRow = (row: Row): void => setSelectedRow(row.values);\n  const handleMouseLeaveRow = (): void => setSelectedRow(null);\n\n  const selectedCategory = clusteredDataTop.findIndex(\n    (e) => e.name === selectedRow?.lineage\n  );\n  return (\n    <div className=\"vf-stack\">\n      <div\n        className={`vf-grid ${\n          includesDomainCharts && chartType !== 'stacked-column'\n            ? 'vf-grid__col-2 mg-grid-30-70'\n            : ''\n        }`}\n      >\n        {chartType === 'pie' && includesDomainCharts && (\n          <PhylumPie\n            clusteredData={clusteredDataTop}\n            selectedValue={selectedCategory >= 0 ? selectedCategory : null}\n            title=\"Domain composition\"\n          />\n        )}\n        {chartType === 'pie' && (\n          <PhylumPie\n            clusteredData={clusteredData}\n            title=\"Phylum composition\"\n            selectedValue={selectedRow ? selectedRow.i - 1 : null}\n            showTotal\n            showLegend\n          />\n        )}\n        {chartType === 'column' && includesDomainCharts && (\n          <PhylumColumn\n            clusteredData={clusteredDataTop}\n            selectedValue={selectedCategory >= 0 ? selectedCategory : null}\n            title=\"Domain composition\"\n          />\n        )}\n        {chartType === 'column' && (\n          <PhylumColumn\n            clusteredData={clusteredData}\n            title=\"Phylum composition (top 10)\"\n            selectedValue={selectedRow ? selectedRow.i - 1 : null}\n            showTotal\n          />\n        )}\n        {chartType === 'stacked-column' && (\n          <PhylumStackedColumn\n            clusteredData={clusteredData}\n            title=\"Phylum composition (top 10)\"\n            selectedValue={selectedRow ? selectedRow.i - 1 : null}\n          />\n        )}\n      </div>\n      <div>\n        <PhylumTable\n          clusteredData={clusteredData}\n          onMouseEnterRow={handleMouseEnterRow}\n          onMouseLeaveRow={handleMouseLeaveRow}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PhylumCharts;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport TabsForQueryParameter from 'components/UI/TabsForQueryParameter';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport UserContext from 'pages/Login/UserContext';\nimport PhylumCharts from './PhylumCharts';\n\nimport './style.css';\n\nconst tabs = [\n  { label: 'Krona', to: 'krona' },\n  { label: 'Pie', to: 'pie' },\n  { label: 'Column', to: 'column' },\n  { label: 'Stacked Column', to: 'stacked-column' },\n];\n\nconst PARAMETER_NAME = 'type';\nconst PARAMETER_DEFAULT = 'krona';\ntype TaxonomicAnalysesProps = {\n  accession: string;\n};\nconst Taxonomy: React.FC<TaxonomicAnalysesProps> = ({ accession }) => {\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${accession}/taxonomy/overview`\n  );\n  const [queryParameters] = useQueryParametersState({\n    [PARAMETER_NAME]: PARAMETER_DEFAULT,\n  });\n  const datum = data?.data as Record<string, unknown>;\n\n  const enableSSU = datum?.taxonomy_ssu_count > 0 || datum?.taxonomy_count > 0;\n  const enableLSU = datum?.taxonomy_lsu_count > 0;\n  const enableITSoneDB = datum?.taxonomy_itsonedb_count > 0;\n  const enableITSUnite = datum?.taxonomy_itsunite_count > 0;\n  const isV2 = !datum?.taxonomy_ssu_count && datum?.taxonomy_count > 0;\n\n  const { config } = useContext(UserContext);\n  const [taxResults, setTaxResults] = useState('');\n  useEffect(() => {\n    if (!loading && !error && data) {\n      setTaxResults(\n        (enableITSoneDB && '/itsonedb') ||\n          (enableITSUnite && '/unite') ||\n          (enableSSU && isV2 && '/ssu') ||\n          (enableLSU && '/lsu') ||\n          ''\n      );\n    }\n  }, [\n    data,\n    loading,\n    error,\n    enableITSUnite,\n    enableITSoneDB,\n    enableLSU,\n    enableSSU,\n    isV2,\n  ]);\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n\n  const handleTaxChange = (event): void => {\n    setTaxResults(event.target.value);\n  };\n\n  return (\n    <div className=\"vf-stack\">\n      <div>\n        {(enableSSU || enableLSU) && (\n          <fieldset\n            className=\"vf-form__fieldset vf-stack vf-stack--400 mg-fieldbox\"\n            style={{\n              width: '15rem',\n            }}\n          >\n            <legend className=\"vf-form__legend\">rRNA</legend>\n            <label>\n              <input\n                type=\"radio\"\n                id=\"smallrRNA\"\n                name=\"tax-results\"\n                value=\"/ssu\"\n                checked={taxResults === '/ssu'}\n                onChange={handleTaxChange}\n              />{' '}\n              small subunit rRNA\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                id=\"largerRNA\"\n                name=\"tax-results\"\n                value=\"/lsu\"\n                checked={taxResults === '/lsu'}\n                onChange={handleTaxChange}\n              />{' '}\n              large subunit rRNA\n            </label>\n          </fieldset>\n        )}\n        {(enableITSoneDB || enableITSUnite) && (\n          <fieldset\n            className=\"vf-form__fieldset vf-stack vf-stack--400 mg-fieldbox\"\n            style={{\n              width: '15rem',\n            }}\n          >\n            <legend className=\"vf-form__legend\">ITS</legend>\n            <label>\n              <input\n                type=\"radio\"\n                id=\"smallrRNA\"\n                name=\"tax-results\"\n                value=\"/itsonedb\"\n                checked={taxResults === '/itsonedb'}\n                onChange={handleTaxChange}\n              />{' '}\n              ITS with ITSoneDB\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                id=\"largerRNA\"\n                name=\"tax-results\"\n                value=\"/unite\"\n                checked={taxResults === '/unite'}\n                onChange={handleTaxChange}\n              />{' '}\n              ITS1/2 with UNITE\n            </label>\n          </fieldset>\n        )}\n      </div>\n      <div>\n        These are the results from the taxonomic analysis steps of our pipeline.\n        You can switch between different views of the data using the menu of\n        icons below (pie, bar, stacked and interactive krona charts). The data\n        used to build these charts can be found under the{' '}\n        <Link to=\"#download\">Download</Link> tab.\n      </div>\n      <TabsForQueryParameter\n        tabs={tabs}\n        queryParameter={PARAMETER_NAME}\n        defaultValue={PARAMETER_DEFAULT}\n      />\n      <div className=\"vf-tabs-content\">\n        {queryParameters[PARAMETER_NAME] === 'krona' ? (\n          <object\n            className=\"krona_chart\"\n            data={`${config.api}analyses/${accession}/krona${taxResults}?collapse=false`}\n            type=\"text/html\"\n            title=\"Interactive Krona chart\"\n          />\n        ) : (\n          <PhylumCharts\n            accession={accession}\n            category={taxResults}\n            chartType={String(queryParameters[PARAMETER_NAME])}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Taxonomy;\n","import { useState, useEffect } from 'react';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, ErrorFromFetch } from 'hooks/data/useData';\n\nexport type InterProCountType = {\n  accession?: string;\n  name: string;\n  matches: number;\n};\ntype InterProMatchesProviderResponse = {\n  matches: InterProCountType[];\n  total: number | null;\n  processed: number;\n  loading: boolean;\n  error: ErrorFromFetch;\n};\nconst useInterProMatchesProvider = (\n  accession: string,\n  limit = Infinity\n): InterProMatchesProviderResponse => {\n  const [page, setPage] = useState(1);\n  const [matches, setMatches] = useState<Array<InterProCountType>>([]);\n  const [processed, setProcessed] = useState(0);\n  const [total, setTotal] = useState(null);\n  const { data, isStale, loading, error } = useMGnifyData(\n    `analyses/${accession}/interpro-identifiers`,\n    {\n      page,\n    }\n  );\n  useEffect(() => {\n    if (data?.data && !isStale && page === data?.meta?.pagination?.page) {\n      const other = matches.length\n        ? matches.slice(-1)\n        : [{ name: 'Others', matches: 0 }];\n\n      const newMatches: InterProCountType[] = matches.length\n        ? []\n        : (data.data as MGnifyDatum[]).slice(0, 10).map(({ attributes }) => ({\n            accession: attributes.accession as string,\n            name: attributes.description as string,\n            matches: attributes.count as number,\n          }));\n      other[0].matches += (data.data as MGnifyDatum[])\n        .slice(matches.length ? 0 : 10)\n        .reduce((agg, { attributes }) => agg + Number(attributes.count), 0);\n      const aggregatedMatches = [\n        ...matches.slice(0, -1),\n        ...newMatches,\n        ...other,\n      ];\n      setMatches(aggregatedMatches);\n      setProcessed(processed + (data.data as MGnifyDatum[]).length);\n      const totalInResponse = data?.meta?.pagination?.count;\n      if (total !== totalInResponse && typeof totalInResponse === 'number') {\n        setTotal(totalInResponse);\n      }\n      if (data?.links?.next && aggregatedMatches.length < limit) {\n        setPage(page + 1);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, page, limit]);\n  useEffect(() => {\n    if (data?.links?.next && matches.length < limit) {\n      setPage(page + 1);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [limit]);\n\n  return { matches, processed, total, loading, error };\n};\n\nexport default useInterProMatchesProvider;\n","import React, { useRef, useEffect, useContext, useState } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport useInterProMatchesProvider, {\n  InterProCountType,\n} from 'hooks/data/useInterProMatchesProvider';\nimport Loading from 'components/UI/Loading';\nimport { TAXONOMY_COLOURS } from 'utils/taxon';\nimport FetchError from 'components/UI/FetchError';\nimport { noop } from 'lodash-es';\n\ntype InterProMatchesChartProps = {\n  selectedName?: string;\n  onTotalChange?: (total: number) => void;\n  onMatchesChange?: (total: InterProCountType[]) => void;\n};\nconst InterProMatchesChart: React.FC<InterProMatchesChartProps> = ({\n  selectedName = null,\n  onTotalChange = noop,\n  onMatchesChange = noop,\n}) => {\n  const { overviewData } = useContext(AnalysisContext);\n  const { matches, total, loading, error, processed } =\n    useInterProMatchesProvider(overviewData.id);\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const [totalCount, setTotalCount] = useState(0);\n  useEffect(() => {\n    if (matches) {\n      const newTotal = matches.reduce((agg, { matches: m }) => agg + m, 0);\n      setTotalCount(newTotal);\n      onTotalChange(newTotal);\n      onMatchesChange(matches);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [matches]);\n  useEffect(() => {\n    if (chartComponentRef.current && selectedName !== null) {\n      let index = chartComponentRef.current.chart.series[0].data.findIndex(\n        (e) => e.name === selectedName\n      );\n      chartComponentRef.current.chart.series[0].data.forEach((d) =>\n        d.setState('')\n      );\n      if (index === -1 && selectedName.length)\n        index = chartComponentRef.current.chart.series[0].data.length - 1;\n      chartComponentRef.current.chart.series[0].data[index].setState('hover');\n      chartComponentRef.current.chart.tooltip.refresh(\n        chartComponentRef.current.chart.series[0].data[index]\n      );\n    }\n  }, [selectedName]);\n  if (loading && !matches?.length) return <Loading />;\n  if (error) return <FetchError error={error} />;\n\n  const options: Record<string, unknown> = {\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false,\n      type: 'pie',\n    },\n    title: {\n      text: 'InterPro match summary',\n    },\n    subtitle: {\n      text: `Total: ${totalCount} InterPro matches`,\n    },\n    tooltip: {\n      pointFormat: '<b>{point.y}</b> {series.name} ({point.percentage:.2f}%)',\n    },\n    plotOptions: {\n      pie: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        dataLabels: {\n          enabled: false,\n        },\n        colors: TAXONOMY_COLOURS,\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: 'pCDS matched',\n        colorByPoint: true,\n        data: matches.map(({ name, matches: y }) => ({ name, y })),\n      },\n    ],\n  };\n  return (\n    <>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={options}\n        ref={chartComponentRef}\n      />\n      {processed < total && (\n        <sup>\n          * With {processed} out of {total} Interpro matches.\n        </sup>\n      )}\n    </>\n  );\n};\nexport default InterProMatchesChart;\n","import React, { useRef, useContext } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\n\n/**\n * Get the series for a category.\n * This method will check if the series contains \"contigs\" or \"reads\".\n * Falling back to \"reads\" if \"contigs\" is missingg in seqData && isAssembly\n */\nfunction getSeriesCategory(\n  seqData: { key: string; value: string }[],\n  category: string\n) {\n  let series = seqData.find(({ key }) => key === category);\n  if (series !== undefined) {\n    return series.value;\n  }\n  series = seqData.find(({ key }) => key === `Contigs${category}`);\n  if (series !== undefined) {\n    return series.value;\n  }\n  return seqData.find(({ key }) => key === `Reads${category}`);\n}\n\nconst InterProQCChart: React.FC = () => {\n  const { overviewData } = useContext(AnalysisContext);\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n\n  const isAssembly = overviewData.attributes['experiment-type'] === 'assembly';\n  const seqData = overviewData.attributes['analysis-summary'];\n  // TODO: remove mapping when https://www.ebi.ac.uk/panda/jira/browse/EMG-1672\n  const categories = [\n    ' with predicted CDS',\n    ' with predicted RNA',\n    ' with InterProScan match',\n    'Predicted CDS',\n    'Predicted CDS with InterProScan match',\n  ];\n  const series = [\n    getSeriesCategory(seqData, categories[0]),\n    getSeriesCategory(seqData, categories[1]),\n    getSeriesCategory(seqData, categories[2]),\n    getSeriesCategory(seqData, categories[3]),\n    getSeriesCategory(seqData, categories[4]),\n  ].map(Number);\n  const prefix = isAssembly ? 'Contigs' : 'Reads';\n  categories[0] = prefix + categories[0];\n  categories[1] = prefix + categories[1];\n  categories[2] = prefix + categories[2];\n\n  const options: Record<string, unknown> = {\n    chart: {\n      type: 'bar',\n      height: 240,\n    },\n    title: {\n      text: 'Sequence feature summary',\n    },\n    yAxis: {\n      type: 'logarithmic',\n      title: {\n        text: 'Count (note the logarithmic scale)',\n      },\n    },\n    xAxis: {\n      categories,\n    },\n    plotOptions: {\n      series: {\n        stacking: 'normal',\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: false,\n    },\n    tooltip: {\n      pointFormat: '<b>{point.y}</b>',\n    },\n    series: [\n      {\n        data: series,\n        color: '#058dc7',\n      },\n    ],\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\nexport default InterProQCChart;\n","import React, { useContext, useState } from 'react';\nimport { Row } from 'react-table';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport EMGTable from 'components/UI/EMGTable';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport { TAXONOMY_COLOURS } from 'utils/taxon';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport ExtLink from 'components/UI/ExtLink';\nimport InterProMatchesChart from './InterProMatchesChart';\nimport InterProQCChart from './QCChart';\n\nconst PAGE_SIZE = 25;\nconst InterPro: React.FC = () => {\n  const { overviewData } = useContext(AnalysisContext);\n  const [total, setTotal] = useState(-1);\n  const [colorMap, setColorMap] = useState(new Map());\n  const [selectedName, setSelectedName] = useState(null);\n  const [queryParameters] = useQueryParametersState(\n    {\n      page: 1,\n      page_size: PAGE_SIZE,\n      order: '',\n    },\n    {\n      page: Number,\n      page_size: Number,\n    }\n  );\n  const { data, loading, error, isStale } = useMGnifyData(\n    `analyses/${overviewData.id}/interpro-identifiers`,\n    {\n      page: queryParameters.page as number,\n      ordering: queryParameters.order as string,\n      page_size: queryParameters.page_size as number,\n    }\n  );\n  const columns = [\n    {\n      id: 'color',\n      Header: '',\n      accessor: 'attributes.accession',\n      Cell: ({ cell }) => (\n        <div\n          style={{\n            width: '1rem',\n            height: '1rem',\n            display: 'inline-block',\n            backgroundColor:\n              colorMap.get(cell.value) || TAXONOMY_COLOURS.slice(-1)[0],\n            verticalAlign: 'sub',\n          }}\n        >\n          &nbsp;\n        </div>\n      ),\n    },\n    {\n      id: 'name',\n      Header: 'Entry name',\n      accessor: 'attributes.description',\n    },\n    {\n      id: 'accession',\n      Header: 'ID',\n      accessor: 'attributes.accession',\n      Cell: ({ cell }) => (\n        <ExtLink\n          href={`http://www.ebi.ac.uk/interpro/entry/interpro/${cell.value}`}\n        >\n          {cell.value}\n        </ExtLink>\n      ),\n    },\n    {\n      Header: 'pCDS matched',\n      accessor: 'attributes.count',\n    },\n    {\n      id: 'percentage',\n      Header: '%',\n      accessor: 'attributes.count',\n      Cell: ({ cell }) =>\n        total === -1 ? (\n          <Loading size=\"small\" />\n        ) : (\n          ((100 * cell.value) / total).toFixed(2)\n        ),\n    },\n  ];\n  const handleMouseEnterRow = (row: Row): void =>\n    setSelectedName(row.values.name);\n  const handleMouseLeaveRow = (): void => setSelectedName(null);\n  return (\n    <div className=\"vf-stack\">\n      <div>\n        <InterProQCChart />\n      </div>\n      <h5>InterPro match summary</h5>\n      <div className=\"vf-grid mg-grid-30-70\">\n        <div>\n          <InterProMatchesChart\n            selectedName={selectedName}\n            onTotalChange={(newTotal) => setTotal(newTotal)}\n            onMatchesChange={(matches) => {\n              setColorMap(\n                new Map(\n                  matches.map(({ accession }, i) => [\n                    accession,\n                    TAXONOMY_COLOURS[i],\n                  ])\n                )\n              );\n            }}\n          />\n        </div>\n        {loading && !isStale && <Loading />}\n        {!loading && error && <FetchError error={error} />}\n        {data && !error && (\n          <EMGTable\n            cols={columns}\n            data={data}\n            initialPageSize={PAGE_SIZE}\n            initialPage={(queryParameters.page as number) - 1}\n            className=\"mg-anlyses-table\"\n            loading={loading}\n            isStale={isStale}\n            onMouseEnterRow={handleMouseEnterRow}\n            onMouseLeaveRow={handleMouseLeaveRow}\n            showPagination\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default InterPro;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { TAXONOMY_COLOURS } from 'utils/taxon';\n\ntype GOBarChartProps = {\n  categories: Array<string>;\n  series: Array<number>;\n  title: string;\n  color: string;\n  total: number;\n};\nconst GOBarChart: React.FC<GOBarChartProps> = ({\n  categories,\n  series,\n  title,\n  total,\n  color,\n}) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const options: Record<string, unknown> = {\n    chart: {\n      type: 'bar',\n      height: 800,\n      zoomType: 'xy',\n      renderTo: 'container',\n    },\n    title: {\n      text: title,\n    },\n    subtitle: {\n      text: `Total: ${total} annotations - Drag to zoom in/out`,\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Annotations',\n      },\n    },\n    xAxis: {\n      categories,\n    },\n    plotOptions: {\n      series: {\n        stacking: 'normal',\n      },\n      bar: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        colors: TAXONOMY_COLOURS,\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: false,\n    },\n    tooltip: {\n      pointFormat: '<b>{point.y}</b> {series.name}',\n    },\n    series: [\n      {\n        name: 'annotations',\n        data: series,\n        color,\n      },\n    ],\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\nexport default GOBarChart;\n","import React, { useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { TAXONOMY_COLOURS } from 'utils/taxon';\n\ntype GOPieChartProps = {\n  categories: Array<string>;\n  series: Array<number>;\n  title: string;\n  total: number;\n};\nconst GOPieChart: React.FC<GOPieChartProps> = ({\n  categories,\n  series,\n  title,\n  total,\n}) => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const pieSeries = categories.slice(0, 10).map((name, i) => ({\n    name,\n    y: series[i],\n  }));\n  const other = { name: 'Others', y: 0 };\n  series.slice(10).forEach((v) => {\n    other.y += v;\n  });\n  pieSeries.push(other);\n  const options: Record<string, unknown> = {\n    chart: {\n      plotBackgroundColor: null,\n      plotBorderWidth: null,\n      plotShadow: false,\n      type: 'pie',\n    },\n    title: {\n      text: title,\n    },\n    subtitle: {\n      text: `Total: ${total} annotations`,\n    },\n    tooltip: {\n      pointFormat: '<b>{point.y}</b> {series.name} ({point.percentage:.2f}%)',\n    },\n    plotOptions: {\n      pie: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        dataLabels: {\n          enabled: false,\n        },\n        showInLegend: true,\n        colors: TAXONOMY_COLOURS,\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    series: [\n      {\n        name: 'annotations',\n        colorByPoint: true,\n        data: pieSeries,\n      },\n    ],\n    legend: {\n      align: 'right',\n      verticalAlign: 'middle',\n      layout: 'vertical',\n      /* eslint-disable react/no-this-in-sfc */\n      labelFormatter() {\n        if (this.name.length > 15) {\n          return `${this.name.slice(0, 15)}...`;\n        }\n        return this.name;\n      },\n      /* eslint-enable react/no-this-in-sfc */\n    },\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\nexport default GOPieChart;\n","import React, { useContext, useEffect, useState } from 'react';\nimport TabsForQueryParameter from 'components/UI/TabsForQueryParameter';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport { TAXONOMY_COLOURS } from 'utils/taxon';\nimport GOBarChart from './BarChart';\nimport GOPieChart from './PieChart';\n\nconst tabs = [\n  { label: 'Bar', to: 'bar' },\n  { label: 'Pie', to: 'pie' },\n];\n\nconst GO: React.FC = () => {\n  const { overviewData } = useContext(AnalysisContext);\n  const [queryParameters] = useQueryParametersState({\n    chart: '',\n  });\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${overviewData.id}/go-slim`\n  );\n  const [dataBundles, setDataBundles] = useState(null);\n  useEffect(() => {\n    if ((data?.data as MGnifyDatum[])?.length) {\n      const newBundle = {\n        biological_process: {\n          series: [],\n          categories: [],\n          total: 0,\n        },\n        molecular_function: {\n          series: [],\n          categories: [],\n          total: 0,\n        },\n        cellular_component: {\n          series: [],\n          categories: [],\n          total: 0,\n        },\n      };\n      (data.data as MGnifyDatum[]).forEach((term) => {\n        const lineage = term?.attributes?.lineage as string;\n        if (\n          [\n            'biological_process',\n            'molecular_function',\n            'cellular_component',\n          ].includes(lineage)\n        ) {\n          newBundle[lineage].categories.push(term.attributes.description);\n          newBundle[lineage].series.push(term.attributes.count);\n          newBundle[lineage].total += term.attributes.count;\n        }\n      });\n      setDataBundles(newBundle);\n    }\n  }, [data]);\n  return (\n    <div className=\"vf-stack\">\n      <h4>GO terms annotation</h4>\n      <p>\n        A summary of Gene Ontology (GO) terms derived from InterPro matches to\n        your sample is provided in the charts below.\n      </p>\n      {loading && <Loading />}\n      {error && <FetchError error={error} />}\n      {data && (\n        <>\n          <h5>Switch view:</h5>\n          <TabsForQueryParameter\n            tabs={tabs}\n            queryParameter=\"chart\"\n            defaultValue=\"bar\"\n          />\n          <div className=\"vf-tabs-content\">\n            <div className=\"vf-grid vf-grid__col-3\">\n              {queryParameters.chart === 'bar' && dataBundles && (\n                <>\n                  <GOBarChart\n                    title=\"Biological process\"\n                    series={dataBundles.biological_process.series}\n                    categories={dataBundles.biological_process.categories}\n                    total={dataBundles.biological_process.total}\n                    color={TAXONOMY_COLOURS[0]}\n                  />\n                  <GOBarChart\n                    title=\"Molecular Function\"\n                    series={dataBundles.molecular_function.series}\n                    categories={dataBundles.molecular_function.categories}\n                    total={dataBundles.molecular_function.total}\n                    color={TAXONOMY_COLOURS[3]}\n                  />\n                  <GOBarChart\n                    title=\"Cellular Component\"\n                    series={dataBundles.cellular_component.series}\n                    categories={dataBundles.cellular_component.categories}\n                    total={dataBundles.cellular_component.total}\n                    color={TAXONOMY_COLOURS[4]}\n                  />\n                </>\n              )}\n              {queryParameters.chart === 'pie' && dataBundles && (\n                <>\n                  <GOPieChart\n                    title=\"Biological process\"\n                    series={dataBundles.biological_process.series}\n                    categories={dataBundles.biological_process.categories}\n                    total={dataBundles.biological_process.total}\n                  />\n                  <GOPieChart\n                    title=\"Molecular Function\"\n                    series={dataBundles.molecular_function.series}\n                    categories={dataBundles.molecular_function.categories}\n                    total={dataBundles.molecular_function.total}\n                  />\n                  <GOPieChart\n                    title=\"Cellular Component\"\n                    series={dataBundles.cellular_component.series}\n                    categories={dataBundles.cellular_component.categories}\n                    total={dataBundles.cellular_component.total}\n                  />\n                </>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default GO;\n","import React, { useContext } from 'react';\n\nimport EMGTable from 'components/UI/EMGTable';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\n\nconst PAGE_SIZE = 25;\n\nconst PfamTable: React.FC = () => {\n  const { overviewData } = useContext(AnalysisContext);\n  const [queryParameters] = useQueryParametersState(\n    {\n      page: 1,\n      page_size: PAGE_SIZE,\n    },\n    {\n      page: Number,\n      page_size: Number,\n    }\n  );\n  const { data, loading, error, isStale, downloadURL } = useMGnifyData(\n    `analyses/${overviewData.id}/pfam-entries`,\n    {\n      page: queryParameters.page as number,\n      page_size: queryParameters.page_size as number,\n    }\n  );\n  const columns = [\n    {\n      Header: 'Class ID',\n      accessor: 'id',\n    },\n    {\n      Header: 'Description',\n      accessor: 'attributes.description',\n    },\n    {\n      Header: 'Count',\n      accessor: 'attributes.count',\n    },\n  ];\n  if (loading && (!isStale || !data)) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n\n  return (\n    <EMGTable\n      cols={columns}\n      data={data}\n      initialPageSize={PAGE_SIZE}\n      initialPage={(queryParameters.page as number) - 1}\n      className=\"mg-anlyses-table\"\n      loading={loading}\n      isStale={isStale}\n      showPagination\n      downloadURL={downloadURL}\n    />\n  );\n};\n\nexport default PfamTable;\n","import React, { useContext, useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { TAXONOMY_COLOURS } from 'utils/taxon';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport { MGnifyDatum } from 'hooks/data/useData';\n\nconst PfamBarChart: React.FC = () => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const { overviewData } = useContext(AnalysisContext);\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${overviewData.id}/pfam-entries`,\n    {\n      page_size: 10,\n    }\n  );\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n\n  const series = (data.data as MGnifyDatum[]).map((d) => d.attributes.count);\n  const categories = (data.data as MGnifyDatum[]).map(\n    (d) => d.attributes.accession\n  );\n  const categoriesDescriptions = (data.data as MGnifyDatum[]).reduce(\n    (memo, d) => {\n      // eslint-disable-next-line no-param-reassign\n      memo[d.attributes.accession as string] = d.attributes.description;\n      return memo;\n    },\n    {}\n  );\n  const options: Record<string, unknown> = {\n    chart: {\n      type: 'column',\n      height: 400,\n      zoomType: 'xy',\n      renderTo: 'container',\n    },\n    title: {\n      text: 'Top 10 Pfam entries',\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Number of matches',\n      },\n    },\n    xAxis: {\n      categories,\n    },\n    plotOptions: {\n      series: {\n        stacking: 'normal',\n      },\n      column: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        colors: TAXONOMY_COLOURS,\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: true,\n    },\n    tooltip: {\n      /* eslint-disable react/no-this-in-sfc */\n      formatter() {\n        const description = categoriesDescriptions[this.key];\n        let tooltip = `${this.series.name}<br/>Count: ${this.y}`;\n        if (description) {\n          tooltip += `<br/>Pfam entry: ${description}`;\n        }\n        return tooltip;\n      },\n      /* eslint-enable react/no-this-in-sfc */\n    },\n    series: [\n      {\n        name: `Analysis ${overviewData.id}`,\n        data: series,\n        colors: TAXONOMY_COLOURS[1],\n      },\n    ],\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\nexport default PfamBarChart;\n","import React from 'react';\nimport KOTable from './Table';\nimport KOBarChart from './BarChart';\n\nconst KOTab: React.FC = () => {\n  return (\n    <div className=\"vf-stack\">\n      <KOBarChart />\n      <KOTable />\n    </div>\n  );\n};\n\nexport default KOTab;\n","import React, { useContext } from 'react';\n\nimport EMGTable from 'components/UI/EMGTable';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\n\nconst PAGE_SIZE = 25;\n\nconst KOTable: React.FC = () => {\n  const { overviewData } = useContext(AnalysisContext);\n  const [queryParameters] = useQueryParametersState(\n    {\n      page: 1,\n      page_size: PAGE_SIZE,\n    },\n    {\n      page: Number,\n      page_size: Number,\n    }\n  );\n  const { data, loading, error, isStale, downloadURL } = useMGnifyData(\n    `analyses/${overviewData.id}/kegg-orthologs`,\n    {\n      page: queryParameters.page as number,\n      page_size: queryParameters.page_size as number,\n    }\n  );\n  const columns = [\n    {\n      Header: 'Class ID',\n      accessor: 'id',\n    },\n    {\n      Header: 'Description',\n      accessor: 'attributes.description',\n    },\n    {\n      Header: 'Count',\n      accessor: 'attributes.count',\n    },\n  ];\n  if (loading && (!isStale || !data)) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n\n  return (\n    <EMGTable\n      cols={columns}\n      data={data}\n      initialPageSize={PAGE_SIZE}\n      initialPage={(queryParameters.page as number) - 1}\n      className=\"mg-anlyses-table\"\n      loading={loading}\n      isStale={isStale}\n      showPagination\n      downloadURL={downloadURL}\n    />\n  );\n};\n\nexport default KOTable;\n","import React, { useContext, useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { TAXONOMY_COLOURS } from 'utils/taxon';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport { MGnifyDatum } from 'hooks/data/useData';\n\nconst KOBarChart: React.FC = () => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const { overviewData } = useContext(AnalysisContext);\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${overviewData.id}/kegg-orthologs`,\n    {\n      page_size: 10,\n    }\n  );\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n\n  const series = (data.data as MGnifyDatum[]).map((d) => d.attributes.count);\n  const categories = (data.data as MGnifyDatum[]).map(\n    (d) => d.attributes.accession\n  );\n  const categoriesDescriptions = (data.data as MGnifyDatum[]).reduce(\n    (memo, d) => {\n      // eslint-disable-next-line no-param-reassign\n      memo[d.attributes.accession as string] = d.attributes.description;\n      return memo;\n    },\n    {}\n  );\n  const options: Record<string, unknown> = {\n    chart: {\n      type: 'column',\n      height: 400,\n      zoomType: 'xy',\n      renderTo: 'container',\n    },\n    title: {\n      text: 'Top 10 KO entries',\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Number of matches',\n      },\n    },\n    xAxis: {\n      categories,\n    },\n    plotOptions: {\n      series: {\n        stacking: 'normal',\n      },\n      column: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        colors: TAXONOMY_COLOURS,\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: true,\n    },\n    tooltip: {\n      /* eslint-disable react/no-this-in-sfc */\n      formatter() {\n        const description = categoriesDescriptions[this.key];\n        let tooltip = `${this.series.name}<br/>Count: ${this.y}`;\n        if (description) {\n          tooltip += `<br/>KEGG Class: ${description}`;\n        }\n        return tooltip;\n      },\n      /* eslint-enable react/no-this-in-sfc */\n    },\n    series: [\n      {\n        name: `Analysis ${overviewData.id}`,\n        data: series,\n        colors: TAXONOMY_COLOURS[1],\n      },\n    ],\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\nexport default KOBarChart;\n","import React from 'react';\nimport PfamTable from './Table';\nimport PfamBarChart from './BarChart';\n\nconst PfamTab: React.FC = () => {\n  return (\n    <div className=\"vf-stack\">\n      <PfamBarChart />\n      <PfamTable />\n    </div>\n  );\n};\n\nexport default PfamTab;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport TabsForQueryParameter from 'components/UI/TabsForQueryParameter';\nimport ExtLink from 'components/UI/ExtLink';\nimport InfoBanner from 'components/UI/InfoBanner';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\n\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport InterProTab from './InterPro';\nimport GOTab from './GO';\nimport PfamTab from './Pfam';\nimport KOTab from './KO';\n\nconst PARAMETER_NAME = 'type';\nconst PARAMETER_DEFAULT = 'interpro';\nconst tabs = [\n  { label: 'InterPro', to: 'interpro' },\n  { label: 'GO Terms', to: 'go' },\n  { label: 'Pfam', to: 'pfam' },\n  { label: 'KO', to: 'ko' },\n];\nconst FunctionalAnalysis: React.FC = () => {\n  const { overviewData } = useContext(AnalysisContext);\n\n  const [queryParameters] = useQueryParametersState({\n    [PARAMETER_NAME]: '',\n  });\n  // const accession=overviewData.id;\n  const version = Number(overviewData.attributes['pipeline-version']);\n  const longReadExperiment =\n    overviewData.attributes['experiment-type'] === 'long_reads_assembly';\n\n  return (\n    <div className=\"vf-stack\">\n      <p>\n        These charts present the functional analysis outputs of our pipeline,\n        which focus on{' '}\n        <ExtLink href=\"http://www.ebi.ac.uk/interpro\" title=\"InterPro website\">\n          InterPro\n        </ExtLink>\n        {version >= 5 && (\n          <>\n            ,{' '}\n            <ExtLink\n              href=\"https://pfam.xfam.org/\"\n              title=\"Pfam database webpage\"\n            >\n              Pfam\n            </ExtLink>\n            ,{' '}\n            <ExtLink\n              href=\"https://www.genome.jp/kegg/ko.html\"\n              title=\"KEGG orthologue (KO) webpage\"\n            >\n              KEGG orthologue\n            </ExtLink>\n          </>\n        )}{' '}\n        and{' '}\n        <ExtLink\n          href=\"https://www.uniprot.org/help/gene_ontology\"\n          title=\"Gene Ontology webpage\"\n        >\n          GO\n        </ExtLink>{' '}\n        term annotations. These summarise the functional content of the\n        sequences in the sample. The full set of results files can be found\n        under the <Link to=\"#download\">Download</Link> tab.\n      </p>\n      {longReadExperiment && (\n        <InfoBanner title=\"Caution:\" type=\"info\">\n          The sequences in this sample are derived from long-read sequencing\n          technology. Gene-prediction on this sequence data can be problematic,\n          potentially resulting in fewer and/or truncated predictions.\n        </InfoBanner>\n      )}\n      <TabsForQueryParameter\n        tabs={version >= 5 ? tabs : tabs.slice(0, 2)}\n        queryParameter={PARAMETER_NAME}\n        defaultValue={PARAMETER_DEFAULT}\n      />\n      <div className=\"vf-tabs-content\">\n        {queryParameters[PARAMETER_NAME] === 'interpro' && <InterProTab />}\n        {queryParameters[PARAMETER_NAME] === 'go' && <GOTab />}\n        {queryParameters[PARAMETER_NAME] === 'pfam' && <PfamTab />}\n        {queryParameters[PARAMETER_NAME] === 'ko' && <KOTab />}\n      </div>\n    </div>\n  );\n};\nexport default FunctionalAnalysis;\n","import React, { useContext } from 'react';\n\nimport EMGTable from 'components/UI/EMGTable';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\n\nconst PAGE_SIZE = 25;\n\nconst KeggTable: React.FC = () => {\n  const { overviewData } = useContext(AnalysisContext);\n  const [queryParameters] = useQueryParametersState(\n    {\n      page: 1,\n      page_size: PAGE_SIZE,\n    },\n    {\n      page: Number,\n      page_size: Number,\n    }\n  );\n  const { data, loading, error, isStale, downloadURL } = useMGnifyData(\n    `analyses/${overviewData.id}/kegg-modules`,\n    {\n      page: queryParameters.page as number,\n      page_size: queryParameters.page_size as number,\n    }\n  );\n  const columns = [\n    {\n      Header: 'Class ID',\n      accessor: 'id',\n    },\n    {\n      Header: 'Name',\n      accessor: 'attributes.name',\n    },\n    {\n      Header: 'Description',\n      accessor: 'attributes.description',\n    },\n    {\n      Header: 'Completeness',\n      accessor: 'attributes.completeness',\n    },\n    {\n      Header: 'Matching KO',\n      accessor: 'attributes.matching-kos.length',\n    },\n    {\n      Header: 'Missing KOs',\n      accessor: 'attributes.missing-kos.length',\n    },\n  ];\n  if (loading && (!isStale || !data)) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n\n  return (\n    <EMGTable\n      cols={columns}\n      data={data}\n      initialPageSize={PAGE_SIZE}\n      initialPage={(queryParameters.page as number) - 1}\n      className=\"mg-anlyses-table\"\n      loading={loading}\n      isStale={isStale}\n      showPagination\n      downloadURL={downloadURL}\n    />\n  );\n};\n\nexport default KeggTable;\n","import React, { useContext, useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { TAXONOMY_COLOURS } from 'utils/taxon';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport { MGnifyDatum } from 'hooks/data/useData';\n\nconst PfamBarChart: React.FC = () => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const { overviewData } = useContext(AnalysisContext);\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${overviewData.id}/kegg-modules`\n  );\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n\n  const series = (data.data as MGnifyDatum[]).map(\n    (d) => d.attributes.completeness\n  );\n  const categories = (data.data as MGnifyDatum[]).map(\n    (d) => d.attributes.accession\n  );\n  const categoriesDescriptions = (data.data as MGnifyDatum[]).reduce(\n    (memo, d) => {\n      // eslint-disable-next-line no-param-reassign\n      memo[d.attributes.accession as string] = d.attributes.description;\n      return memo;\n    },\n    {}\n  );\n  const options: Record<string, unknown> = {\n    chart: {\n      type: 'column',\n      height: 400,\n      zoomType: 'xy',\n      renderTo: 'container',\n    },\n    title: {\n      text: 'KEGG module categories',\n    },\n    yAxis: {\n      min: 0,\n      max: 100,\n      title: {\n        text: 'Completeness (%)',\n      },\n      labels: {\n        format: '{value} %',\n      },\n    },\n    xAxis: {\n      categories,\n    },\n\n    plotOptions: {\n      series: {\n        stacking: 'normal',\n      },\n      column: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        colors: TAXONOMY_COLOURS,\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: true,\n    },\n    tooltip: {\n      /* eslint-disable react/no-this-in-sfc */\n      formatter() {\n        const description = categoriesDescriptions[this.key];\n        let tooltip = `${this.series.name}<br/>Completeness: ${this.y}%`;\n        if (description) {\n          tooltip += `<br />KEGG Module: ${description}`;\n        }\n        return tooltip;\n      },\n      /* eslint-enable react/no-this-in-sfc */\n    },\n    series: [\n      {\n        name: `Analysis ${overviewData.id}`,\n        data: series,\n        colors: TAXONOMY_COLOURS[1],\n      },\n    ],\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\nexport default PfamBarChart;\n","import React from 'react';\nimport KeggTable from './Table';\nimport KeggBarChart from './BarChart';\n\nconst KOTab: React.FC = () => {\n  return (\n    <div className=\"vf-stack\">\n      <KeggBarChart />\n      <KeggTable />\n    </div>\n  );\n};\n\nexport default KOTab;\n","import React, { useContext } from 'react';\n\nimport EMGTable from 'components/UI/EMGTable';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\n\nconst PAGE_SIZE = 25;\n\nconst AntiSMASHTable: React.FC = () => {\n  const { overviewData } = useContext(AnalysisContext);\n  const [queryParameters] = useQueryParametersState(\n    {\n      page: 1,\n      page_size: PAGE_SIZE,\n    },\n    {\n      page: Number,\n      page_size: Number,\n    }\n  );\n  const { data, loading, error, isStale, downloadURL } = useMGnifyData(\n    `analyses/${overviewData.id}/antismash-gene-clusters`,\n    {\n      page: queryParameters.page as number,\n      page_size: queryParameters.page_size as number,\n    }\n  );\n  const columns = [\n    {\n      Header: 'Class ID',\n      accessor: 'id',\n    },\n    {\n      Header: 'Description',\n      accessor: 'attributes.description',\n    },\n    {\n      Header: 'Count',\n      accessor: 'attributes.count',\n    },\n  ];\n  if (loading && (!isStale || !data)) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n\n  return (\n    <EMGTable\n      cols={columns}\n      data={data}\n      initialPageSize={PAGE_SIZE}\n      initialPage={(queryParameters.page as number) - 1}\n      className=\"mg-anlyses-table\"\n      loading={loading}\n      isStale={isStale}\n      showPagination\n      downloadURL={downloadURL}\n    />\n  );\n};\n\nexport default AntiSMASHTable;\n","import React, { useContext, useRef } from 'react';\nimport * as Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { TAXONOMY_COLOURS } from 'utils/taxon';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport { MGnifyDatum } from 'hooks/data/useData';\n\nconst AntiSMASHBarChart: React.FC = () => {\n  const chartComponentRef = useRef<HighchartsReact.RefObject>(null);\n  const { overviewData } = useContext(AnalysisContext);\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${overviewData.id}/antismash-gene-clusters`,\n    {\n      page_size: 10,\n    }\n  );\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n\n  const series = (data.data as MGnifyDatum[]).map((d) => d.attributes.count);\n  const categories = (data.data as MGnifyDatum[]).map(\n    (d) => d.attributes.accession\n  );\n  const categoriesDescriptions = (data.data as MGnifyDatum[]).reduce(\n    (memo, d) => {\n      // eslint-disable-next-line no-param-reassign\n      memo[d.attributes.accession as string] = d.attributes.description;\n      return memo;\n    },\n    {}\n  );\n  const options: Record<string, unknown> = {\n    chart: {\n      type: 'column',\n      height: 400,\n      zoomType: 'xy',\n      renderTo: 'container',\n    },\n    title: {\n      text: 'Top 10 antiSMASH gene clusters',\n    },\n    yAxis: {\n      min: 0,\n      title: {\n        text: 'Number of matches',\n      },\n    },\n    xAxis: {\n      categories,\n    },\n    plotOptions: {\n      series: {\n        stacking: 'normal',\n      },\n      column: {\n        allowPointSelect: true,\n        cursor: 'pointer',\n        colors: TAXONOMY_COLOURS,\n      },\n    },\n    credits: {\n      enabled: false,\n    },\n    legend: {\n      enabled: true,\n    },\n    tooltip: {\n      /* eslint-disable react/no-this-in-sfc */\n      formatter() {\n        const description = categoriesDescriptions[this.key];\n        let tooltip = `${this.series.name}<br/>Count: ${this.y}`;\n        if (description) {\n          tooltip += `<br/>antiSMASH gene cluster: ${description}`;\n        }\n        return tooltip;\n      },\n      /* eslint-enable react/no-this-in-sfc */\n    },\n    series: [\n      {\n        name: `Analysis ${overviewData.id}`,\n        data: series,\n        colors: TAXONOMY_COLOURS[1],\n      },\n    ],\n  };\n  return (\n    <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n      ref={chartComponentRef}\n    />\n  );\n};\nexport default AntiSMASHBarChart;\n","import React from 'react';\nimport AntiSMASHTable from './Table';\nimport AntiSMASHBarChart from './BarChart';\n\nconst KOTab: React.FC = () => {\n  return (\n    <div className=\"vf-stack\">\n      <AntiSMASHBarChart />\n      <AntiSMASHTable />\n    </div>\n  );\n};\n\nexport default KOTab;\n","import React, { useContext, useEffect, useState } from 'react';\nimport HierarchyNode, { Node } from 'components/UI/Hierarchy';\n\nimport gpHierarchy from 'public/data/genome-properties-hierarchy.json';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport AnalysisContext from 'pages/Analysis/AnalysisContext';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport { MGnifyDatum } from 'src/hooks/data/useData';\nimport ExtLink from 'src/components/UI/ExtLink';\n\n/**\n * Annotate the nodes with the counts.\n * @param {Object} node a gp node\n * @return {int} the aggregated count for a sub-tree\n */\nconst annotate = (\n  node: Node,\n  genomePropertiesCount: Record<string, number>\n) => {\n  /* eslint-disable no-param-reassign */\n  if (node.countgen) return node.countgen;\n  node.count = genomePropertiesCount[node.id as string] || 0;\n  node.countgen = (node.countgen || 0) + (node.count as number);\n  if (node.children && node.children.length) {\n    node.countgen += node.children.reduce((mem, child) => {\n      return mem + annotate(child, genomePropertiesCount);\n    }, 0);\n    node.children = node.children.filter(({ countgen }) => countgen > 0);\n  }\n  /* eslint-enable no-param-reassign */\n  return node.countgen;\n};\n\nconst DELAY = 100;\nconst SHOULD_NOT = {\n  collapse: false,\n  expand: false,\n};\n\nconst GenomeProperties: React.FC = () => {\n  const { overviewData } = useContext(AnalysisContext);\n  const { data, loading, error } = useMGnifyData(\n    `analyses/${overviewData.id}/genome-properties`\n  );\n  const [should, setShould] = useState(SHOULD_NOT);\n  useEffect(() => {\n    if (should.expand || should.collapse) {\n      setTimeout(() => setShould(SHOULD_NOT), DELAY);\n    }\n  }, [should]);\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  const genomePropertiesCount = {};\n\n  (data.data as MGnifyDatum[]).forEach((d) => {\n    const id = d.attributes.accession as string;\n    const { presence } = d.attributes;\n    genomePropertiesCount[id] =\n      presence === 'Yes' || presence === 'Partial' ? 1 : 0;\n  });\n  annotate(gpHierarchy, genomePropertiesCount);\n  return (\n    <div className=\"vf-stack\">\n      <div>\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--sm\"\n          onClick={() =>\n            setShould({\n              collapse: false,\n              expand: true,\n            })\n          }\n        >\n          Expand All\n        </button>\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--sm\"\n          onClick={() =>\n            setShould({\n              collapse: true,\n              expand: false,\n            })\n          }\n        >\n          Collapse All\n        </button>\n      </div>\n      <HierarchyNode\n        tree={gpHierarchy as unknown as Node}\n        triggerExpandAll={should.expand}\n        triggerCollapseAll={should.collapse}\n        getLabel={(node) => {\n          return (\n            <>\n              <ExtLink\n                href={`https://www.ebi.ac.uk/interpro/genomeproperties/genome-property/${node.id}`}\n              >\n                {node.id}\n              </ExtLink>\n              : {node.name}\n            </>\n          );\n        }}\n      />\n    </div>\n  );\n};\n\nexport default GenomeProperties;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport TabsForQueryParameter from 'components/UI/TabsForQueryParameter';\nimport ExtLink from 'components/UI/ExtLink';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport KeggModule from './KeggModule';\nimport AntiSMASH from './AntiSMASH';\nimport GenomeProperties from './GenomeProperties';\n\nconst PARAMETER_NAME = 'type';\nconst PARAMETER_DEFAULT = 'kegg-modules';\nconst tabs = [\n  { label: 'KEGG Module', to: 'kegg-modules' },\n  { label: 'Genome properties', to: 'genome-properties' },\n  { label: 'antiSMASH', to: 'antismash' },\n];\n\nconst PathwaysSubPage: React.FC = () => {\n  const [queryParameters] = useQueryParametersState({\n    [PARAMETER_NAME]: '',\n  });\n  return (\n    <div>\n      <p>\n        These are the results from the biochemical pathways and systems\n        predictions steps of our pipeline. These summarise the{' '}\n        <ExtLink href=\"https://www.genome.jp/kegg/module.html\">\n          KEGG Module\n        </ExtLink>\n        ,{' '}\n        <ExtLink href=\"https://www.ebi.ac.uk/interpro/genomeproperties/\">\n          Genome Properties\n        </ExtLink>{' '}\n        and{' '}\n        <ExtLink href=\"https://antismash.secondarymetabolites.org\">\n          antiSMASH\n        </ExtLink>{' '}\n        annotations in this assembly. The full set of results files may be found\n        under the <Link to=\"#download\">Download</Link> tab.\n      </p>\n      <TabsForQueryParameter\n        tabs={tabs}\n        queryParameter={PARAMETER_NAME}\n        defaultValue={PARAMETER_DEFAULT}\n      />\n      <div className=\"vf-tabs-content\">\n        {queryParameters[PARAMETER_NAME] === 'kegg-modules' && <KeggModule />}\n        {queryParameters[PARAMETER_NAME] === 'genome-properties' && (\n          <GenomeProperties />\n        )}\n        {queryParameters[PARAMETER_NAME] === 'antismash' && <AntiSMASH />}\n      </div>\n    </div>\n  );\n};\n\nexport default PathwaysSubPage;\n","import React, { useMemo } from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Tabs from 'components/UI/Tabs';\nimport Overview from 'components/Analysis/Overview';\nimport QualityControl from 'components/Analysis/QualityControl';\nimport ContigViewer from 'components/Analysis/ContigViewer';\nimport TaxonomySubpage from 'components/Analysis/Taxonomy';\nimport FunctionalSubpage from 'components/Analysis/Functional';\nimport PathwaysSubpage from 'components/Analysis/Pathways';\nimport RouteForHash from 'components/Nav/RouteForHash';\nimport { Link } from 'react-router-dom';\nimport AnalysisContext from './AnalysisContext';\n\nconst hasAbundance = (\n  includes: { attributes?: { 'group-type'?: string } }[]\n): boolean => {\n  return includes.some(\n    (included) => included?.attributes?.['group-type'] === 'Statistics'\n  );\n};\n\nconst isAssembly = (data: MGnifyDatum): boolean =>\n  ['assembly', 'hybrid_assembly'].includes(\n    data.attributes['experiment-type'] as string\n  );\nconst isAtleastVersion5 = (data: MGnifyDatum): boolean =>\n  Number(data.attributes['pipeline-version']) >= 5;\nconst isNotAmplicon = (data: MGnifyDatum): boolean =>\n  data.attributes['experiment-type'] !== 'amplicon';\n\nconst AnalysisPage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`analyses/${accession}`, {\n    include: 'downloads',\n  });\n  const value = useMemo(() => ({ overviewData: data?.data }), [data]);\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: analysisData, included } = data as MGnifyResponseObj;\n\n  const tabs = [\n    { label: 'Overview', to: '#overview' },\n    { label: 'Quality control', to: '#qc' },\n    { label: 'Taxonomic analysis', to: '#taxonomic' },\n    isNotAmplicon(analysisData)\n      ? { label: 'Functional analysis', to: '#functional' }\n      : null,\n    hasAbundance(included)\n      ? { label: 'Abundance and comparison', to: '#abundance' }\n      : null,\n    isAssembly(analysisData) && isAtleastVersion5(analysisData)\n      ? { label: 'Pathways/Systems', to: '#path-systems' }\n      : null,\n    isAssembly(analysisData) && isAtleastVersion5(analysisData)\n      ? { label: 'Contig Viewer', to: '#contigs-viewer' }\n      : null,\n    { label: 'Download', to: '#download' },\n  ].filter(Boolean);\n  const linkToOtherAnalyses = isAssembly(analysisData)\n    ? analysisData?.relationships?.assembly?.data?.id\n    : analysisData?.relationships?.run?.data?.id;\n  return (\n    <section className=\"vf-content\">\n      <h2>Analysis {accession}</h2>\n      {linkToOtherAnalyses && (\n        <h4>\n          <Link to={linkToOtherAnalyses}>Other Analyses</Link>\n        </h4>\n      )}\n      <Tabs tabs={tabs} />\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <AnalysisContext.Provider value={value}>\n            <RouteForHash hash=\"#overview\" isDefault>\n              <Overview />\n            </RouteForHash>\n            <RouteForHash hash=\"#qc\">\n              <QualityControl />\n            </RouteForHash>\n            <RouteForHash hash=\"#contigs-viewer\">\n              <ContigViewer />\n            </RouteForHash>\n            <RouteForHash hash=\"#taxonomic\">\n              <TaxonomySubpage accession={accession} />\n            </RouteForHash>\n            <RouteForHash hash=\"#functional\">\n              <FunctionalSubpage />\n            </RouteForHash>\n            <RouteForHash hash=\"#path-systems\">\n              <PathwaysSubpage />\n            </RouteForHash>\n          </AnalysisContext.Provider>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default AnalysisPage;\n"],"names":["antiSMASHLabels","biosynthetic","regulatory","transport","resistance","MultipleField","value","url","decodeValue","parts","split","className","map","part","text","decodeURIComponent","key","href","getProtLength","attributes","start","parseInt","end","Number","isNaN","Math","ceil","data","name","gene","product","properties","rawData","reduce","memo","el","toLowerCase","functionalData","title","Value","ecnumber","pfam","kegg","eggnog","cog","go","interpro","as_type","as_notes","as_gene_clusters","otherData","type","inference","String","metaproteomicData","peptide_sequences","pride_id","id","formatData","property","filter","d","length","pName","Boolean","width","height","xmlns","viewBox","preserveAspectRatio","fill","fillRule","modalStyle","overlay","zIndex","position","content","top","left","right","bottom","marginRight","transform","maxHeight","overflowY","isOpen","onRequestClose","contentLabel","children","style","onClick","onChange","accept","fileInput","useRef","hidden","ref","current","click","HierarchyNode","tree","depth","shouldExpand","collapsing","getLabel","node","triggerExpandAll","triggerCollapseAll","displayChildren","setDisplayChildren","useState","triggerExpandAllChildren","setTriggerExpandAllChildren","show","setShow","hideChildren","setHideChildren","useEffect","setTimeout","marginLeft","countgen","child","includes","list","gridTemplateColumns","rowGap","textAlign","overviewData","useContext","open","KeyValueList","relationships","study","to","sample","assembly","experimentType","run","summaryData","analysisData","chartComponentRef","isAssembly","unit","capUnit","remaining","filtered","subsampled","analysisSummary","forEach","sequence_count","options","chart","yAxis","min","xAxis","categories","plotOptions","series","stacking","credits","enabled","color","highcharts","accession","useURLAccession","loading","error","useMGnifyData","Loading","size","FetchError","histData","x","y","lengthMax","max","fontFamily","zoomType","fontSize","fontWeight","floor","plotBands","from","average_length","standard_deviation_length","label","toFixed","legend","navigation","buttonOptions","symbolX","symbolY","dataHist","pos","A","G","T","C","N","colors","headers","slice","line","v","i","push","tickmarkPlacement","area","lineColor","lineWidth","marker","tooltip","shared","distData","average_gc_content","standard_deviation_gc_content","borderColor","marginTop","tickColor","length_max","grouping","shadow","borderWidth","length_min","pointPadding","pointFormatter","this","category","exporting","threshold","val","Object","fromEntries","units","contigsQueryData","queryParameters","setQueryParameters","noop","pageCursorFromPaginationURL","linkURL","paginationLinks","handleCursor","canPreviousPage","prev","canNextPage","next","disabled","ContigFeatureFlag","annotationType","present","letter","toUpperCase","Tooltip","contigsColumns","useMemo","Header","accessor","contig","Cell","cell","selectedContig","ArrowForLink","coverage","flags","entries","startsWith","substring","EMGTable","cols","showPagination","meta","pagination","count","initialPage","namespace","links","cursor","contigsPageCursor","GFFDb","constructor","super","version","stores","gffs","db","sortable","isStale","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","columns","useSortBy","tableRef","undefined","headerGroup","getHeaderGroupProps","column","canSort","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","getCellProps","igvBrowser","modalIsOpen","setIsOpen","uploadError","setUploadError","comparisonQueryParams","setComparisonQueryParams","gffComparisonId","useLiveQuery","toArray","get","then","gff","removeTrackByName","loadTrack","encodedGFF","format","filterTypes","removable","original","added","toLocaleString","addGff","gffFile","encoded","file","Promise","resolve","reader","FileReader","onload","result","btoa","readAsText","encodeGFF","add","Date","now","EMGModal","action","method","htmlFor","FileUploaderButton","e","target","files","Contig","config","UserContext","contigId","fastaURL","api","useData","antiSMASH","displayName","setIgvBrowser","igvContainer","useCallback","showChromosomeWidget","showTrackLabelButton","showTrackLabels","showCenterGuide","reference","indexed","tracks","displayMode","colorAttributes","colorBy","defaultColour","labelBy","showLegend","legendParent","browser","on","ignored","trackData","context","selectedContigId","find","c","notInPageContigId","otherQueryParams","tabs","queryParameter","defaultValue","Label","sortFunction","order","a","b","lineage","clusteredData","onMouseEnterRow","onMouseLeaveRow","display","backgroundColor","verticalAlign","sort","initialPageSize","sumData","sum","duplicateLastColor","colours","newColours","selectedValue","showTotal","index","setState","refresh","groupedData","n","top10","others","lineageA","indexOf","join","groupAfterN","plotBackgroundColor","plotBorderWidth","plotShadow","pointFormat","pie","allowPointSelect","dataLabels","showInLegend","colorByPoint","subtitle","align","layout","labelFormatter","dataSummary","total","labels","overflow","formatter","perc","maxColorIndex","transformData","clusterData","attr","l","percentage","chartType","selectedRow","setSelectedRow","clusteredDataTop","includesDomainCharts","selectedCategory","findIndex","values","PARAMETER_NAME","PARAMETER_DEFAULT","datum","enableSSU","taxonomy_ssu_count","taxonomy_count","enableLSU","taxonomy_lsu_count","enableITSoneDB","taxonomy_itsonedb_count","enableITSUnite","taxonomy_itsunite_count","isV2","taxResults","setTaxResults","handleTaxChange","event","checked","selectedName","onTotalChange","onMatchesChange","matches","processed","limit","Infinity","page","setPage","setMatches","setProcessed","setTotal","other","newMatches","description","agg","aggregatedMatches","totalInResponse","totalCount","setTotalCount","newTotal","m","getSeriesCategory","seqData","prefix","colorMap","setColorMap","Map","setSelectedName","page_size","ordering","ExtLink","renderTo","bar","pieSeries","dataBundles","setDataBundles","newBundle","biological_process","molecular_function","cellular_component","term","downloadURL","categoriesDescriptions","longReadExperiment","InfoBanner","Pfam","KO","completeness","annotate","genomePropertiesCount","mem","SHOULD_NOT","collapse","expand","should","setShould","presence","Hierarchy","KeggModule","AntiSMASH","isAtleastVersion5","isNotAmplicon","include","included","some","linkToOtherAnalyses","Tabs","RouteForHash","hash","isDefault","Overview","ContigViewer","Functional","Pathways"],"sourceRoot":""}