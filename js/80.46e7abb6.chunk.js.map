{"version":3,"sources":["webpack://mgportalv2/./src/components/Publications/index.tsx","webpack://mgportalv2/./src/components/UI/EMGTable/PaginationButton/index.tsx","webpack://mgportalv2/./src/components/UI/EMGTable/index.tsx","webpack://mgportalv2/./src/components/UI/FetchError/index.tsx","webpack://mgportalv2/./src/hooks/useQueryParamState/index.tsx","webpack://mgportalv2/./src/hooks/useURLAccession/index.tsx","webpack://mgportalv2/./src/components/UI/Tabs/index.tsx","webpack://mgportalv2/./src/components/UI/SamplesMap/index.tsx","webpack://mgportalv2/./src/hooks/data/useSamplesProvider/index.tsx","webpack://mgportalv2/./src/components/UI/Box/index.tsx","webpack://mgportalv2/./src/components/Analyses/Table/index.tsx","webpack://mgportalv2/./src/components/Study/Overview/index.tsx","webpack://mgportalv2/./src/components/Nav/RouteForHash/index.tsx","webpack://mgportalv2/./src/pages/Study/index.tsx","webpack://mgportalv2/./src/utils/biomes.ts"],"names":["Publication","title","journal","year","link","doi","authors","maxAuthorsLength","trimmedAuthors","length","text","authorList","slice","split","pop","push","join","trimAuthors","className","href","MainPublication","publication","pub","main","alt","src","showMore","setShowMore","useState","recent","map","key","type","onClick","currentPageIndex","pageIndex","gotoPage","cols","data","initialPage","initialPageSize","namespace","showPagination","sortable","loading","isStale","queryParameters","setQueryParameters","Number","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","canPreviousPage","canNextPage","pageCount","setPageSize","nextPage","previousPage","state","pageSize","sortBy","useTable","columns","initialState","meta","pagination","pages","manualPagination","manualSortBy","useSortBy","usePagination","tableRef","useRef","isChangingPage","setChangingPage","useEffect","current","scrollIntoView","order","tableSortBy","col","desc","id","replace","getOrderingQueryParamFromSortedColumn","paginationRanges","useMemo","startingPages","adjacentPages","Math","max","page","endingPages","hasJumpFromStart","hasJumpToEnd","getPaginationRanges","goToPageAndScroll","pageNumber","changeSizeAndScroll","evt","target","value","Loading","size","undefined","ref","headerGroup","getHeaderGroupProps","headers","column","canSort","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","onBlur","onChange","pg","disabled","paginationIndex","refreshPage","window","location","reload","error","style","backgroundColor","status","getQueryStateFromURL","searchStr","serializers","innerState","parametersFromURL","URLSearchParams","Object","entries","forEach","parameter","serializer","String","get","useQueryParametersState","history","stateWithURL","search","currentState","setCurrentState","newState","JSON","stringify","parametersToChange","changed","defaultValue","newValue","set","delete","toString","parts","pathname","tabs","label","to","startsWith","hash","Status","FetchError","MarkerPopup","sample","attributes","ClusterMarkerPopup","accessions","accession","MyMapComponent","theMap","setTheMap","markerCluster","sampleInfoWindow","google","maps","InfoWindow","clusterInfoWindow","newBoundary","LatLngBounds","markers","tmpMap","Map","maxZoom","minZoom","clearMarkers","filter","position","lat","latitude","lng","longitude","marker","Marker","extend","addListener","setContent","open","values","imagePath","event","cluster","this","prevZoom_","getMaxZoom","getSize","setPosition","getCenter","getMarkers","m","getTitle","fitBounds","height","study","limit","setLimit","samples","total","setPage","setSamples","setTotal","useMGnifyData","study_accession","aggregatedSamples","totalInResponse","count","links","next","config","useContext","UserContext","samplesFiltered","Wrapper","apiKey","googleMapsKey","theme","children","include","ordering","page_size","included","description","biome","relationships","Header","accessor","analysis","Cell","float","unescape","EMGTable","lineage","biomes","publications","Date","toDateString","studies","enaURL","isDefault","studyData","Overview","biomeIconMapD2","biomeIconMapD3","biomeIconMapD4","biomeIconMapD5","biomeIconMapD6","getBiomeIcon","lineageList","x","toLowerCase","lineageD2","lineageD3","lineageD4","lineageD5","lineageD6"],"mappings":"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","file":"js/80.46e7abb6.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport CoverImage from 'images/cover_main_publication.gif';\nimport publications from './publications.json';\n\nimport './style.css';\n\nconst trimAuthors = (text: string, maxAuthorsLength: number): string => {\n  const authorList = text.slice(0, maxAuthorsLength).split(',');\n  authorList.pop();\n  authorList.push(' et al.');\n  return authorList.join(',');\n};\n\nexport const Publication: React.FC<{\n  title: string;\n  journal: string;\n  year: number;\n  link: string;\n  doi: string;\n  authors: string;\n  maxAuthorsLength?: number;\n}> = ({ title, journal, year, link, doi, authors, maxAuthorsLength }) => {\n  const trimmedAuthors =\n    maxAuthorsLength && authors.length > maxAuthorsLength\n      ? trimAuthors(authors, maxAuthorsLength)\n      : authors;\n  return (\n    <section className=\"mg-pub\">\n      <span className=\"mg-pub-title\">{title}.</span>{' '}\n      <span className=\"mg-pub-journal\">{journal}</span> (\n      <span className=\"mg-pub-year\">{year}</span>){' '}\n      <span className=\"mg-pub-doi\">\n        doi:\n        <a title={title} href={link} className=\"ext\">\n          {doi}\n        </a>\n      </span>\n      <div className=\"mg-pub-authors\">{trimmedAuthors}.</div>\n    </section>\n  );\n};\nexport const MainPublication: React.FC = () => {\n  const publication = publications.filter((pub) => pub.main)?.[0];\n  return (\n    <div className=\"embl-grid | vf-content\">\n      <div className=\"vf-section-header mg-pub-section-header\">\n        <img\n          alt=\"Cover of the journal\"\n          src={CoverImage}\n          className=\"mg-pub-cover\"\n        />\n      </div>\n      <div>\n        <p>To cite MGnify, please refer to the following publication:</p>\n        {publication && (\n          <Publication\n            title={publication.title}\n            journal={publication.journal}\n            year={publication.year}\n            link={publication.link}\n            doi={publication.doi}\n            authors={publication.authors}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\nconst Publications: React.FC = () => {\n  const [showMore, setShowMore] = useState(false);\n  return (\n    <section className=\"mg-pub-section\">\n      {publications\n        .filter((pub) => showMore || pub.recent)\n        .map((pub) => (\n          <article key={pub.doi}>\n            <Publication\n              title={pub.title}\n              journal={pub.journal}\n              year={pub.year}\n              link={pub.link}\n              doi={pub.doi}\n              authors={pub.authors}\n            />\n          </article>\n        ))}\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--sm\"\n          onClick={() => setShowMore(!showMore)}\n        >\n          {showMore ? 'Less' : 'More'} publications\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default Publications;\n","import React, { MouseEventHandler } from 'react';\n\ntype PaginationButtonProps = {\n  currentPageIndex: number;\n  pageIndex: number;\n  gotoPage: (pageIndex: number) => MouseEventHandler;\n};\n\nconst PaginationButton: React.FC<PaginationButtonProps> = ({\n  currentPageIndex,\n  pageIndex,\n  gotoPage,\n}) => {\n  if (currentPageIndex === pageIndex) {\n    return (\n      <li className=\"vf-pagination__item vf-pagination__item--is-active\">\n        <span className=\"vf-pagination__label\" aria-current=\"page\">\n          <span className=\"vf-u-sr-only\">Page </span>\n          {currentPageIndex + 1}\n        </span>\n      </li>\n    );\n  }\n  return (\n    <li className=\"vf-pagination__item\">\n      <button\n        type=\"button\"\n        onClick={() => gotoPage(pageIndex)}\n        className=\"vf-button vf-button--link vf-pagination__link\"\n      >\n        <span className=\"vf-u-sr-only\"> page</span>\n        {pageIndex + 1}\n      </button>\n    </li>\n  );\n};\n\nexport default PaginationButton;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, {\n  useRef,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEventHandler,\n} from 'react';\nimport { Column, usePagination, useSortBy, useTable } from 'react-table';\n\nimport Loading from 'components/UI/Loading';\nimport { MGnifyResponse } from 'src/hooks/data/useData';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport PaginationButton from './PaginationButton';\n\nimport './style.css';\n\ntype PaginationRanges = {\n  startingPages: number[];\n  endingPages: number[];\n  adjacentPages: number[];\n  hasJumpFromStart: boolean;\n  hasJumpToEnd: boolean;\n};\n\nfunction getPaginationRanges(\n  pageIndex: number,\n  pageCount: number\n): PaginationRanges {\n  const startingPages = pageCount > 1 ? [0, 1] : [0];\n\n  const adjacentPages = pageCount > 2 ? [Math.max(2, pageIndex - 2)] : [];\n  for (\n    let page = adjacentPages[0] + 1;\n    page < pageCount - 2 && adjacentPages.length < 5;\n    page += 1\n  ) {\n    adjacentPages.push(page);\n  }\n\n  let endingPages = [];\n  if (pageCount > 7) {\n    endingPages = [pageCount - 2, pageCount - 1];\n  } else if (pageCount > 6) {\n    endingPages = [pageCount - 1];\n  }\n\n  return {\n    startingPages,\n    endingPages,\n    adjacentPages,\n    hasJumpFromStart:\n      !!adjacentPages.length &&\n      adjacentPages[0] > startingPages[startingPages.length - 1] + 1,\n    hasJumpToEnd:\n      !!endingPages.length &&\n      !!adjacentPages.length &&\n      endingPages[0] > adjacentPages[adjacentPages.length - 1] + 1,\n  };\n}\n\nfunction getOrderingQueryParamFromSortedColumn(\n  tableSortBy: Array<{ id: string; desc: boolean }>\n): string {\n  if (!tableSortBy.length) return '';\n  const col = tableSortBy[0];\n  return `${col.desc ? '-' : ''}${col.id\n    .replace(/attributes./g, '')\n    .replace(/-/g, '_')}`;\n}\n\ntype EMGTableProps = {\n  cols: Column[];\n  data: MGnifyResponse;\n  title?: string | React.CElement<any, any>;\n  showPagination?: boolean;\n  initialPage?: number;\n  initialPageSize?: number;\n  className?: string;\n  namespace?: string;\n  sortable?: boolean;\n  loading?: boolean;\n  isStale?: boolean;\n};\n\nconst EMGTable: React.FC<EMGTableProps> = ({\n  cols,\n  data,\n  title,\n  initialPage = 0,\n  initialPageSize = 25,\n  className = '',\n  namespace = '',\n  showPagination = true,\n  sortable = false,\n  loading = false,\n  isStale = false,\n}) => {\n  const [queryParameters, setQueryParameters] = useQueryParametersState(\n    {\n      [`${namespace}page`]: 1,\n      [`${namespace}order`]: '',\n      [`${namespace}page_size`]: initialPageSize,\n    },\n    {\n      [`${namespace}page`]: Number,\n      [`${namespace}page_size`]: Number,\n    }\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageCount,\n    gotoPage,\n    setPageSize,\n    nextPage,\n    previousPage,\n    state: { pageIndex, pageSize, sortBy },\n  } = useTable(\n    {\n      columns: cols,\n      data: data.data,\n      initialState: {\n        pageIndex: initialPage,\n        pageSize: queryParameters[`${namespace}page_size`],\n      },\n      pageCount: data.meta.pagination.pages,\n      manualPagination: true,\n      manualSortBy: true,\n    },\n    useSortBy,\n    usePagination\n  );\n  const tableRef = useRef(null);\n  const [isChangingPage, setChangingPage] = useState(false);\n\n  useEffect(() => {\n    if (\n      showPagination &&\n      queryParameters[`${namespace}page`] !== pageIndex + 1\n    ) {\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}page`]: pageIndex + 1,\n      });\n      if (tableRef.current && isChangingPage) {\n        tableRef.current.scrollIntoView();\n        setChangingPage(false);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showPagination, setQueryParameters, pageIndex]);\n\n  useEffect(() => {\n    if (\n      showPagination &&\n      queryParameters[`${namespace}page_size`] !== pageSize\n    ) {\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}page_size`]: pageSize,\n      });\n      if (tableRef.current && isChangingPage) {\n        tableRef.current.scrollIntoView();\n        setChangingPage(false);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showPagination, setQueryParameters, pageSize]);\n\n  useEffect(() => {\n    if (sortable) {\n      const order = getOrderingQueryParamFromSortedColumn(sortBy);\n      if (order === queryParameters[`${namespace}order`]) return;\n      setQueryParameters({\n        ...queryParameters,\n        [`${namespace}order`]: order,\n        [`${namespace}page`]: 1,\n      });\n      if (tableRef.current && isChangingPage) {\n        tableRef.current.scrollIntoView();\n        setChangingPage(false);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showPagination, setQueryParameters, sortBy, sortable]);\n\n  const paginationRanges = useMemo(\n    () => getPaginationRanges(pageIndex, pageCount),\n    [pageIndex, pageCount]\n  );\n  const goToPageAndScroll = (pageNumber): MouseEventHandler => {\n    setChangingPage(true);\n    return gotoPage(pageNumber);\n  };\n  const changeSizeAndScroll = (evt): void => {\n    setChangingPage(true);\n    return setPageSize(+evt.target.value);\n  };\n\n  if (loading && !isStale) return <Loading size=\"small\" />;\n\n  return (\n    <section>\n      <div className=\"mg-table-overlay-container\">\n        <div className={loading && isStale ? 'mg-table-overlay' : undefined} />\n        <table\n          {...getTableProps}\n          className={`vf-table--striped ${className}`}\n          ref={tableRef}\n        >\n          <caption className=\"vf-table__caption\">{title}</caption>\n          <thead className=\"vf-table__header\">\n            {headerGroups.map((headerGroup) => (\n              <tr\n                {...headerGroup.getHeaderGroupProps()}\n                className=\"vf-table__row\"\n              >\n                {headerGroup.headers.map((column) => (\n                  <th\n                    {...(sortable && column.canSort\n                      ? column.getHeaderProps(column.getSortByToggleProps())\n                      : { key: column.id })}\n                    className=\"vf-table__heading\"\n                  >\n                    {column.render('Header')}\n                    {sortable && column.canSort && (\n                      <>\n                        &nbsp;\n                        <span>\n                          {/* eslint-disable-next-line no-nested-ternary */}\n                          {column.isSorted ? (\n                            column.isSortedDesc ? (\n                              <i className=\"icon icon-common icon-sort-down\" />\n                            ) : (\n                              <i className=\"icon icon-common icon-sort-up\" />\n                            )\n                          ) : (\n                            <i className=\"icon icon-common icon-sort\" />\n                          )}\n                        </span>\n                      </>\n                    )}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"vf-table__body\">\n            {rows.map((row) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()} className=\"vf-table__row\">\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()} className=\"vf-table__cell\">\n                        {cell.render('Cell')}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      {showPagination && (\n        <section className=\"mg-table-footer\">\n          <label className=\"vf-form__label\">\n            Page Size:\n            <select\n              className=\"vf-form__select\"\n              value={queryParameters[`${namespace}page_size`] as number}\n              onBlur={changeSizeAndScroll}\n              onChange={changeSizeAndScroll}\n            >\n              {[10, 25, 50].map((pg) => (\n                <option key={pg} value={pg}>\n                  Show {pg}\n                </option>\n              ))}\n            </select>\n          </label>\n          <nav className=\"vf-pagination\" aria-label=\"Pagination\">\n            <ul className=\"vf-pagination__list\">\n              <li className=\"vf-pagination__item vf-pagination__item--previous-page\">\n                <button\n                  disabled={!canPreviousPage}\n                  type=\"button\"\n                  onClick={previousPage}\n                  className=\"vf-button vf-button--link vf-pagination__link\"\n                >\n                  Previous<span className=\"vf-u-sr-only\"> page</span>\n                </button>\n              </li>\n\n              {paginationRanges.startingPages.map((paginationIndex) => (\n                <PaginationButton\n                  key={paginationIndex}\n                  currentPageIndex={pageIndex}\n                  pageIndex={paginationIndex}\n                  gotoPage={goToPageAndScroll}\n                />\n              ))}\n\n              {paginationRanges.hasJumpFromStart && (\n                <li className=\"vf-pagination__item\">\n                  <span className=\"vf-pagination__label\">...</span>\n                </li>\n              )}\n\n              {paginationRanges.adjacentPages.map((paginationIndex) => (\n                <PaginationButton\n                  key={paginationIndex}\n                  currentPageIndex={pageIndex}\n                  pageIndex={paginationIndex}\n                  gotoPage={goToPageAndScroll}\n                />\n              ))}\n\n              {paginationRanges.hasJumpToEnd && (\n                <li className=\"vf-pagination__item\">\n                  <span className=\"vf-pagination__label\">...</span>\n                </li>\n              )}\n\n              {paginationRanges.endingPages.map((paginationIndex) => (\n                <PaginationButton\n                  key={paginationIndex}\n                  currentPageIndex={pageIndex}\n                  pageIndex={paginationIndex}\n                  gotoPage={goToPageAndScroll}\n                />\n              ))}\n\n              <li className=\"vf-pagination__item vf-pagination__item--next-page\">\n                <button\n                  disabled={!canNextPage}\n                  type=\"button\"\n                  onClick={nextPage}\n                  className=\"vf-button vf-button--link vf-pagination__link\"\n                >\n                  Next<span className=\"vf-u-sr-only\"> page</span>\n                </button>\n              </li>\n            </ul>\n          </nav>\n        </section>\n      )}\n    </section>\n  );\n};\n\nexport default EMGTable;\n","import React from 'react';\nimport { ErrorFromFetch, ErrorTypes } from 'hooks/data/useData';\n\nconst refreshPage = (): void => {\n  window.location.reload();\n};\n\nconst FetchError: React.FC<{ error: ErrorFromFetch }> = ({ error }) => {\n  if (!error || error.type === ErrorTypes.NullURL) return null;\n  return (\n    <div\n      className=\"vf-box vf-box-theme--primary vf-box--easy\"\n      style={{\n        backgroundColor: 'lemonchiffon',\n      }}\n    >\n      <h3 className=\"vf-box__heading\">\n        <span className=\"icon icon-common icon-exclamation-triangle\" /> Error\n        Fetching Data\n      </h3>\n      <p className=\"vf-box__text\">\n        {error?.type === ErrorTypes.FetchError &&\n          `There were problems with the request. [${error.error}]`}\n        {error?.type === ErrorTypes.NotOK &&\n          `The response from the server was not OK [Status: ${error.status}].`}\n        {error?.type === ErrorTypes.JSONError &&\n          `The recovered resource didn't follow the expected format [${error.error}].`}\n      </p>\n      <div className=\"mg-right\">\n        <button\n          type=\"button\"\n          className=\"vf-button vf-button--tertiary vf-button--sm \"\n          onClick={refreshPage}\n        >\n          Refresh\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FetchError;\n","import { useState, useEffect, useMemo } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nconst useQueryParamState: <S>(\n  parameter: string,\n  defaultValue: S\n) => [string | S, (s: S) => void] = (parameter, defaultValue) => {\n  const location = useLocation();\n  const history = useHistory();\n  const parameters = new URLSearchParams(location.search);\n  const [value, setValue] = useState(parameters.get(parameter) || defaultValue);\n\n  // The Query parameters have changed, so we need to update the value if needed.\n  useEffect(() => {\n    const changedParameters = new URLSearchParams(location.search);\n    if (changedParameters.get(parameter) === value) return;\n    setValue(changedParameters.get(parameter) || defaultValue);\n  }, [location.search, defaultValue, parameter, value]);\n\n  // Pushes the new URL(including the new parameter value) into history\n  const setParameterInURL: (newValue: unknown) => void = (newValue) => {\n    if (String(newValue) === String(value)) return;\n    const parametersToChange = new URLSearchParams(location.search);\n    parametersToChange.set(parameter, String(newValue));\n    // The default value is not displayed in the URL\n    if (newValue === defaultValue) {\n      parametersToChange.delete(parameter);\n    }\n    location.search = parametersToChange.toString();\n    history.push(location);\n  };\n\n  return [value, setParameterInURL];\n};\n\nexport type QueryState = {\n  [parameter: string]: unknown;\n};\ntype SerializersType = {\n  [parameter: string]: (str: string) => unknown;\n};\n\nconst getQueryStateFromURL = (\n  state: QueryState,\n  searchStr: string,\n  serializers: SerializersType\n): QueryState => {\n  const innerState = {};\n  const parametersFromURL = new URLSearchParams(searchStr);\n  Object.entries(state).forEach(([parameter, value]) => {\n    const serializer = serializers[parameter] || String;\n    innerState[parameter] = serializer(\n      parametersFromURL.get(parameter) || (value as string)\n    );\n  });\n  return innerState;\n};\nexport const useQueryParametersState: (\n  initialState: QueryState,\n  serializers?: SerializersType\n) => [QueryState, (s: QueryState) => void] = (\n  initialState,\n  serializers = {}\n) => {\n  const location = useLocation();\n  const history = useHistory();\n  const stateWithURL = useMemo(\n    () => getQueryStateFromURL(initialState, location.search, serializers),\n    [initialState, location.search, serializers]\n  );\n  const [currentState, setCurrentState] = useState(stateWithURL);\n\n  // The Query parameters have changed, so we need to update the value if needed.\n  useEffect(() => {\n    const newState = getQueryStateFromURL(\n      initialState,\n      location.search,\n      serializers\n    );\n    if (JSON.stringify(newState) === JSON.stringify(currentState)) return;\n    setCurrentState(newState);\n  }, [location.search, currentState, initialState, serializers]);\n\n  // Pushes the new URL(including the new parameter value) into history\n  const setParametersInURL: (newState: QueryState) => void = (newState) => {\n    if (JSON.stringify(newState) === JSON.stringify(currentState)) return;\n    const parametersToChange = new URLSearchParams(location.search);\n\n    let changed = false;\n    Object.entries(initialState).forEach(([parameter, defaultValue]) => {\n      const newValue =\n        parameter in newState ? newState[parameter] : defaultValue;\n      if (newState[parameter] !== currentState[parameter]) {\n        parametersToChange.set(parameter, String(newValue));\n        if (newValue === defaultValue) {\n          parametersToChange.delete(parameter);\n        }\n        changed = true;\n      }\n    });\n\n    // The default value is not displayed in the URL\n    if (changed) {\n      location.search = parametersToChange.toString();\n      history.push(location);\n    }\n  };\n\n  return [currentState, setParametersInURL];\n};\n\nexport default useQueryParamState;\n","import { useLocation } from 'react-router-dom';\n\nconst useURLAccession = (): string | undefined => {\n  const location = useLocation();\n  const parts = location.pathname.split('/');\n  return parts?.[parts.length - 1];\n};\n\nexport default useURLAccession;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Tab: React.FC = () => null;\n\ntype TabsProps = {\n  tabs: Array<{\n    label: string;\n    to: string;\n  }>;\n};\nconst Tabs: React.FC<TabsProps> = ({ tabs }) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"vf-tabs mg-search-tabs\">\n      <ul className=\"vf-tabs__list\">\n        {tabs.map(({ label, to }) => (\n          <li className=\"vf-tabs__item\" key={label}>\n            <Link\n              className={`vf-tabs__link ${\n                to === location.pathname ||\n                (to.startsWith('#') && to === location.hash)\n                  ? 'is-active'\n                  : ''\n              }`}\n              to={to}\n            >\n              {label}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tabs;\n","import React, {\n  useEffect,\n  useRef,\n  useState,\n  useContext,\n  ReactElement,\n} from 'react';\nimport ReactDOMServer from 'react-dom/server';\n// import { Link } from 'react-router-dom';\n\nimport { Wrapper, Status } from '@googlemaps/react-wrapper';\nimport MarkerClusterer from '@googlemaps/markerclustererplus';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport useSamplesProvider from 'hooks/data/useSamplesProvider';\nimport { ErrorTypes, MGnifyDatum } from 'hooks/data/useData';\n\nimport UserContext from 'pages/Login/UserContext';\nimport './style.css';\n\nconst LIMIT = 200;\n\nconst render = (status: Status): ReactElement => {\n  if (status === Status.LOADING) return <Loading />;\n  if (status === Status.FAILURE)\n    return (\n      <FetchError\n        error={{\n          status: 200,\n          type: ErrorTypes.OtherError,\n          error: status,\n        }}\n      />\n    );\n  return null;\n};\n\n// TODO: make the link play nicer with react-router\nconst MarkerPopup: React.FC<{ sample: MGnifyDatum }> = ({ sample }) => (\n  <div className=\"vf-box vf-box--easy\">\n    <h3 className=\"vf-box__heading\">\n      <a href={`../samples/${sample.id}`}>{sample.id}</a>\n      {/* <Link to=\"/search/studies\">{sample.id}</Link> */}\n    </h3>\n    <p className=\"vf-box__text\">{sample.attributes['sample-desc']}</p>\n  </div>\n);\nconst ClusterMarkerPopup: React.FC<{ accessions: string[] }> = ({\n  accessions,\n}) => (\n  <div className=\"vf-box vf-box--easy\">\n    <h3 className=\"vf-box__heading\">Samples on this geographical location</h3>\n    <ul className=\"vf-list\">\n      {accessions.map((accession) => (\n        <li ref={accession}>\n          <a href={`../samples/${accession}`}>{accession}</a>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\ntype MapProps = {\n  data: Array<MGnifyDatum>;\n};\nconst MyMapComponent: React.FC<MapProps> = ({ data }) => {\n  const ref = useRef();\n  const [theMap, setTheMap] = useState(null);\n  const markerCluster = useRef<MarkerClusterer>(null);\n  const sampleInfoWindow = useRef(new google.maps.InfoWindow());\n  const clusterInfoWindow = useRef(new google.maps.InfoWindow());\n  const newBoundary = useRef(new google.maps.LatLngBounds());\n\n  const markers = useRef({});\n\n  useEffect(() => {\n    if (theMap === null) {\n      const tmpMap = new google.maps.Map(ref.current, {\n        maxZoom: 10,\n        minZoom: 2,\n      });\n      setTheMap(tmpMap);\n    }\n  }, [theMap]);\n  useEffect(() => {\n    if (theMap && data) {\n      if (markerCluster.current) {\n        markerCluster.current.clearMarkers();\n      }\n\n      data\n        .filter(({ id }) => !(id in markers.current))\n        .forEach((sample) => {\n          const position = {\n            lat: sample.attributes.latitude as number,\n            lng: sample.attributes.longitude as number,\n          };\n          const marker = new google.maps.Marker({\n            position,\n            title: sample.id,\n          });\n          newBoundary.current.extend(position);\n          marker.addListener('click', () => {\n            sampleInfoWindow.current.setContent(\n              ReactDOMServer.renderToString(<MarkerPopup sample={sample} />)\n            );\n            sampleInfoWindow.current.open(theMap, marker);\n          });\n          markers.current[sample.id] = marker;\n        });\n      markerCluster.current = new MarkerClusterer(\n        theMap,\n        Object.values(markers.current),\n        {\n          imagePath:\n            'https://raw.githubusercontent.com/googlemaps/js-markerclustererplus/master/images/m',\n          maxZoom: 10,\n        }\n      );\n\n      // for clusters in MAX Zoom and with less than 10 elements show a list\n      google.maps.event.addListener(\n        markerCluster.current,\n        'click',\n        // eslint-disable-next-line func-names\n        function (cluster) {\n          if (\n            // eslint-disable-next-line no-underscore-dangle, react/no-this-in-sfc\n            this.prevZoom_ + 1 <= this.getMaxZoom() ||\n            cluster.getSize() >= 10\n          ) {\n            return;\n          }\n          clusterInfoWindow.current.setPosition(cluster.getCenter());\n\n          clusterInfoWindow.current.setContent(\n            ReactDOMServer.renderToString(\n              <ClusterMarkerPopup\n                accessions={cluster.getMarkers().map((m) => m.getTitle())}\n              />\n            )\n          );\n\n          clusterInfoWindow.current.open(theMap);\n        }\n      );\n\n      theMap.fitBounds(newBoundary.current);\n    }\n  }, [theMap, data]);\n\n  return <div ref={ref} id=\"map\" style={{ height: '100%' }} />;\n};\n\ntype SamplesMapProps = {\n  study: string;\n};\nconst SamplesMap: React.FC<SamplesMapProps> = ({ study }) => {\n  const [limit, setLimit] = useState(LIMIT);\n  const { samples, total } = useSamplesProvider(study, limit);\n  const { config } = useContext(UserContext);\n\n  const samplesFiltered = samples.filter((sample) => {\n    try {\n      return (\n        Number(sample.attributes.longitude) !== 0.0 &&\n        Number(sample.attributes.latitude) !== 0.0\n      );\n    } catch {\n      return false;\n    }\n  });\n\n  return (\n    <div className=\"mg-map-container\">\n      <div className=\"mg-map-wrapper\">\n        <Wrapper apiKey={config.googleMapsKey} render={render}>\n          <MyMapComponent data={samplesFiltered} />\n        </Wrapper>\n      </div>\n      {total && (\n        <div className=\"mg-map-progress\">\n          <progress max={total} value={samples.length} />\n          {total > limit && (\n            <div>\n              ⚠️ We are only loading the first {LIMIT} samples. Click{' '}\n              <button\n                type=\"button\"\n                className=\"vf-button vf-button--link mg-button-as-link\"\n                onClick={() => setLimit(total)}\n              >\n                HERE\n              </button>{' '}\n              to load them all.\n            </div>\n          )}\n          {samplesFiltered.length === 0 && (\n            <div>\n              ⚠️ None of the {total > limit ? 'loaded' : ''} samples have\n              geolocation co-ordinates.\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SamplesMap;\n","import { useState, useEffect } from 'react';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, ErrorFromFetch } from 'hooks/data/useData';\n\ntype SampleProviderResponse = {\n  samples: MGnifyDatum[];\n  total: number | null;\n  loading: boolean;\n  error: ErrorFromFetch;\n};\nconst useSamplesProvider = (\n  study: string,\n  limit?: number\n): SampleProviderResponse => {\n  const [page, setPage] = useState(1);\n  const [samples, setSamples] = useState<MGnifyDatum[]>([]);\n  const [total, setTotal] = useState(null);\n  const { data, isStale, loading, error } = useMGnifyData('samples', {\n    study_accession: study,\n    page,\n  });\n  useEffect(() => {\n    if (data?.data && !isStale && page === data?.meta?.pagination?.page) {\n      const aggregatedSamples = [...samples, ...(data.data as MGnifyDatum[])];\n      setSamples(aggregatedSamples);\n      const totalInResponse = data?.meta?.pagination?.count;\n      if (total !== totalInResponse && typeof totalInResponse === 'number') {\n        setTotal(totalInResponse);\n      }\n      if (data?.links?.next && aggregatedSamples.length < limit) {\n        setPage(page + 1);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data, page, limit]);\n  useEffect(() => {\n    if (data?.links?.next && samples.length < limit) {\n      setPage(page + 1);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [limit]);\n\n  return { samples, total, loading, error };\n};\n\nexport default useSamplesProvider;\n","import React from 'react';\n\nconst Box: React.FC<{ label: string; theme?: string }> = ({\n  label,\n  theme = 'primary',\n  children,\n}) => (\n  <div className=\"vf-grid\">\n    <div className={`vf-box vf-box--easy vf-box-theme--${theme}`}>\n      <h5 className=\"vf-box__heading\">{label}</h5>\n      <div className=\"vf-box__text\">{children}</div>\n    </div>\n  </div>\n);\n\nexport default Box;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { unescape } from 'lodash';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseList } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { useQueryParametersState } from 'hooks/useQueryParamState';\nimport { getBiomeIcon } from 'utils/biomes';\n\nconst initialPageSize = 10;\nconst AnalysesTable: React.FC = () => {\n  const accession = useURLAccession();\n  const [queryParameters] = useQueryParametersState(\n    {\n      'analyses-page': 1,\n      'analyses-page_size': initialPageSize,\n      'analyses-order': '',\n    },\n    {\n      'analyses-page': Number,\n      'analyses-page_size': Number,\n    }\n  );\n  const { data, loading, error, isStale } = useMGnifyData(\n    `studies/${accession}/analyses`,\n    {\n      include: 'sample',\n      page: queryParameters['analyses-page'] as number,\n      ordering: queryParameters['analyses-order'] as string,\n      page_size: queryParameters['analyses-page_size'] as number,\n    }\n  );\n  if (loading && !isStale) return <Loading size=\"small\" />;\n  if (error || !data) return <FetchError error={error} />;\n\n  const samples = {};\n  data.included\n    ?.filter(({ type }) => type === 'samples')\n    .forEach((sample) => {\n      samples[sample.id as string] = {\n        description: sample.attributes['sample-desc'],\n        biome: (\n          sample.relationships as Record<string, { data: { id: string } }>\n        ).biome.data.id,\n      };\n    });\n  const columns = [\n    {\n      id: 'biome_id',\n      Header: 'Biome',\n      accessor: (analysis) =>\n        samples?.[analysis?.relationships?.sample?.data?.id]?.biome || '',\n      Cell: ({ cell }) => (\n        <span\n          className={`biome_icon icon_xs ${getBiomeIcon(cell.value)}`}\n          style={{ float: 'initial' }}\n        />\n      ),\n    },\n    {\n      id: 'sample',\n      Header: 'Sample accession',\n      accessor: (analysis) => analysis?.relationships?.sample?.data?.id,\n      Cell: ({ cell }) => (\n        <Link to={`/samples/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'description_id',\n      Header: 'Sample description',\n      accessor: (analysis) =>\n        samples?.[analysis?.relationships?.sample?.data?.id]?.description || '',\n      Cell: ({ cell }) => unescape(cell.value),\n    },\n    {\n      id: 'assembly_id',\n      Header: ' Run / Assembly accession',\n      accessor: (analysis) => analysis?.relationships?.sample?.data?.id || '',\n      Cell: ({ cell }) => (\n        <Link to={`/assemblies/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'pipeline_id',\n      Header: 'Pipeline version',\n      accessor: (analysis) => analysis.attributes['pipeline-version'],\n      Cell: ({ cell }) => (\n        <Link to={`/pipelines/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n    {\n      id: 'analysis_id',\n      Header: 'Analysis accession',\n      accessor: (analysis) => analysis.id,\n      Cell: ({ cell }) => (\n        <Link to={`/analyses/${cell.value}`}>{cell.value}</Link>\n      ),\n    },\n  ];\n\n  return (\n    <EMGTable\n      cols={columns}\n      data={data as MGnifyResponseList}\n      title=\"Analyses\"\n      initialPage={(queryParameters['analyses-page'] as number) - 1}\n      initialPageSize={initialPageSize}\n      className=\"mg-anlyses-table\"\n      loading={loading}\n      isStale={isStale}\n      namespace=\"analyses-\"\n    />\n  );\n};\n\nexport default AnalysesTable;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport SamplesMap from 'components/UI/SamplesMap';\nimport Box from 'components/UI/Box';\nimport { getBiomeIcon } from 'utils/biomes';\nimport { Publication } from 'components/Publications';\nimport AnalysesTable from 'components/Analyses/Table';\nimport UserContext from 'pages/Login/UserContext';\n\ntype StudyOverviewProps = {\n  data: MGnifyDatum;\n  included: Array<unknown>;\n};\nconst StudyOverview: React.FC<StudyOverviewProps> = ({ data, included }) => {\n  const { config } = useContext(UserContext);\n  const lineage = data.relationships.biomes.data[0].id;\n  const publications = included.filter(({ type }) => type === 'publications');\n  return (\n    <section>\n      <div className=\"vf-grid\">\n        <div>\n          <h4>\n            Last updated:{' '}\n            {new Date(\n              data?.attributes?.['last-update'] as string\n            ).toDateString()}\n          </h4>\n          <Box label=\"Classification\">\n            <span\n              className={`biome_icon icon_sm ${getBiomeIcon(lineage)}`}\n              style={{ float: 'initial' }}\n            />\n            {lineage}\n          </Box>\n          <Box label=\"Description\">{data.attributes['study-abstract']}</Box>\n        </div>\n        <SamplesMap study={data.id} />\n      </div>\n      <br />\n      <div className=\"mg-flex\">\n        {data?.relationships?.studies?.data?.length > 0 && (\n          <Box label=\"Related studies\">\n            <ul className=\"vf-list\">\n              {data.relationships.studies.data.map(({ id }) => (\n                <li key={id as string}>\n                  <Link to={`/studies/${id}`}>{id}</Link>\n                </li>\n              ))}\n            </ul>\n          </Box>\n        )}\n        <div>\n          {data?.attributes?.['is-public'] && (\n            <Box label=\"External links\">\n              <ul className=\"vf-list\">\n                <li>\n                  <a\n                    className=\"ext\"\n                    href={`${config.enaURL}/${data.attributes['secondary-accession']}`}\n                  >\n                    ENA website ({data.attributes['secondary-accession']})\n                  </a>\n                </li>\n              </ul>\n            </Box>\n          )}\n          {publications?.length > 0 && (\n            <Box label=\"Publications\">\n              <ul className=\"vf-list\">\n                {publications.map(({ attributes, id }) => (\n                  <li key={id as string}>\n                    <Publication\n                      title={attributes['pub-title']}\n                      journal={attributes['iso-journal']}\n                      year={attributes['published-year']}\n                      link={`http://${attributes.doi}`}\n                      doi={attributes.doi}\n                      authors={attributes.authors}\n                      maxAuthorsLength={70}\n                    />\n                  </li>\n                ))}\n              </ul>\n            </Box>\n          )}\n        </div>\n      </div>\n      <br />\n      <div>\n        <AnalysesTable />\n      </div>\n    </section>\n  );\n};\n\nexport default StudyOverview;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\ntype PropsType = {\n  hash: string;\n  isDefault?: boolean;\n};\nconst RouteForHash: React.FC<PropsType> = ({\n  hash,\n  isDefault = false,\n  children,\n}) => {\n  const location = useLocation();\n  const history = useHistory();\n  if (location.hash === '' && isDefault) {\n    history.replace(hash);\n  }\n\n  if (location.hash === hash) {\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport default RouteForHash;\n","import React from 'react';\n\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Tabs from 'components/UI/Tabs';\nimport Overview from 'components/Study/Overview';\nimport RouteForHash from 'components/Nav/RouteForHash';\n\nconst tabs = [\n  { label: 'Overview', to: '#overview' },\n  { label: 'Analysis summary', to: '#analysis' },\n];\n\nconst StudyPage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`studies/${accession}`, {\n    include: 'publications',\n  });\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: studyData, included } = data as MGnifyResponseObj;\n  return (\n    <section className=\"vf-content\">\n      <h2>Study {accession}</h2>\n      <h3>{studyData.attributes['study-name']}</h3>\n      <Tabs tabs={tabs} />\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <RouteForHash hash=\"#overview\" isDefault>\n            <Overview data={studyData} included={included || []} />\n          </RouteForHash>\n          <RouteForHash hash=\"#analysis\">\n            <div>analysis ????</div>\n          </RouteForHash>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default StudyPage;\n","const biomeIconMapD2 = {\n  'root:engineered': 'engineered_b',\n};\nconst biomeIconMapD3 = {\n  'root:engineered:wastewater': 'wastewater_b',\n  'root:environmental:air': 'air_b',\n  'root:host-associated:amphibia': 'amphibian_b',\n  'root:host-associated:arthropoda': 'arthropoda_b',\n  'root:host-associated:fish': 'fish_b',\n  'root:host-associated:human': 'human_host_b',\n  'root:host-associated:insecta': 'insect_b',\n  'root:host-associated:mammals': 'mammals_b',\n  'root:host-associated:mollusca': 'mollusca_b',\n  'root:host-associated:plants': 'plant_host_b',\n  'root:host-associated:porifera': 'porifera_b',\n};\nconst biomeIconMapD4 = {\n  'root:environmental:aquatic:freshwater': 'freshwater_b',\n  'root:environmental:aquatic:marine': 'marine_b',\n  'root:environmental:aquatic:thermal springs': 'hotspring_b',\n  'root:environmental:terrestrial:soil': 'soil_b',\n  'root:environmental:terrestrial:volcanic': 'vulcano_b',\n  'root:host-associated:human:digestive system': 'human_gut_b',\n  'root:host-associated:human:skin': 'skin_b',\n};\n\nconst biomeIconMapD5 = {\n  'root:environmental:aquatic:freshwater:drinking water': 'drinking_water_b',\n  'root:environmental:aquatic:freshwater:groundwater': 'groundwater_b',\n  'root:environmental:aquatic:freshwater:ice': 'ice_b',\n  'root:environmental:aquatic:freshwater:lake': 'lake_b',\n  'root:environmental:aquatic:freshwater:lotic': 'river_b',\n  'root:environmental:aquatic:marine:hydrothermal vents':\n    'hydrothermal_vents_b',\n  'root:environmental:terrestrial:soil:wetlands': 'wetlands_b',\n  'root:host-associated:human:digestive system:oral': 'mouth_b',\n  'root:host-associated:human:respiratory system:pulmonary system': 'lung_b',\n  'root:host-associated:mammals:nervous system:brain': 'brain_b',\n};\n\nconst biomeIconMapD6 = {\n  'root:environmental:aquatic:freshwater:groundwater:cave water': 'cave_b',\n  'root:environmental:aquatic:freshwater:ice:glacier': 'glacier_b',\n  'root:environmental:terrestrial:soil:grasslands': 'grassland_b',\n  'root:environmental:terrestrial:soil:loam:forest soil': 'forest_b',\n  'root:environmental:terrestrial:soil:sand:desert': 'desert_b',\n};\n\n/**\n * Retrieve biome icon for a lineage\n */\nexport function getBiomeIcon(lineage: string): string {\n  const lineageList = (lineage || '').split(':').map((x) => x.toLowerCase());\n\n  const lineageD2 = lineageList.slice(0, 2).join(':');\n  const lineageD3 = lineageList.slice(0, 3).join(':');\n  const lineageD4 = lineageList.slice(0, 4).join(':');\n  const lineageD5 = lineageList.slice(0, 5).join(':');\n  const lineageD6 = lineageList.slice(0, 6).join(':');\n\n  const biome =\n    biomeIconMapD6[lineageD6] ||\n    biomeIconMapD5[lineageD5] ||\n    biomeIconMapD4[lineageD4] ||\n    biomeIconMapD3[lineageD3] ||\n    biomeIconMapD2[lineageD2] ||\n    'default_b';\n  return biome;\n}\ntype Biome = { icon?: string; name: string };\nexport function simplifyBiomeIcons(biomes: Biome[]): Biome[] {\n  const groupedBiomes = {};\n  biomes.forEach((b) => {\n    if (groupedBiomes[b.icon]) {\n      groupedBiomes[b.icon].push(b.name);\n    } else {\n      groupedBiomes[b.icon] = [b.name];\n    }\n  });\n  const icons = [];\n  Object.keys(groupedBiomes).forEach((biomeIcon) => {\n    const biomesInGroup = groupedBiomes[biomeIcon].sort().join(', ');\n    icons.push({ name: biomesInGroup, icon: biomeIcon });\n  });\n  return icons;\n}\n"],"sourceRoot":""}