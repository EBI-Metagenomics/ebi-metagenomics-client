{"version":3,"file":"js/868.7ded3876.chunk.js","mappings":"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","sources":["webpack://mgportalv2/./src/components/Downloads/index.tsx","webpack://mgportalv2/./src/components/UI/KeyValueList/index.tsx","webpack://mgportalv2/./src/components/Genomes/Overview/index.tsx","webpack://mgportalv2/./src/pages/Genome/index.tsx","webpack://mgportalv2/./src/utils/urls.ts"],"sourcesContent":["import React, { useMemo } from 'react';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport EMGTable from 'components/UI/EMGTable';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyDatum, MGnifyResponseList } from 'hooks/data/useData';\n\ntype DownloadsProps = {\n  endpoint: string;\n  accession: string;\n};\nconst Downloads: React.FC<DownloadsProps> = ({ endpoint, accession }) => {\n  const { data, loading, error } = useMGnifyData(\n    `${endpoint}/${accession}/downloads`,\n    {\n      page_size: 100,\n    }\n  );\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'attributes.description.description',\n      },\n      {\n        Header: 'Compression',\n        accessor: 'attributes.file-format.compression',\n        Cell: ({ cell }) => (cell.value ? 'Yes' : '-'),\n      },\n      {\n        Header: 'Format',\n        accessor: 'attributes.file-format.name',\n      },\n      {\n        Header: 'Action',\n        accessor: 'links.self',\n        Cell: ({ cell }) => (\n          <a\n            href={cell.value}\n            className=\"vf-button vf-button--link\"\n            style={{ whiteSpace: 'nowrap' }}\n            download\n          >\n            <span className=\"icon icon-common icon-download\" /> Download\n          </a>\n        ),\n      },\n    ],\n    []\n  );\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n\n  const categories = {};\n\n  (data as MGnifyResponseList).data.forEach((download) => {\n    if (!categories[download.attributes['group-type'] as string]) {\n      categories[download.attributes['group-type'] as string] = [];\n    }\n    categories[download.attributes['group-type'] as string].push(download);\n  });\n  return (\n    <div className=\"vf-stock\">\n      {Object.entries(categories).map(([category, downloads]) => (\n        <section key={category}>\n          <EMGTable\n            cols={columns}\n            data={downloads as Array<MGnifyDatum>}\n            title={category}\n            loading={loading}\n            showPagination={false}\n          />\n          <hr />\n        </section>\n      ))}\n    </div>\n  );\n};\n\nexport default Downloads;\n","import React from 'react';\n\ntype KeyValueProps = {\n  list: { key: string; value: string | React.ElementType }[];\n};\n\nconst KeyValueList: React.FC<KeyValueProps> = ({ list }) => (\n  <div\n    className=\"vf-grid vf-grid__col-2\"\n    style={{\n      gridTemplateColumns: '1fr 2fr',\n      rowGap: '0.5rem',\n    }}\n  >\n    {list.map(({ key, value: Value }) => (\n      <React.Fragment key={key}>\n        <div style={{ textAlign: 'right' }}>{key}:</div>\n        <div>{typeof Value === 'string' ? Value : <Value />}</div>\n      </React.Fragment>\n    ))}\n  </div>\n);\n\nexport default KeyValueList;\n","import React from 'react';\nimport KeyValueList from 'components/UI/KeyValueList';\nimport ExtLink from 'components/UI/ExtLink';\nimport { MGnifyDatum } from 'hooks/data/useData';\nimport { cleanTaxLineage } from 'utils/taxon';\nimport {\n  ENA_VIEW_URL,\n  IMG_URL,\n  NCBI_ASSEMBLY_URL,\n  NCBI_PROJECT_URL,\n  NCBI_SAMPLE_URL,\n  PATRIC_URL,\n} from 'utils/urls';\n\ntype GenomeOverviewProps = {\n  data: MGnifyDatum;\n};\n\nconst GenomeOverview: React.FC<GenomeOverviewProps> = ({ data }) => {\n  return (\n    <section>\n      <div className=\"vf-stack\">\n        <details open>\n          <summary>\n            <b>Genome statistics</b>\n          </summary>\n\n          <KeyValueList\n            list={[\n              { key: 'Type', value: data.attributes.type as string },\n              { key: 'Length (bp)', value: String(data.attributes.length) },\n              {\n                key: 'Contamination',\n                value: `${data.attributes.contamination}%`,\n              },\n              {\n                key: 'Completeness',\n                value: `${data.attributes.completeness}%`,\n              },\n              {\n                key: 'Num. of contigs',\n                value: String(data.attributes['num-contigs']),\n              },\n              {\n                key: 'Total number of genomes in species',\n                value: String(data.attributes['num-genomes-total']),\n              },\n              {\n                key: 'Non-redundant number of genomes in species',\n                value: String(data.attributes['num-genomes-non-redundant']),\n              },\n              {\n                key: 'Number of proteins',\n                value: String(data.attributes['num-proteins']),\n              },\n              { key: 'GC content', value: `${data.attributes['gc-content']}%` },\n              {\n                key: 'Taxonomic lineage',\n                value: cleanTaxLineage(\n                  data.attributes['taxon-lineage'] as string,\n                  ' > '\n                ),\n              },\n              { key: 'N50', value: String(data.attributes['n-50']) },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Genome annotations</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'InterPro coverage',\n                value: `${data.attributes['ipr-coverage']}%`,\n              },\n              {\n                key: 'EggNog coverage',\n                value: `${data.attributes['eggnog-coverage']}%`,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Pan-genome statistics</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'Pan-genome size',\n                value: `${data.attributes['pangenome-size']}%`,\n              },\n              {\n                key: 'Pan-genome core size',\n                value: `${data.attributes['pangenome-core-size']}%`,\n              },\n              {\n                key: 'Pan-genome accessory size',\n                value: `${data.attributes['pangenome-accessory-size']}%`,\n              },\n              {\n                key: 'Pan-genome InterPro coverage',\n                value: `${data.attributes['pangenome-ipr-coverage']}%`,\n              },\n              {\n                key: 'Pan-genome EggNOG coverage',\n                value: `${data.attributes['pangenome-eggnog-coverage']}%`,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Genome RNA coverage</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'rRNA 5s total gene length coverage',\n                value: `${data.attributes['rna-5s']}%`,\n              },\n              {\n                key: 'rRNA 16s total gene length coverage',\n                value: `${data.attributes['rna-16s']}%`,\n              },\n              {\n                key: 'rRNA 23s total gene length coverage',\n                value: `${data.attributes['rna-23s']}%`,\n              },\n              {\n                key: 'tRNAs',\n                value: `${data.attributes.trnas}%`,\n              },\n              {\n                key: 'ncRNA',\n                value: `${data.attributes['nc-rnas']}%`,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>Geographic metadata</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'Origin of representative genome',\n                value: data.attributes['geographic-origin'] as string,\n              },\n              {\n                key: 'Geographic range of pan-genome',\n                value: (data.attributes['geographic-range'] as string[]).join(\n                  ', '\n                ),\n              },\n            ]}\n          />\n        </details>\n        <details open>\n          <summary>\n            <b>External links</b>\n          </summary>\n          <KeyValueList\n            list={[\n              {\n                key: 'ENA genome accession',\n                value: data.attributes['ena-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          ENA_VIEW_URL + data.attributes['ena-genome-accession']\n                        }\n                      >\n                        {data.attributes['ena-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'ENA sample accession',\n                value: data.attributes['ena-sample-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          ENA_VIEW_URL + data.attributes['ena-sample-accession']\n                        }\n                      >\n                        {data.attributes['ena-sample-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'ENA study accession',\n                value: data.attributes['ena-study-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          ENA_VIEW_URL + data.attributes['ena-study-accession']\n                        }\n                      >\n                        {data.attributes['ena-study-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'IMG genome accession',\n                value: data.attributes['img-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={IMG_URL + data.attributes['img-genome-accession']}\n                      >\n                        {data.attributes['img-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'NCBI genome accession',\n                value: data.attributes['ncbi-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          NCBI_ASSEMBLY_URL +\n                          data.attributes['ncbi-genome-accession']\n                        }\n                      >\n                        {data.attributes['ncbi-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'NCBI sample accession',\n                value: data.attributes['ncbi-sample-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          NCBI_SAMPLE_URL +\n                          data.attributes['ncbi-sample-accession']\n                        }\n                      >\n                        {data.attributes['ncbi-sample-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'NCBI study accession',\n                value: data.attributes['ncbi-study-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          NCBI_PROJECT_URL +\n                          data.attributes['ncbi-study-accession']\n                        }\n                      >\n                        {data.attributes['ncbi-study-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n              {\n                key: 'PATRIC genome accession',\n                value: data.attributes['patric-genome-accession']\n                  ? () => (\n                      <ExtLink\n                        href={\n                          PATRIC_URL +\n                          data.attributes['patric-genome-accession']\n                        }\n                      >\n                        {data.attributes['patric-genome-accession']}\n                      </ExtLink>\n                    )\n                  : null,\n              },\n            ].filter(({ value }) => !!value)}\n          />\n        </details>\n      </div>\n    </section>\n  );\n};\nexport default GenomeOverview;\n","import React, { Suspense, lazy } from 'react';\n\nimport Loading from 'components/UI/Loading';\nimport FetchError from 'components/UI/FetchError';\nimport Tabs from 'components/UI/Tabs';\nimport RouteForHash from 'components/Nav/RouteForHash';\nimport Overview from 'components/Genomes/Overview';\nimport Downloads from 'components/Downloads';\nimport useMGnifyData from 'hooks/data/useMGnifyData';\nimport { MGnifyResponseObj } from 'hooks/data/useData';\nimport useURLAccession from 'hooks/useURLAccession';\nimport { cleanTaxLineage } from 'utils/taxon';\n\nconst GenomeBrowser = lazy(() => import('components/Genomes/Browser'));\nconst COGAnalysis = lazy(() => import('components/Genomes/COGAnalysis'));\nconst KEGGClassAnalysis = lazy(\n  () => import('components/Genomes/KEGGClassAnalysis')\n);\nconst KEGGModulesAnalysis = lazy(\n  () => import('components/Genomes/KEGGModulesAnalysis')\n);\n\nconst tabs = [\n  { label: 'Overview', to: '#overview' },\n  { label: 'Browse genome', to: '#genome-browser' },\n  { label: 'COG analysis', to: '#cog-analysis' },\n  { label: 'KEGG class analysis', to: '#kegg-class-analysis' },\n  { label: 'KEGG module analysis', to: '#kegg-module-analysis' },\n  { label: 'Downloads', to: '#downloads' },\n];\n\nconst GenomePage: React.FC = () => {\n  const accession = useURLAccession();\n  const { data, loading, error } = useMGnifyData(`genomes/${accession}`);\n  if (loading) return <Loading size=\"large\" />;\n  if (error) return <FetchError error={error} />;\n  if (!data) return <Loading />;\n  const { data: genomeData } = data as MGnifyResponseObj;\n  return (\n    <section className=\"vf-content\">\n      <h2>Genome {accession}</h2>\n      <p>\n        <b>Type:</b> {genomeData.attributes.type}\n      </p>\n      <p>\n        <b>Taxonomic lineage:</b>{' '}\n        {cleanTaxLineage(\n          genomeData.attributes['taxon-lineage'] as string,\n          ' > '\n        )}\n      </p>\n      <Tabs tabs={tabs} />\n      <section className=\"vf-grid\">\n        <div className=\"vf-stack vf-stack--200\">\n          <RouteForHash hash=\"#overview\" isDefault>\n            <Overview data={genomeData} />\n          </RouteForHash>\n          <RouteForHash hash=\"#genome-browser\">\n            <Suspense fallback={<Loading size=\"large\" />}>\n              <GenomeBrowser />\n            </Suspense>\n          </RouteForHash>\n          <RouteForHash hash=\"#cog-analysis\">\n            <Suspense fallback={<Loading size=\"large\" />}>\n              <COGAnalysis />\n            </Suspense>\n          </RouteForHash>\n          <RouteForHash hash=\"#kegg-class-analysis\">\n            <Suspense fallback={<Loading size=\"large\" />}>\n              <KEGGClassAnalysis />\n            </Suspense>\n          </RouteForHash>\n          <RouteForHash hash=\"#kegg-module-analysis\">\n            <Suspense fallback={<Loading size=\"large\" />}>\n              <KEGGModulesAnalysis />\n            </Suspense>\n          </RouteForHash>\n          <RouteForHash hash=\"#downloads\">\n            <Downloads endpoint=\"genomes\" accession={accession} />\n          </RouteForHash>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default GenomePage;\n","export const ENA_VIEW_URL = 'https://www.ebi.ac.uk/ena/browser/view/';\nexport const IMG_URL =\n  ' https://img.jgi.doe.gov/cgi-bin/m/main.cgi?section=TaxonDetail&page=taxonDetail&taxon_oid=';\nexport const NCBI_ASSEMBLY_URL = 'https://www.ncbi.nlm.nih.gov/assembly/';\nexport const NCBI_SAMPLE_URL = 'https://www.ncbi.nlm.nih.gov/biosample/?term=';\nexport const NCBI_PROJECT_URL = 'https://www.ncbi.nlm.nih.gov/bioproject/';\nexport const PATRIC_URL = 'https://www.patricbrc.org/view/Genome/';\n"],"names":["endpoint","accession","data","loading","error","page_size","columns","useMemo","Header","accessor","Cell","cell","value","href","className","style","whiteSpace","download","size","categories","forEach","attributes","push","Object","entries","map","category","downloads","key","cols","title","showPagination","list","gridTemplateColumns","rowGap","Value","textAlign","open","KeyValueList","type","String","length","contamination","completeness","filter","trnas","join","ExtLink","GenomeBrowser","lazy","COGAnalysis","KEGGClassAnalysis","KEGGModulesAnalysis","tabs","label","to","useURLAccession","useMGnifyData","Loading","FetchError","genomeData","Tabs","RouteForHash","hash","isDefault","Overview","Suspense","fallback","Downloads","ENA_VIEW_URL","IMG_URL","NCBI_ASSEMBLY_URL","NCBI_SAMPLE_URL","NCBI_PROJECT_URL","PATRIC_URL"],"sourceRoot":""}