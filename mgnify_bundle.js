/*! For license information please see mgnify_bundle.js.LICENSE.txt */
(()=>{var e,t,n={87:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(15),a=n.n(r),l=n(645),o=n.n(l)()(a());o.push([e.id,".App {\n  margin: 1rem;\n  font-family: Arial, Helvetica, sans-serif;\n}\n","",{version:3,sources:["webpack://./src/App.css"],names:[],mappings:"AAAA;EACE,YAAY;EACZ,yCAAyC;AAC3C",sourcesContent:[".App {\n  margin: 1rem;\n  font-family: Arial, Helvetica, sans-serif;\n}\n"],sourceRoot:""}]);const i=o},141:(e,t,n)=>{"use strict";n.d(t,{Z:()=>d});var r=n(15),a=n.n(r),l=n(645),o=n.n(l),i=n(667),u=n.n(i),s=new URL(n(806),n.b),c=o()(a()),f=u()(s);c.push([e.id,".vf-hero {\n  --vf-hero--bg-image: url("+f+");\n}\n","",{version:3,sources:["webpack://./src/components/UI/HeroHeader/style.css"],names:[],mappings:"AAAA;EACE,4DAA4D;AAC9D",sourcesContent:[".vf-hero {\n  --vf-hero--bg-image: url('images/embl-ebi-background-4.jpg');\n}\n"],sourceRoot:""}]);const d=c},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var l=0;l<this.length;l++){var o=this[l][0];null!=o&&(a[o]=!0)}for(var i=0;i<e.length;i++){var u=[].concat(e[i]);r&&a[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},15:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,a=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,l=[],o=!0,i=!1;try{for(n=n.call(e);!(o=(r=n.next()).done)&&(l.push(r.value),!t||l.length!==t);o=!0);}catch(e){i=!0,a=e}finally{try{o||null==n.return||n.return()}finally{if(i)throw a}}return l}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=a[1],o=a[3];if(!o)return l;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),s="/*# ".concat(u," */"),c=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[l].concat(c).concat([s]).join("\n")}return[l].join("\n")}},667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},679:(e,t,n)=>{"use strict";var r=n(864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},l={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function u(e){return r.isMemo(e)?o:i[e.$$typeof]||a}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=o;var s=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var a=p(n);a&&a!==m&&e(t,a,r)}var o=c(n);f&&(o=o.concat(f(n)));for(var i=u(t),h=u(n),v=0;v<o.length;++v){var g=o[v];if(!(l[g]||r&&r[g]||h&&h[g]||i&&i[g])){var y=d(n,g);try{s(t,g,y)}catch(e){}}}}return t}},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,l){for(var o,i,u=a(e),s=1;s<arguments.length;s++){for(var c in o=Object(arguments[s]))n.call(o,c)&&(u[c]=o[c]);if(t){i=t(o);for(var f=0;f<i.length;f++)r.call(o,i[f])&&(u[i[f]]=o[i[f]])}}return u}},703:(e,t,n)=>{"use strict";var r=n(414);function a(){}function l(){}l.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,l,o){if(o!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:l,resetWarningCache:a};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),a=n(418),l=n(840);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(o(227));var i=new Set,u={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(u[e]=t,e=0;e<t.length;e++)i.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,m={},h={};function v(e,t,n,r,a,l,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=l,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var a=g.hasOwnProperty(t)?g[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(h,e)||!p.call(m,e)&&(d.test(e)?h[e]=!0:(m[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var E=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=60103,_=60106,S=60107,x=60108,N=60114,C=60109,P=60110,T=60112,L=60113,O=60120,R=60115,M=60116,z=60121,A=60128,I=60129,F=60130,D=60131;if("function"==typeof Symbol&&Symbol.for){var j=Symbol.for;k=j("react.element"),_=j("react.portal"),S=j("react.fragment"),x=j("react.strict_mode"),N=j("react.profiler"),C=j("react.provider"),P=j("react.context"),T=j("react.forward_ref"),L=j("react.suspense"),O=j("react.suspense_list"),R=j("react.memo"),M=j("react.lazy"),z=j("react.block"),j("react.scope"),A=j("react.opaque.id"),I=j("react.debug_trace_mode"),F=j("react.offscreen"),D=j("react.legacy_hidden")}var U,$="function"==typeof Symbol&&Symbol.iterator;function B(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=$&&e[$]||e["@@iterator"])?e:null}function V(e){if(void 0===U)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);U=t&&t[1]||""}return"\n"+U+e}var H=!1;function W(e,t){if(!e||H)return"";H=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),l=r.stack.split("\n"),o=a.length-1,i=l.length-1;1<=o&&0<=i&&a[o]!==l[i];)i--;for(;1<=o&&0<=i;o--,i--)if(a[o]!==l[i]){if(1!==o||1!==i)do{if(o--,0>--i||a[o]!==l[i])return"\n"+a[o].replace(" at new "," at ")}while(1<=o&&0<=i);break}}}finally{H=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?V(e):""}function Q(e){switch(e.tag){case 5:return V(e.type);case 16:return V("Lazy");case 13:return V("Suspense");case 19:return V("SuspenseList");case 0:case 2:case 15:return W(e.type,!1);case 11:return W(e.type.render,!1);case 22:return W(e.type._render,!1);case 1:return W(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case _:return"Portal";case N:return"Profiler";case x:return"StrictMode";case L:return"Suspense";case O:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case P:return(e.displayName||"Context")+".Consumer";case C:return(e._context.displayName||"Context")+".Provider";case T:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case R:return q(e.type);case z:return q(e._render);case M:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function X(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,l=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,l.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Z(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Y(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function G(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&G(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function le(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function oe(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function se(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ce(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var me,he,ve=(he=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((me=me||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=me.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return he(e,t)}))}:he);function ge(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ye={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ye.hasOwnProperty(e)&&ye[e]?(""+t).trim():t+"px"}function Ee(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(ye).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ye[t]=ye[e]}))}));var ke=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function _e(e,t){if(t){if(ke[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62))}}function Se(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function xe(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ne=null,Ce=null,Pe=null;function Te(e){if(e=Jr(e)){if("function"!=typeof Ne)throw Error(o(280));var t=e.stateNode;t&&(t=ta(t),Ne(e.stateNode,e.type,t))}}function Le(e){Ce?Pe?Pe.push(e):Pe=[e]:Ce=e}function Oe(){if(Ce){var e=Ce,t=Pe;if(Pe=Ce=null,Te(e),t)for(e=0;e<t.length;e++)Te(t[e])}}function Re(e,t){return e(t)}function Me(e,t,n,r,a){return e(t,n,r,a)}function ze(){}var Ae=Re,Ie=!1,Fe=!1;function De(){null===Ce&&null===Pe||(ze(),Oe())}function je(e,t){var n=e.stateNode;if(null===n)return null;var r=ta(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}var Ue=!1;if(f)try{var $e={};Object.defineProperty($e,"passive",{get:function(){Ue=!0}}),window.addEventListener("test",$e,$e),window.removeEventListener("test",$e,$e)}catch(he){Ue=!1}function Be(e,t,n,r,a,l,o,i,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Ve=!1,He=null,We=!1,Qe=null,qe={onError:function(e){Ve=!0,He=e}};function Ke(e,t,n,r,a,l,o,i,u){Ve=!1,He=null,Be.apply(qe,arguments)}function Ye(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ze(e){if(Ye(e)!==e)throw Error(o(188))}function Ge(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ye(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var l=a.alternate;if(null===l){if(null!==(r=a.return)){n=r;continue}break}if(a.child===l.child){for(l=a.child;l;){if(l===n)return Ze(a),e;if(l===r)return Ze(a),t;l=l.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=l;else{for(var i=!1,u=a.child;u;){if(u===n){i=!0,n=a,r=l;break}if(u===r){i=!0,r=a,n=l;break}u=u.sibling}if(!i){for(u=l.child;u;){if(u===n){i=!0,n=l,r=a;break}if(u===r){i=!0,r=l,n=a;break}u=u.sibling}if(!i)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Je(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,at=!1,lt=[],ot=null,it=null,ut=null,st=new Map,ct=new Map,ft=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function mt(e,t){switch(e){case"focusin":case"focusout":ot=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ct.delete(t.pointerId)}}function ht(e,t,n,r,a,l){return null===e||e.nativeEvent!==l?(e=pt(t,n,r,a,l),null!==t&&null!==(t=Jr(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function vt(e){var t=Gr(e.target);if(null!==t){var n=Ye(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Xe(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){l.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function gt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Jr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function yt(e,t,n){gt(e)&&n.delete(t)}function bt(){for(at=!1;0<lt.length;){var e=lt[0];if(null!==e.blockedOn){null!==(e=Jr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&lt.shift()}null!==ot&&gt(ot)&&(ot=null),null!==it&&gt(it)&&(it=null),null!==ut&&gt(ut)&&(ut=null),st.forEach(yt),ct.forEach(yt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,l.unstable_scheduleCallback(l.unstable_NormalPriority,bt)))}function Et(e){function t(t){return wt(t,e)}if(0<lt.length){wt(lt[0],e);for(var n=1;n<lt.length;n++){var r=lt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==ot&&wt(ot,e),null!==it&&wt(it,e),null!==ut&&wt(ut,e),st.forEach(t),ct.forEach(t),n=0;n<ft.length;n++)(r=ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ft.length&&null===(n=ft[0]).blockedOn;)vt(n),null===n.blockedOn&&ft.shift()}function kt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var _t={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},St={},xt={};function Nt(e){if(St[e])return St[e];if(!_t[e])return e;var t,n=_t[e];for(t in n)if(n.hasOwnProperty(t)&&t in xt)return St[e]=n[t];return e}f&&(xt=document.createElement("div").style,"AnimationEvent"in window||(delete _t.animationend.animation,delete _t.animationiteration.animation,delete _t.animationstart.animation),"TransitionEvent"in window||delete _t.transitionend.transition);var Ct=Nt("animationend"),Pt=Nt("animationiteration"),Tt=Nt("animationstart"),Lt=Nt("transitionend"),Ot=new Map,Rt=new Map,Mt=["abort","abort",Ct,"animationEnd",Pt,"animationIteration",Tt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Lt,"transitionEnd","waiting","waiting"];function zt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),Rt.set(r,t),Ot.set(r,a),s(a,[r])}}(0,l.unstable_now)();var At=8;function It(e){if(0!=(1&e))return At=15,1;if(0!=(2&e))return At=14,2;if(0!=(4&e))return At=13,4;var t=24&e;return 0!==t?(At=12,t):0!=(32&e)?(At=11,32):0!=(t=192&e)?(At=10,t):0!=(256&e)?(At=9,256):0!=(t=3584&e)?(At=8,t):0!=(4096&e)?(At=7,4096):0!=(t=4186112&e)?(At=6,t):0!=(t=62914560&e)?(At=5,t):67108864&e?(At=4,67108864):0!=(134217728&e)?(At=3,134217728):0!=(t=805306368&e)?(At=2,t):0!=(1073741824&e)?(At=1,1073741824):(At=8,e)}function Ft(e,t){var n=e.pendingLanes;if(0===n)return At=0;var r=0,a=0,l=e.expiredLanes,o=e.suspendedLanes,i=e.pingedLanes;if(0!==l)r=l,a=At=15;else if(0!=(l=134217727&n)){var u=l&~o;0!==u?(r=It(u),a=At):0!=(i&=l)&&(r=It(i),a=At)}else 0!=(l=n&~o)?(r=It(l),a=At):0!==i&&(r=It(i),a=At);if(0===r)return 0;if(r=n&((0>(r=31-Vt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&o)){if(It(t),a<=At)return t;At=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-Vt(t)),r|=e[n],t&=~a;return r}function Dt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function jt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ut(24&~t))?jt(10,t):e;case 10:return 0===(e=Ut(192&~t))?jt(8,t):e;case 8:return 0===(e=Ut(3584&~t))&&0===(e=Ut(4186112&~t))&&(e=512),e;case 2:return 0===(t=Ut(805306368&~t))&&(t=268435456),t}throw Error(o(358,e))}function Ut(e){return e&-e}function $t(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Bt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Vt(t)]=n}var Vt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Ht(e)/Wt|0)|0},Ht=Math.log,Wt=Math.LN2,Qt=l.unstable_UserBlockingPriority,qt=l.unstable_runWithPriority,Kt=!0;function Yt(e,t,n,r){Ie||ze();var a=Zt,l=Ie;Ie=!0;try{Me(a,e,t,n,r)}finally{(Ie=l)||De()}}function Xt(e,t,n,r){qt(Qt,Zt.bind(null,e,t,n,r))}function Zt(e,t,n,r){var a;if(Kt)if((a=0==(4&t))&&0<lt.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,r),lt.push(e);else{var l=Gt(e,t,n,r);if(null===l)a&&mt(e,r);else{if(a){if(-1<dt.indexOf(e))return e=pt(l,e,t,n,r),void lt.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return ot=ht(ot,e,t,n,r,a),!0;case"dragenter":return it=ht(it,e,t,n,r,a),!0;case"mouseover":return ut=ht(ut,e,t,n,r,a),!0;case"pointerover":var l=a.pointerId;return st.set(l,ht(st.get(l)||null,e,t,n,r,a)),!0;case"gotpointercapture":return l=a.pointerId,ct.set(l,ht(ct.get(l)||null,e,t,n,r,a)),!0}return!1}(l,e,t,n,r))return;mt(e,r)}Or(e,t,r,null,n)}}}function Gt(e,t,n,r){var a=xe(r);if(null!==(a=Gr(a))){var l=Ye(a);if(null===l)a=null;else{var o=l.tag;if(13===o){if(null!==(a=Xe(l)))return a;a=null}else if(3===o){if(l.stateNode.hydrate)return 3===l.tag?l.stateNode.containerInfo:null;a=null}else l!==a&&(a=null)}}return Or(e,t,r,a,n),null}var Jt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,a="value"in Jt?Jt.value:Jt.textContent,l=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[l-t];t++);return tn=a.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function an(){return!0}function ln(){return!1}function on(e){function t(t,n,r,a,l){for(var o in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=l,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?an:ln,this.isPropagationStopped=ln,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=an)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=an)},persist:function(){},isPersistent:an}),t}var un,sn,cn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=on(fn),pn=a({},fn,{view:0,detail:0}),mn=on(pn),hn=a({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Nn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(un=e.screenX-cn.screenX,sn=e.screenY-cn.screenY):sn=un=0,cn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),vn=on(hn),gn=on(a({},hn,{dataTransfer:0})),yn=on(a({},pn,{relatedTarget:0})),bn=on(a({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=on(a({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),En=on(a({},fn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},_n={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Nn(){return xn}var Cn=on(a({},pn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?_n[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Nn,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Pn=on(a({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Tn=on(a({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Nn})),Ln=on(a({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),On=on(a({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),Rn=[9,13,27,32],Mn=f&&"CompositionEvent"in window,zn=null;f&&"documentMode"in document&&(zn=document.documentMode);var An=f&&"TextEvent"in window&&!zn,In=f&&(!Mn||zn&&8<zn&&11>=zn),Fn=String.fromCharCode(32),Dn=!1;function jn(e,t){switch(e){case"keyup":return-1!==Rn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var $n=!1,Bn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Bn[e.type]:"textarea"===t}function Hn(e,t,n,r){Le(r),0<(t=Mr(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Wn=null,Qn=null;function qn(e){xr(e,0)}function Kn(e){if(Z(ea(e)))return e}function Yn(e,t){if("change"===e)return t}var Xn=!1;if(f){var Zn;if(f){var Gn="oninput"in document;if(!Gn){var Jn=document.createElement("div");Jn.setAttribute("oninput","return;"),Gn="function"==typeof Jn.oninput}Zn=Gn}else Zn=!1;Xn=Zn&&(!document.documentMode||9<document.documentMode)}function er(){Wn&&(Wn.detachEvent("onpropertychange",tr),Qn=Wn=null)}function tr(e){if("value"===e.propertyName&&Kn(Qn)){var t=[];if(Hn(t,Qn,e,xe(e)),e=qn,Ie)e(t);else{Ie=!0;try{Re(e,t)}finally{Ie=!1,De()}}}}function nr(e,t,n){"focusin"===e?(er(),Qn=n,(Wn=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(Qn)}function ar(e,t){if("click"===e)return Kn(t)}function lr(e,t){if("input"===e||"change"===e)return Kn(t)}var or="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ir=Object.prototype.hasOwnProperty;function ur(e,t){if(or(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ir.call(t,n[r])||!or(e[n[r]],t[n[r]]))return!1;return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=G();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=G((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var mr=f&&"documentMode"in document&&11>=document.documentMode,hr=null,vr=null,gr=null,yr=!1;function br(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;yr||null==hr||hr!==G(r)||(r="selectionStart"in(r=hr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&ur(gr,r)||(gr=r,0<(r=Mr(vr,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=hr)))}zt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),zt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),zt(Mt,2);for(var wr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Er=0;Er<wr.length;Er++)Rt.set(wr[Er],0);c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),_r=new Set("cancel close invalid load scroll toggle".split(" ").concat(kr));function Sr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,l,i,u,s){if(Ke.apply(this,arguments),Ve){if(!Ve)throw Error(o(198));var c=He;Ve=!1,He=null,We||(We=!0,Qe=c)}}(r,t,void 0,e),e.currentTarget=null}function xr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var l=void 0;if(t)for(var o=r.length-1;0<=o;o--){var i=r[o],u=i.instance,s=i.currentTarget;if(i=i.listener,u!==l&&a.isPropagationStopped())break e;Sr(a,i,s),l=u}else for(o=0;o<r.length;o++){if(u=(i=r[o]).instance,s=i.currentTarget,i=i.listener,u!==l&&a.isPropagationStopped())break e;Sr(a,i,s),l=u}}}if(We)throw e=Qe,We=!1,Qe=null,e}function Nr(e,t){var n=na(t),r=e+"__bubble";n.has(r)||(Lr(t,e,2,!1),n.add(r))}var Cr="_reactListening"+Math.random().toString(36).slice(2);function Pr(e){e[Cr]||(e[Cr]=!0,i.forEach((function(t){_r.has(t)||Tr(t,!1,e,null),Tr(t,!0,e,null)})))}function Tr(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,l=n;if("selectionchange"===e&&9!==n.nodeType&&(l=n.ownerDocument),null!==r&&!t&&_r.has(e)){if("scroll"!==e)return;a|=2,l=r}var o=na(l),i=e+"__"+(t?"capture":"bubble");o.has(i)||(t&&(a|=4),Lr(l,e,a,t),o.add(i))}function Lr(e,t,n,r){var a=Rt.get(t);switch(void 0===a?2:a){case 0:a=Yt;break;case 1:a=Xt;break;default:a=Zt}n=a.bind(null,t,n,e),a=void 0,!Ue||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Or(e,t,n,r,a){var l=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var u=o.tag;if((3===u||4===u)&&((u=o.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;o=o.return}for(;null!==i;){if(null===(o=Gr(i)))return;if(5===(u=o.tag)||6===u){r=l=o;continue e}i=i.parentNode}}r=r.return}!function(e,t,n){if(Fe)return e();Fe=!0;try{Ae(e,t,n)}finally{Fe=!1,De()}}((function(){var r=l,a=xe(n),o=[];e:{var i=Ot.get(e);if(void 0!==i){var u=dn,s=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=Cn;break;case"focusin":s="focus",u=yn;break;case"focusout":s="blur",u=yn;break;case"beforeblur":case"afterblur":u=yn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=vn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Tn;break;case Ct:case Pt:case Tt:u=bn;break;case Lt:u=Ln;break;case"scroll":u=mn;break;case"wheel":u=On;break;case"copy":case"cut":case"paste":u=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Pn}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==i?i+"Capture":null:i;c=[];for(var p,m=r;null!==m;){var h=(p=m).stateNode;if(5===p.tag&&null!==h&&(p=h,null!==d&&null!=(h=je(m,d))&&c.push(Rr(m,h,p))),f)break;m=m.return}0<c.length&&(i=new u(i,s,null,n,a),o.push({event:i,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(s=n.relatedTarget||n.fromElement)||!Gr(s)&&!s[Xr])&&(u||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?Gr(s):null)&&(s!==(f=Ye(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=vn,h="onMouseLeave",d="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(c=Pn,h="onPointerLeave",d="onPointerEnter",m="pointer"),f=null==u?i:ea(u),p=null==s?i:ea(s),(i=new c(h,m+"leave",u,n,a)).target=f,i.relatedTarget=p,h=null,Gr(a)===r&&((c=new c(d,m+"enter",s,n,a)).target=p,c.relatedTarget=f,h=c),f=h,u&&s)e:{for(d=s,m=0,p=c=u;p;p=zr(p))m++;for(p=0,h=d;h;h=zr(h))p++;for(;0<m-p;)c=zr(c),m--;for(;0<p-m;)d=zr(d),p--;for(;m--;){if(c===d||null!==d&&c===d.alternate)break e;c=zr(c),d=zr(d)}c=null}else c=null;null!==u&&Ar(o,i,u,c,!1),null!==s&&null!==f&&Ar(o,f,s,c,!0)}if("select"===(u=(i=r?ea(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var v=Yn;else if(Vn(i))if(Xn)v=lr;else{v=rr;var g=nr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(v=ar);switch(v&&(v=v(e,r))?Hn(o,v,n,a):(g&&g(e,i,r),"focusout"===e&&(g=i._wrapperState)&&g.controlled&&"number"===i.type&&ae(i,"number",i.value)),g=r?ea(r):window,e){case"focusin":(Vn(g)||"true"===g.contentEditable)&&(hr=g,vr=r,gr=null);break;case"focusout":gr=vr=hr=null;break;case"mousedown":yr=!0;break;case"contextmenu":case"mouseup":case"dragend":yr=!1,br(o,n,a);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":br(o,n,a)}var y;if(Mn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else $n?jn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(In&&"ko"!==n.locale&&($n||"onCompositionStart"!==b?"onCompositionEnd"===b&&$n&&(y=nn()):(en="value"in(Jt=a)?Jt.value:Jt.textContent,$n=!0)),0<(g=Mr(r,b)).length&&(b=new En(b,e,null,n,a),o.push({event:b,listeners:g}),(y||null!==(y=Un(n)))&&(b.data=y))),(y=An?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(Dn=!0,Fn);case"textInput":return(e=t.data)===Fn&&Dn?null:e;default:return null}}(e,n):function(e,t){if($n)return"compositionend"===e||!Mn&&jn(e,t)?(e=nn(),tn=en=Jt=null,$n=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return In&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Mr(r,"onBeforeInput")).length&&(a=new En("onBeforeInput","beforeinput",null,n,a),o.push({event:a,listeners:r}),a.data=y)}xr(o,t)}))}function Rr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Mr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,l=a.stateNode;5===a.tag&&null!==l&&(a=l,null!=(l=je(e,n))&&r.unshift(Rr(e,l,a)),null!=(l=je(e,t))&&r.push(Rr(e,l,a))),e=e.return}return r}function zr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ar(e,t,n,r,a){for(var l=t._reactName,o=[];null!==n&&n!==r;){var i=n,u=i.alternate,s=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==s&&(i=s,a?null!=(u=je(n,l))&&o.unshift(Rr(n,u,i)):a||null!=(u=je(n,l))&&o.push(Rr(n,u,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}function Ir(){}var Fr=null,Dr=null;function jr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Ur(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var $r="function"==typeof setTimeout?setTimeout:void 0,Br="function"==typeof clearTimeout?clearTimeout:void 0;function Vr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Hr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Wr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Qr=0,qr=Math.random().toString(36).slice(2),Kr="__reactFiber$"+qr,Yr="__reactProps$"+qr,Xr="__reactContainer$"+qr,Zr="__reactEvents$"+qr;function Gr(e){var t=e[Kr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Xr]||n[Kr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Wr(e);null!==e;){if(n=e[Kr])return n;e=Wr(e)}return t}n=(e=n).parentNode}return null}function Jr(e){return!(e=e[Kr]||e[Xr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ea(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function ta(e){return e[Yr]||null}function na(e){var t=e[Zr];return void 0===t&&(t=e[Zr]=new Set),t}var ra=[],aa=-1;function la(e){return{current:e}}function oa(e){0>aa||(e.current=ra[aa],ra[aa]=null,aa--)}function ia(e,t){aa++,ra[aa]=e.current,e.current=t}var ua={},sa=la(ua),ca=la(!1),fa=ua;function da(e,t){var n=e.type.contextTypes;if(!n)return ua;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,l={};for(a in n)l[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=l),l}function pa(e){return null!=e.childContextTypes}function ma(){oa(ca),oa(sa)}function ha(e,t,n){if(sa.current!==ua)throw Error(o(168));ia(sa,t),ia(ca,n)}function va(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var l in r=r.getChildContext())if(!(l in e))throw Error(o(108,q(t)||"Unknown",l));return a({},n,r)}function ga(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ua,fa=sa.current,ia(sa,e),ia(ca,ca.current),!0}function ya(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=va(e,t,fa),r.__reactInternalMemoizedMergedChildContext=e,oa(ca),oa(sa),ia(sa,e)):oa(ca),ia(ca,n)}var ba=null,wa=null,Ea=l.unstable_runWithPriority,ka=l.unstable_scheduleCallback,_a=l.unstable_cancelCallback,Sa=l.unstable_shouldYield,xa=l.unstable_requestPaint,Na=l.unstable_now,Ca=l.unstable_getCurrentPriorityLevel,Pa=l.unstable_ImmediatePriority,Ta=l.unstable_UserBlockingPriority,La=l.unstable_NormalPriority,Oa=l.unstable_LowPriority,Ra=l.unstable_IdlePriority,Ma={},za=void 0!==xa?xa:function(){},Aa=null,Ia=null,Fa=!1,Da=Na(),ja=1e4>Da?Na:function(){return Na()-Da};function Ua(){switch(Ca()){case Pa:return 99;case Ta:return 98;case La:return 97;case Oa:return 96;case Ra:return 95;default:throw Error(o(332))}}function $a(e){switch(e){case 99:return Pa;case 98:return Ta;case 97:return La;case 96:return Oa;case 95:return Ra;default:throw Error(o(332))}}function Ba(e,t){return e=$a(e),Ea(e,t)}function Va(e,t,n){return e=$a(e),ka(e,t,n)}function Ha(){if(null!==Ia){var e=Ia;Ia=null,_a(e)}Wa()}function Wa(){if(!Fa&&null!==Aa){Fa=!0;var e=0;try{var t=Aa;Ba(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Aa=null}catch(t){throw null!==Aa&&(Aa=Aa.slice(e+1)),ka(Pa,Ha),t}finally{Fa=!1}}}var Qa=E.ReactCurrentBatchConfig;function qa(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Ka=la(null),Ya=null,Xa=null,Za=null;function Ga(){Za=Xa=Ya=null}function Ja(e){var t=Ka.current;oa(Ka),e.type._context._currentValue=t}function el(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function tl(e,t){Ya=e,Za=Xa=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Mo=!0),e.firstContext=null)}function nl(e,t){if(Za!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Za=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Xa){if(null===Ya)throw Error(o(308));Xa=t,Ya.dependencies={lanes:0,firstContext:t,responders:null}}else Xa=Xa.next=t;return e._currentValue}var rl=!1;function al(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ll(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ol(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function il(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ul(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,l=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===l?a=l=o:l=l.next=o,n=n.next}while(null!==n);null===l?a=l=t:l=l.next=t}else a=l=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:l,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function sl(e,t,n,r){var l=e.updateQueue;rl=!1;var o=l.firstBaseUpdate,i=l.lastBaseUpdate,u=l.shared.pending;if(null!==u){l.shared.pending=null;var s=u,c=s.next;s.next=null,null===i?o=c:i.next=c,i=s;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==i&&(null===d?f.firstBaseUpdate=c:d.next=c,f.lastBaseUpdate=s)}}if(null!==o){for(d=l.baseState,i=0,f=c=s=null;;){u=o.lane;var p=o.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var m=e,h=o;switch(u=t,p=n,h.tag){case 1:if("function"==typeof(m=h.payload)){d=m.call(p,d,u);break e}d=m;break e;case 3:m.flags=-4097&m.flags|64;case 0:if(null==(u="function"==typeof(m=h.payload)?m.call(p,d,u):m))break e;d=a({},d,u);break e;case 2:rl=!0}}null!==o.callback&&(e.flags|=32,null===(u=l.effects)?l.effects=[o]:u.push(o))}else p={eventTime:p,lane:u,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===f?(c=f=p,s=d):f=f.next=p,i|=u;if(null===(o=o.next)){if(null===(u=l.shared.pending))break;o=u.next,u.next=null,l.lastBaseUpdate=u,l.shared.pending=null}}null===f&&(s=d),l.baseState=s,l.firstBaseUpdate=c,l.lastBaseUpdate=f,Ai|=i,e.lanes=i,e.memoizedState=d}}function cl(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var fl=(new r.Component).refs;function dl(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var pl={isMounted:function(e){return!!(e=e._reactInternals)&&Ye(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),l=ol(r,a);l.payload=t,null!=n&&(l.callback=n),il(e,l),uu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ou(),a=iu(e),l=ol(r,a);l.tag=1,l.payload=t,null!=n&&(l.callback=n),il(e,l),uu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ou(),r=iu(e),a=ol(n,r);a.tag=2,null!=t&&(a.callback=t),il(e,a),uu(e,r,n)}};function ml(e,t,n,r,a,l,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,l,o):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(a,l))}function hl(e,t,n){var r=!1,a=ua,l=t.contextType;return"object"==typeof l&&null!==l?l=nl(l):(a=pa(t)?fa:sa.current,l=(r=null!=(r=t.contextTypes))?da(e,a):ua),t=new t(n,l),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=pl,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=l),t}function vl(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&pl.enqueueReplaceState(t,t.state,null)}function gl(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=fl,al(e);var l=t.contextType;"object"==typeof l&&null!==l?a.context=nl(l):(l=pa(t)?fa:sa.current,a.context=da(e,l)),sl(e,n,a,r),a.state=e.memoizedState,"function"==typeof(l=t.getDerivedStateFromProps)&&(dl(e,t,l,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&pl.enqueueReplaceState(a,a.state,null),sl(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var yl=Array.isArray;function bl(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===fl&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function wl(e,t){if("textarea"!==e.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function El(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Uu(e,t)).index=0,e.sibling=null,e}function l(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function i(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Hu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=bl(e,t,n),r.return=e,r):((r=$u(n.type,n.key,n.props,null,e.mode,r)).ref=bl(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Wu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,l){return null===t||7!==t.tag?((t=Bu(n,e.mode,r,l)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Hu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return(n=$u(t.type,t.key,t.props,null,e.mode,n)).ref=bl(e,null,t),n.return=e,n;case _:return(t=Wu(t,e.mode,n)).return=e,t}if(yl(t)||B(t))return(t=Bu(t,e.mode,n,null)).return=e,t;wl(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return n.key===a?n.type===S?f(e,t,n.props.children,r,a):s(e,t,n,r):null;case _:return n.key===a?c(e,t,n,r):null}if(yl(n)||B(n))return null!==a?null:f(e,t,n,r,null);wl(e,n)}return null}function m(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case k:return e=e.get(null===r.key?n:r.key)||null,r.type===S?f(t,e,r.props.children,a,r.key):s(t,e,r,a);case _:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(yl(r)||B(r))return f(t,e=e.get(n)||null,r,a,null);wl(t,r)}return null}function h(a,o,i,u){for(var s=null,c=null,f=o,h=o=0,v=null;null!==f&&h<i.length;h++){f.index>h?(v=f,f=null):v=f.sibling;var g=p(a,f,i[h],u);if(null===g){null===f&&(f=v);break}e&&f&&null===g.alternate&&t(a,f),o=l(g,o,h),null===c?s=g:c.sibling=g,c=g,f=v}if(h===i.length)return n(a,f),s;if(null===f){for(;h<i.length;h++)null!==(f=d(a,i[h],u))&&(o=l(f,o,h),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(a,f);h<i.length;h++)null!==(v=m(f,a,h,i[h],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?h:v.key),o=l(v,o,h),null===c?s=v:c.sibling=v,c=v);return e&&f.forEach((function(e){return t(a,e)})),s}function v(a,i,u,s){var c=B(u);if("function"!=typeof c)throw Error(o(150));if(null==(u=c.call(u)))throw Error(o(151));for(var f=c=null,h=i,v=i=0,g=null,y=u.next();null!==h&&!y.done;v++,y=u.next()){h.index>v?(g=h,h=null):g=h.sibling;var b=p(a,h,y.value,s);if(null===b){null===h&&(h=g);break}e&&h&&null===b.alternate&&t(a,h),i=l(b,i,v),null===f?c=b:f.sibling=b,f=b,h=g}if(y.done)return n(a,h),c;if(null===h){for(;!y.done;v++,y=u.next())null!==(y=d(a,y.value,s))&&(i=l(y,i,v),null===f?c=y:f.sibling=y,f=y);return c}for(h=r(a,h);!y.done;v++,y=u.next())null!==(y=m(h,a,v,y.value,s))&&(e&&null!==y.alternate&&h.delete(null===y.key?v:y.key),i=l(y,i,v),null===f?c=y:f.sibling=y,f=y);return e&&h.forEach((function(e){return t(a,e)})),c}return function(e,r,l,u){var s="object"==typeof l&&null!==l&&l.type===S&&null===l.key;s&&(l=l.props.children);var c="object"==typeof l&&null!==l;if(c)switch(l.$$typeof){case k:e:{for(c=l.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(l.type===S){n(e,s.sibling),(r=a(s,l.props.children)).return=e,e=r;break e}break;default:if(s.elementType===l.type){n(e,s.sibling),(r=a(s,l.props)).ref=bl(e,s,l),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}l.type===S?((r=Bu(l.props.children,e.mode,u,l.key)).return=e,e=r):((u=$u(l.type,l.key,l.props,null,e.mode,u)).ref=bl(e,r,l),u.return=e,e=u)}return i(e);case _:e:{for(s=l.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===l.containerInfo&&r.stateNode.implementation===l.implementation){n(e,r.sibling),(r=a(r,l.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Wu(l,e.mode,u)).return=e,e=r}return i(e)}if("string"==typeof l||"number"==typeof l)return l=""+l,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,l)).return=e,e=r):(n(e,r),(r=Hu(l,e.mode,u)).return=e,e=r),i(e);if(yl(l))return h(e,r,l,u);if(B(l))return v(e,r,l,u);if(c&&wl(e,l),void 0===l&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(o(152,q(e.type)||"Component"))}return n(e,r)}}var kl=El(!0),_l=El(!1),Sl={},xl=la(Sl),Nl=la(Sl),Cl=la(Sl);function Pl(e){if(e===Sl)throw Error(o(174));return e}function Tl(e,t){switch(ia(Cl,t),ia(Nl,e),ia(xl,Sl),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}oa(xl),ia(xl,t)}function Ll(){oa(xl),oa(Nl),oa(Cl)}function Ol(e){Pl(Cl.current);var t=Pl(xl.current),n=pe(t,e.type);t!==n&&(ia(Nl,e),ia(xl,n))}function Rl(e){Nl.current===e&&(oa(xl),oa(Nl))}var Ml=la(0);function zl(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Al=null,Il=null,Fl=!1;function Dl(e,t){var n=Du(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function jl(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ul(e){if(Fl){var t=Il;if(t){var n=t;if(!jl(e,t)){if(!(t=Hr(n.nextSibling))||!jl(e,t))return e.flags=-1025&e.flags|2,Fl=!1,void(Al=e);Dl(Al,n)}Al=e,Il=Hr(t.firstChild)}else e.flags=-1025&e.flags|2,Fl=!1,Al=e}}function $l(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Al=e}function Bl(e){if(e!==Al)return!1;if(!Fl)return $l(e),Fl=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Ur(t,e.memoizedProps))for(t=Il;t;)Dl(e,t),t=Hr(t.nextSibling);if($l(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Il=Hr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Il=null}}else Il=Al?Hr(e.stateNode.nextSibling):null;return!0}function Vl(){Il=Al=null,Fl=!1}var Hl=[];function Wl(){for(var e=0;e<Hl.length;e++)Hl[e]._workInProgressVersionPrimary=null;Hl.length=0}var Ql=E.ReactCurrentDispatcher,ql=E.ReactCurrentBatchConfig,Kl=0,Yl=null,Xl=null,Zl=null,Gl=!1,Jl=!1;function eo(){throw Error(o(321))}function to(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function no(e,t,n,r,a,l){if(Kl=l,Yl=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Ql.current=null===e||null===e.memoizedState?To:Lo,e=n(r,a),Jl){l=0;do{if(Jl=!1,!(25>l))throw Error(o(301));l+=1,Zl=Xl=null,t.updateQueue=null,Ql.current=Oo,e=n(r,a)}while(Jl)}if(Ql.current=Po,t=null!==Xl&&null!==Xl.next,Kl=0,Zl=Xl=Yl=null,Gl=!1,t)throw Error(o(300));return e}function ro(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Zl?Yl.memoizedState=Zl=e:Zl=Zl.next=e,Zl}function ao(){if(null===Xl){var e=Yl.alternate;e=null!==e?e.memoizedState:null}else e=Xl.next;var t=null===Zl?Yl.memoizedState:Zl.next;if(null!==t)Zl=t,Xl=e;else{if(null===e)throw Error(o(310));e={memoizedState:(Xl=e).memoizedState,baseState:Xl.baseState,baseQueue:Xl.baseQueue,queue:Xl.queue,next:null},null===Zl?Yl.memoizedState=Zl=e:Zl=Zl.next=e}return Zl}function lo(e,t){return"function"==typeof t?t(e):t}function oo(e){var t=ao(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=Xl,a=r.baseQueue,l=n.pending;if(null!==l){if(null!==a){var i=a.next;a.next=l.next,l.next=i}r.baseQueue=a=l,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=i=l=null,s=a;do{var c=s.lane;if((Kl&c)===c)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var f={lane:c,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(i=u=f,l=r):u=u.next=f,Yl.lanes|=c,Ai|=c}s=s.next}while(null!==s&&s!==a);null===u?l=r:u.next=i,or(r,t.memoizedState)||(Mo=!0),t.memoizedState=r,t.baseState=l,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function io(e){var t=ao(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,l=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{l=e(l,i.action),i=i.next}while(i!==a);or(l,t.memoizedState)||(Mo=!0),t.memoizedState=l,null===t.baseQueue&&(t.baseState=l),n.lastRenderedState=l}return[l,r]}function uo(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Kl&e)===e)&&(t._workInProgressVersionPrimary=r,Hl.push(t))),e)return n(t._source);throw Hl.push(t),Error(o(350))}function so(e,t,n,r){var a=Ci;if(null===a)throw Error(o(349));var l=t._getVersion,i=l(t._source),u=Ql.current,s=u.useState((function(){return uo(a,t,n)})),c=s[1],f=s[0];s=Zl;var d=e.memoizedState,p=d.refs,m=p.getSnapshot,h=d.source;d=d.subscribe;var v=Yl;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=c;var e=l(t._source);if(!or(i,e)){e=n(t._source),or(f,e)||(c(e),e=iu(v),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,o=e;0<o;){var u=31-Vt(o),s=1<<u;r[u]|=e,o&=~s}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=iu(v);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),or(m,n)&&or(h,t)&&or(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:lo,lastRenderedState:f}).dispatch=c=Co.bind(null,Yl,e),s.queue=e,s.baseQueue=null,f=uo(a,t,n),s.memoizedState=s.baseState=f),f}function co(e,t,n){return so(ao(),e,t,n)}function fo(e){var t=ro();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:lo,lastRenderedState:e}).dispatch=Co.bind(null,Yl,e),[t.memoizedState,e]}function po(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Yl.updateQueue)?(t={lastEffect:null},Yl.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function mo(e){return e={current:e},ro().memoizedState=e}function ho(){return ao().memoizedState}function vo(e,t,n,r){var a=ro();Yl.flags|=e,a.memoizedState=po(1|t,n,void 0,void 0===r?null:r)}function go(e,t,n,r){var a=ao();r=void 0===r?null:r;var l=void 0;if(null!==Xl){var o=Xl.memoizedState;if(l=o.destroy,null!==r&&to(r,o.deps))return void po(t,n,l,r)}Yl.flags|=e,a.memoizedState=po(1|t,n,l,r)}function yo(e,t){return vo(516,4,e,t)}function bo(e,t){return go(516,4,e,t)}function wo(e,t){return go(4,2,e,t)}function Eo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ko(e,t,n){return n=null!=n?n.concat([e]):null,go(4,2,Eo.bind(null,t,e),n)}function _o(){}function So(e,t){var n=ao();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&to(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function xo(e,t){var n=ao();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&to(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function No(e,t){var n=Ua();Ba(98>n?98:n,(function(){e(!0)})),Ba(97<n?97:n,(function(){var n=ql.transition;ql.transition=1;try{e(!1),t()}finally{ql.transition=n}}))}function Co(e,t,n){var r=ou(),a=iu(e),l={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},o=t.pending;if(null===o?l.next=l:(l.next=o.next,o.next=l),t.pending=l,o=e.alternate,e===Yl||null!==o&&o===Yl)Jl=Gl=!0;else{if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var i=t.lastRenderedState,u=o(i,n);if(l.eagerReducer=o,l.eagerState=u,or(u,i))return}catch(e){}uu(e,a,r)}}var Po={readContext:nl,useCallback:eo,useContext:eo,useEffect:eo,useImperativeHandle:eo,useLayoutEffect:eo,useMemo:eo,useReducer:eo,useRef:eo,useState:eo,useDebugValue:eo,useDeferredValue:eo,useTransition:eo,useMutableSource:eo,useOpaqueIdentifier:eo,unstable_isNewReconciler:!1},To={readContext:nl,useCallback:function(e,t){return ro().memoizedState=[e,void 0===t?null:t],e},useContext:nl,useEffect:yo,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,vo(4,2,Eo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return vo(4,2,e,t)},useMemo:function(e,t){var n=ro();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ro();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Co.bind(null,Yl,e),[r.memoizedState,e]},useRef:mo,useState:fo,useDebugValue:_o,useDeferredValue:function(e){var t=fo(e),n=t[0],r=t[1];return yo((function(){var t=ql.transition;ql.transition=1;try{r(e)}finally{ql.transition=t}}),[e]),n},useTransition:function(){var e=fo(!1),t=e[0];return mo(e=No.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ro();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},so(r,e,t,n)},useOpaqueIdentifier:function(){if(Fl){var e=!1,t=function(e){return{$$typeof:A,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Qr++).toString(36))),Error(o(355))})),n=fo(t)[1];return 0==(2&Yl.mode)&&(Yl.flags|=516,po(5,(function(){n("r:"+(Qr++).toString(36))}),void 0,null)),t}return fo(t="r:"+(Qr++).toString(36)),t},unstable_isNewReconciler:!1},Lo={readContext:nl,useCallback:So,useContext:nl,useEffect:bo,useImperativeHandle:ko,useLayoutEffect:wo,useMemo:xo,useReducer:oo,useRef:ho,useState:function(){return oo(lo)},useDebugValue:_o,useDeferredValue:function(e){var t=oo(lo),n=t[0],r=t[1];return bo((function(){var t=ql.transition;ql.transition=1;try{r(e)}finally{ql.transition=t}}),[e]),n},useTransition:function(){var e=oo(lo)[0];return[ho().current,e]},useMutableSource:co,useOpaqueIdentifier:function(){return oo(lo)[0]},unstable_isNewReconciler:!1},Oo={readContext:nl,useCallback:So,useContext:nl,useEffect:bo,useImperativeHandle:ko,useLayoutEffect:wo,useMemo:xo,useReducer:io,useRef:ho,useState:function(){return io(lo)},useDebugValue:_o,useDeferredValue:function(e){var t=io(lo),n=t[0],r=t[1];return bo((function(){var t=ql.transition;ql.transition=1;try{r(e)}finally{ql.transition=t}}),[e]),n},useTransition:function(){var e=io(lo)[0];return[ho().current,e]},useMutableSource:co,useOpaqueIdentifier:function(){return io(lo)[0]},unstable_isNewReconciler:!1},Ro=E.ReactCurrentOwner,Mo=!1;function zo(e,t,n,r){t.child=null===e?_l(t,null,n,r):kl(t,e.child,n,r)}function Ao(e,t,n,r,a){n=n.render;var l=t.ref;return tl(t,a),r=no(e,t,n,r,l,a),null===e||Mo?(t.flags|=1,zo(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Jo(e,t,a))}function Io(e,t,n,r,a,l){if(null===e){var o=n.type;return"function"!=typeof o||ju(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=$u(n.type,null,r,t,t.mode,l)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Fo(e,t,o,r,a,l))}return o=e.child,0==(a&l)&&(a=o.memoizedProps,(n=null!==(n=n.compare)?n:ur)(a,r)&&e.ref===t.ref)?Jo(e,t,l):(t.flags|=1,(e=Uu(o,r)).ref=t.ref,e.return=t,t.child=e)}function Fo(e,t,n,r,a,l){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===t.ref){if(Mo=!1,0==(l&a))return t.lanes=e.lanes,Jo(e,t,l);0!=(16384&e.flags)&&(Mo=!0)}return Uo(e,t,n,r,l)}function Do(e,t,n){var r=t.pendingProps,a=r.children,l=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},vu(0,n);else{if(0==(1073741824&n))return e=null!==l?l.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},vu(0,e),null;t.memoizedState={baseLanes:0},vu(0,null!==l?l.baseLanes:n)}else null!==l?(r=l.baseLanes|n,t.memoizedState=null):r=n,vu(0,r);return zo(e,t,a,n),t.child}function jo(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Uo(e,t,n,r,a){var l=pa(n)?fa:sa.current;return l=da(t,l),tl(t,a),n=no(e,t,n,r,l,a),null===e||Mo?(t.flags|=1,zo(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Jo(e,t,a))}function $o(e,t,n,r,a){if(pa(n)){var l=!0;ga(t)}else l=!1;if(tl(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),hl(t,n,r),gl(t,n,r,a),r=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var u=o.context,s=n.contextType;s="object"==typeof s&&null!==s?nl(s):da(t,s=pa(n)?fa:sa.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==r||u!==s)&&vl(t,o,r,s),rl=!1;var d=t.memoizedState;o.state=d,sl(t,r,o,a),u=t.memoizedState,i!==r||d!==u||ca.current||rl?("function"==typeof c&&(dl(t,n,c,r),u=t.memoizedState),(i=rl||ml(t,n,i,r,d,u,s))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.flags|=4)):("function"==typeof o.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),o.props=r,o.state=u,o.context=s,r=i):("function"==typeof o.componentDidMount&&(t.flags|=4),r=!1)}else{o=t.stateNode,ll(e,t),i=t.memoizedProps,s=t.type===t.elementType?i:qa(t.type,i),o.props=s,f=t.pendingProps,d=o.context,u="object"==typeof(u=n.contextType)&&null!==u?nl(u):da(t,u=pa(n)?fa:sa.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==f||d!==u)&&vl(t,o,r,u),rl=!1,d=t.memoizedState,o.state=d,sl(t,r,o,a);var m=t.memoizedState;i!==f||d!==m||ca.current||rl?("function"==typeof p&&(dl(t,n,p,r),m=t.memoizedState),(s=rl||ml(t,n,s,r,d,m,u))?(c||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,m,u),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,m,u)),"function"==typeof o.componentDidUpdate&&(t.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=m),o.props=r,o.state=m,o.context=u,r=s):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Bo(e,t,n,r,l,a)}function Bo(e,t,n,r,a,l){jo(e,t);var o=0!=(64&t.flags);if(!r&&!o)return a&&ya(t,n,!1),Jo(e,t,l);r=t.stateNode,Ro.current=t;var i=o&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&o?(t.child=kl(t,e.child,null,l),t.child=kl(t,null,i,l)):zo(e,t,i,l),t.memoizedState=r.state,a&&ya(t,n,!0),t.child}function Vo(e){var t=e.stateNode;t.pendingContext?ha(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ha(0,t.context,!1),Tl(e,t.containerInfo)}var Ho,Wo,Qo,qo={dehydrated:null,retryLane:0};function Ko(e,t,n){var r,a=t.pendingProps,l=Ml.current,o=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&l)),r?(o=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(l|=1),ia(Ml,1&l),null===e?(void 0!==a.fallback&&Ul(t),e=a.children,l=a.fallback,o?(e=Yo(t,e,l,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qo,e):"number"==typeof a.unstable_expectedLoadTime?(e=Yo(t,e,l,n),t.child.memoizedState={baseLanes:n},t.memoizedState=qo,t.lanes=33554432,e):((n=Vu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,o?(a=function(e,t,n,r,a){var l=t.mode,o=e.child;e=o.sibling;var i={mode:"hidden",children:n};return 0==(2&l)&&t.child!==o?((n=t.child).childLanes=0,n.pendingProps=i,null!==(o=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=o,o.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Uu(o,i),null!==e?r=Uu(e,r):(r=Bu(r,l,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),o=t.child,l=e.child.memoizedState,o.memoizedState=null===l?{baseLanes:n}:{baseLanes:l.baseLanes|n},o.childLanes=e.childLanes&~n,t.memoizedState=qo,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=Uu(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Yo(e,t,n,r){var a=e.mode,l=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==l?(l.childLanes=0,l.pendingProps=t):l=Vu(t,a,0,null),n=Bu(n,a,r,null),l.return=e,n.return=e,l.sibling=n,e.child=l,n}function Xo(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),el(e.return,t)}function Zo(e,t,n,r,a,l){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:l}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=a,o.lastEffect=l)}function Go(e,t,n){var r=t.pendingProps,a=r.revealOrder,l=r.tail;if(zo(e,t,r.children,n),0!=(2&(r=Ml.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Xo(e,n);else if(19===e.tag)Xo(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ia(Ml,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===zl(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Zo(t,!1,a,n,l,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===zl(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Zo(t,!0,n,null,l,t.lastEffect);break;case"together":Zo(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Jo(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ai|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Uu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Uu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function ei(e,t){if(!Fl)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ti(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return pa(t.type)&&ma(),null;case 3:return Ll(),oa(ca),oa(sa),Wl(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Bl(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Rl(t);var l=Pl(Cl.current);if(n=t.type,null!==e&&null!=t.stateNode)Wo(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(o(166));return null}if(e=Pl(xl.current),Bl(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[Kr]=t,r[Yr]=i,n){case"dialog":Nr("cancel",r),Nr("close",r);break;case"iframe":case"object":case"embed":Nr("load",r);break;case"video":case"audio":for(e=0;e<kr.length;e++)Nr(kr[e],r);break;case"source":Nr("error",r);break;case"img":case"image":case"link":Nr("error",r),Nr("load",r);break;case"details":Nr("toggle",r);break;case"input":ee(r,i),Nr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Nr("invalid",r);break;case"textarea":ue(r,i),Nr("invalid",r)}for(var s in _e(n,i),e=null,i)i.hasOwnProperty(s)&&(l=i[s],"children"===s?"string"==typeof l?r.textContent!==l&&(e=["children",l]):"number"==typeof l&&r.textContent!==""+l&&(e=["children",""+l]):u.hasOwnProperty(s)&&null!=l&&"onScroll"===s&&Nr("scroll",r));switch(n){case"input":X(r),re(r,i,!0);break;case"textarea":X(r),ce(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Ir)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(s=9===l.nodeType?l:l.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[Kr]=t,e[Yr]=r,Ho(e,t),t.stateNode=e,s=Se(n,r),n){case"dialog":Nr("cancel",e),Nr("close",e),l=r;break;case"iframe":case"object":case"embed":Nr("load",e),l=r;break;case"video":case"audio":for(l=0;l<kr.length;l++)Nr(kr[l],e);l=r;break;case"source":Nr("error",e),l=r;break;case"img":case"image":case"link":Nr("error",e),Nr("load",e),l=r;break;case"details":Nr("toggle",e),l=r;break;case"input":ee(e,r),l=J(e,r),Nr("invalid",e);break;case"option":l=le(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},l=a({},r,{value:void 0}),Nr("invalid",e);break;case"textarea":ue(e,r),l=ie(e,r),Nr("invalid",e);break;default:l=r}_e(n,l);var c=l;for(i in c)if(c.hasOwnProperty(i)){var f=c[i];"style"===i?Ee(e,f):"dangerouslySetInnerHTML"===i?null!=(f=f?f.__html:void 0)&&ve(e,f):"children"===i?"string"==typeof f?("textarea"!==n||""!==f)&&ge(e,f):"number"==typeof f&&ge(e,""+f):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(u.hasOwnProperty(i)?null!=f&&"onScroll"===i&&Nr("scroll",e):null!=f&&w(e,i,f,s))}switch(n){case"input":X(e),re(e,r,!1);break;case"textarea":X(e),ce(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?oe(e,!!r.multiple,i,!1):null!=r.defaultValue&&oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof l.onClick&&(e.onclick=Ir)}jr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Qo(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));n=Pl(Cl.current),Pl(xl.current),Bl(t)?(r=t.stateNode,n=t.memoizedProps,r[Kr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Kr]=t,t.stateNode=r)}return null;case 13:return oa(Ml),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Bl(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ml.current)?0===Ri&&(Ri=3):(0!==Ri&&3!==Ri||(Ri=4),null===Ci||0==(134217727&Ai)&&0==(134217727&Ii)||du(Ci,Ti))),(r||n)&&(t.flags|=4),null);case 4:return Ll(),null===e&&Pr(t.stateNode.containerInfo),null;case 10:return Ja(t),null;case 17:return pa(t.type)&&ma(),null;case 19:if(oa(Ml),null===(r=t.memoizedState))return null;if(i=0!=(64&t.flags),null===(s=r.rendering))if(i)ei(r,!1);else{if(0!==Ri||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=zl(e))){for(t.flags|=64,ei(r,!1),null!==(i=s.updateQueue)&&(t.updateQueue=i,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(s=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=s.childLanes,i.lanes=s.lanes,i.child=s.child,i.memoizedProps=s.memoizedProps,i.memoizedState=s.memoizedState,i.updateQueue=s.updateQueue,i.type=s.type,e=s.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ia(Ml,1&Ml.current|2),t.child}e=e.sibling}null!==r.tail&&ja()>Ui&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432)}else{if(!i)if(null!==(e=zl(s))){if(t.flags|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ei(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!Fl)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*ja()-r.renderingStartTime>Ui&&1073741824!==n&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432);r.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=r.last)?n.sibling=s:t.child=s,r.last=s)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=ja(),n.sibling=null,t=Ml.current,ia(Ml,i?1&t|2:1&t),n):null;case 23:case 24:return gu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(o(156,t.tag))}function ni(e){switch(e.tag){case 1:pa(e.type)&&ma();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Ll(),oa(ca),oa(sa),Wl(),0!=(64&(t=e.flags)))throw Error(o(285));return e.flags=-4097&t|64,e;case 5:return Rl(e),null;case 13:return oa(Ml),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return oa(Ml),null;case 4:return Ll(),null;case 10:return Ja(e),null;case 23:case 24:return gu(),null;default:return null}}function ri(e,t){try{var n="",r=t;do{n+=Q(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function ai(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Ho=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Wo=function(e,t,n,r){var l=e.memoizedProps;if(l!==r){e=t.stateNode,Pl(xl.current);var o,i=null;switch(n){case"input":l=J(e,l),r=J(e,r),i=[];break;case"option":l=le(e,l),r=le(e,r),i=[];break;case"select":l=a({},l,{value:void 0}),r=a({},r,{value:void 0}),i=[];break;case"textarea":l=ie(e,l),r=ie(e,r),i=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(e.onclick=Ir)}for(f in _e(n,r),n=null,l)if(!r.hasOwnProperty(f)&&l.hasOwnProperty(f)&&null!=l[f])if("style"===f){var s=l[f];for(o in s)s.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?i||(i=[]):(i=i||[]).push(f,null));for(f in r){var c=r[f];if(s=null!=l?l[f]:void 0,r.hasOwnProperty(f)&&c!==s&&(null!=c||null!=s))if("style"===f)if(s){for(o in s)!s.hasOwnProperty(o)||c&&c.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in c)c.hasOwnProperty(o)&&s[o]!==c[o]&&(n||(n={}),n[o]=c[o])}else n||(i||(i=[]),i.push(f,n)),n=c;else"dangerouslySetInnerHTML"===f?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(i=i||[]).push(f,c)):"children"===f?"string"!=typeof c&&"number"!=typeof c||(i=i||[]).push(f,""+c):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=c&&"onScroll"===f&&Nr("scroll",e),i||s===c||(i=[])):"object"==typeof c&&null!==c&&c.$$typeof===A?c.toString():(i=i||[]).push(f,c))}n&&(i=i||[]).push("style",n);var f=i;(t.updateQueue=f)&&(t.flags|=4)}},Qo=function(e,t,n,r){n!==r&&(t.flags|=4)};var li="function"==typeof WeakMap?WeakMap:Map;function oi(e,t,n){(n=ol(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Hi||(Hi=!0,Wi=r),ai(0,t)},n}function ii(e,t,n){(n=ol(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return ai(0,t),r(a)}}var l=e.stateNode;return null!==l&&"function"==typeof l.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Qi?Qi=new Set([this]):Qi.add(this),ai(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ui="function"==typeof WeakSet?WeakSet:Set;function si(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){zu(e,t)}else t.current=null}function ci(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:qa(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Vr(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(o(163))}function fi(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Ou(n,e),Lu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:qa(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&cl(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}cl(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&jr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Et(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(o(163))}function di(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=we("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function pi(e,t){if(wa&&"function"==typeof wa.onCommitFiberUnmount)try{wa.onCommitFiberUnmount(ba,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Ou(t,n);else{r=t;try{a()}catch(e){zu(r,e)}}n=n.next}while(n!==e)}break;case 1:if(si(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){zu(t,e)}break;case 5:si(t);break;case 4:bi(e,t)}}function mi(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function hi(e){return 5===e.tag||3===e.tag||4===e.tag}function vi(e){e:{for(var t=e.return;null!==t;){if(hi(t))break e;t=t.return}throw Error(o(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(o(161))}16&n.flags&&(ge(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?gi(e,n,t):yi(e,n,t)}function gi(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Ir));else if(4!==r&&null!==(e=e.child))for(gi(e,t,n),e=e.sibling;null!==e;)gi(e,t,n),e=e.sibling}function yi(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(yi(e,t,n),e=e.sibling;null!==e;)yi(e,t,n),e=e.sibling}function bi(e,t){for(var n,r,a=t,l=!1;;){if(!l){l=a.return;e:for(;;){if(null===l)throw Error(o(160));switch(n=l.stateNode,l.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}l=l.return}l=!0}if(5===a.tag||6===a.tag){e:for(var i=e,u=a,s=u;;)if(pi(i,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break e;for(;null===s.sibling;){if(null===s.return||s.return===u)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(i=n,u=a.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(pi(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(l=!1)}a.sibling.return=a.return,a=a.sibling}}function wi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var l=t.updateQueue;if(t.updateQueue=null,null!==l){for(n[Yr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Se(e,a),t=Se(e,r),a=0;a<l.length;a+=2){var i=l[a],u=l[a+1];"style"===i?Ee(n,u):"dangerouslySetInnerHTML"===i?ve(n,u):"children"===i?ge(n,u):w(n,i,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":se(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(l=r.value)?oe(n,!!r.multiple,l,!1):e!==!!r.multiple&&(null!=r.defaultValue?oe(n,!!r.multiple,r.defaultValue,!0):oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(o(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,Et(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(ji=ja(),di(t.child,!0)),void Ei(t);case 19:return void Ei(t);case 17:return;case 23:case 24:return void di(t,null!==t.memoizedState)}throw Error(o(163))}function Ei(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ui),t.forEach((function(t){var r=Iu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function ki(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var _i=Math.ceil,Si=E.ReactCurrentDispatcher,xi=E.ReactCurrentOwner,Ni=0,Ci=null,Pi=null,Ti=0,Li=0,Oi=la(0),Ri=0,Mi=null,zi=0,Ai=0,Ii=0,Fi=0,Di=null,ji=0,Ui=1/0;function $i(){Ui=ja()+500}var Bi,Vi=null,Hi=!1,Wi=null,Qi=null,qi=!1,Ki=null,Yi=90,Xi=[],Zi=[],Gi=null,Ji=0,eu=null,tu=-1,nu=0,ru=0,au=null,lu=!1;function ou(){return 0!=(48&Ni)?ja():-1!==tu?tu:tu=ja()}function iu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Ua()?1:2;if(0===nu&&(nu=zi),0!==Qa.transition){0!==ru&&(ru=null!==Di?Di.pendingLanes:0),e=nu;var t=4186112&~ru;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Ua(),e=jt(0!=(4&Ni)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nu)}function uu(e,t,n){if(50<Ji)throw Ji=0,eu=null,Error(o(185));if(null===(e=su(e,t)))return null;Bt(e,t,n),e===Ci&&(Ii|=t,4===Ri&&du(e,Ti));var r=Ua();1===t?0!=(8&Ni)&&0==(48&Ni)?pu(e):(cu(e,n),0===Ni&&($i(),Ha())):(0==(4&Ni)||98!==r&&99!==r||(null===Gi?Gi=new Set([e]):Gi.add(e)),cu(e,n)),Di=e}function su(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function cu(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,l=e.expirationTimes,i=e.pendingLanes;0<i;){var u=31-Vt(i),s=1<<u,c=l[u];if(-1===c){if(0==(s&r)||0!=(s&a)){c=t,It(s);var f=At;l[u]=10<=f?c+250:6<=f?c+5e3:-1}}else c<=t&&(e.expiredLanes|=s);i&=~s}if(r=Ft(e,e===Ci?Ti:0),t=At,0===r)null!==n&&(n!==Ma&&_a(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Ma&&_a(n)}15===t?(n=pu.bind(null,e),null===Aa?(Aa=[n],Ia=ka(Pa,Wa)):Aa.push(n),n=Ma):n=14===t?Va(99,pu.bind(null,e)):Va(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(o(358,e))}}(t),fu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function fu(e){if(tu=-1,ru=nu=0,0!=(48&Ni))throw Error(o(327));var t=e.callbackNode;if(Tu()&&e.callbackNode!==t)return null;var n=Ft(e,e===Ci?Ti:0);if(0===n)return null;var r=n,a=Ni;Ni|=16;var l=wu();for(Ci===e&&Ti===r||($i(),yu(e,r));;)try{_u();break}catch(t){bu(e,t)}if(Ga(),Si.current=l,Ni=a,null!==Pi?r=0:(Ci=null,Ti=0,r=Ri),0!=(zi&Ii))yu(e,0);else if(0!==r){if(2===r&&(Ni|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(n=Dt(e))&&(r=Eu(e,n))),1===r)throw t=Mi,yu(e,0),du(e,n),cu(e,ja()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(o(345));case 2:Nu(e);break;case 3:if(du(e,n),(62914560&n)===n&&10<(r=ji+500-ja())){if(0!==Ft(e,0))break;if(((a=e.suspendedLanes)&n)!==n){ou(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=$r(Nu.bind(null,e),r);break}Nu(e);break;case 4:if(du(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var i=31-Vt(n);l=1<<i,(i=r[i])>a&&(a=i),n&=~l}if(n=a,10<(n=(120>(n=ja()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*_i(n/1960))-n)){e.timeoutHandle=$r(Nu.bind(null,e),n);break}Nu(e);break;case 5:Nu(e);break;default:throw Error(o(329))}}return cu(e,ja()),e.callbackNode===t?fu.bind(null,e):null}function du(e,t){for(t&=~Fi,t&=~Ii,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Vt(t),r=1<<n;e[n]=-1,t&=~r}}function pu(e){if(0!=(48&Ni))throw Error(o(327));if(Tu(),e===Ci&&0!=(e.expiredLanes&Ti)){var t=Ti,n=Eu(e,t);0!=(zi&Ii)&&(n=Eu(e,t=Ft(e,t)))}else n=Eu(e,t=Ft(e,0));if(0!==e.tag&&2===n&&(Ni|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(t=Dt(e))&&(n=Eu(e,t))),1===n)throw n=Mi,yu(e,0),du(e,t),cu(e,ja()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Nu(e),cu(e,ja()),null}function mu(e,t){var n=Ni;Ni|=1;try{return e(t)}finally{0===(Ni=n)&&($i(),Ha())}}function hu(e,t){var n=Ni;Ni&=-2,Ni|=8;try{return e(t)}finally{0===(Ni=n)&&($i(),Ha())}}function vu(e,t){ia(Oi,Li),Li|=t,zi|=t}function gu(){Li=Oi.current,oa(Oi)}function yu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Br(n)),null!==Pi)for(n=Pi.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ma();break;case 3:Ll(),oa(ca),oa(sa),Wl();break;case 5:Rl(r);break;case 4:Ll();break;case 13:case 19:oa(Ml);break;case 10:Ja(r);break;case 23:case 24:gu()}n=n.return}Ci=e,Pi=Uu(e.current,null),Ti=Li=zi=t,Ri=0,Mi=null,Fi=Ii=Ai=0}function bu(e,t){for(;;){var n=Pi;try{if(Ga(),Ql.current=Po,Gl){for(var r=Yl.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Gl=!1}if(Kl=0,Zl=Xl=Yl=null,Jl=!1,xi.current=null,null===n||null===n.return){Ri=1,Mi=t,Pi=null;break}e:{var l=e,o=n.return,i=n,u=t;if(t=Ti,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var s=u;if(0==(2&i.mode)){var c=i.alternate;c?(i.updateQueue=c.updateQueue,i.memoizedState=c.memoizedState,i.lanes=c.lanes):(i.updateQueue=null,i.memoizedState=null)}var f=0!=(1&Ml.current),d=o;do{var p;if(p=13===d.tag){var m=d.memoizedState;if(null!==m)p=null!==m.dehydrated;else{var h=d.memoizedProps;p=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var g=new Set;g.add(s),d.updateQueue=g}else v.add(s);if(0==(2&d.mode)){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var y=ol(-1,1);y.tag=2,il(i,y)}i.lanes|=1;break e}u=void 0,i=t;var b=l.pingCache;if(null===b?(b=l.pingCache=new li,u=new Set,b.set(s,u)):void 0===(u=b.get(s))&&(u=new Set,b.set(s,u)),!u.has(i)){u.add(i);var w=Au.bind(null,l,s,i);s.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((q(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Ri&&(Ri=2),u=ri(u,i),d=o;do{switch(d.tag){case 3:l=u,d.flags|=4096,t&=-t,d.lanes|=t,ul(d,oi(0,l,t));break e;case 1:l=u;var E=d.type,k=d.stateNode;if(0==(64&d.flags)&&("function"==typeof E.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Qi||!Qi.has(k)))){d.flags|=4096,t&=-t,d.lanes|=t,ul(d,ii(d,l,t));break e}}d=d.return}while(null!==d)}xu(n)}catch(e){t=e,Pi===n&&null!==n&&(Pi=n=n.return);continue}break}}function wu(){var e=Si.current;return Si.current=Po,null===e?Po:e}function Eu(e,t){var n=Ni;Ni|=16;var r=wu();for(Ci===e&&Ti===t||yu(e,t);;)try{ku();break}catch(t){bu(e,t)}if(Ga(),Ni=n,Si.current=r,null!==Pi)throw Error(o(261));return Ci=null,Ti=0,Ri}function ku(){for(;null!==Pi;)Su(Pi)}function _u(){for(;null!==Pi&&!Sa();)Su(Pi)}function Su(e){var t=Bi(e.alternate,e,Li);e.memoizedProps=e.pendingProps,null===t?xu(e):Pi=t,xi.current=null}function xu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=ti(n,t,Li)))return void(Pi=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Li)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ni(t)))return n.flags&=2047,void(Pi=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Pi=t);Pi=t=e}while(null!==t);0===Ri&&(Ri=5)}function Nu(e){var t=Ua();return Ba(99,Cu.bind(null,e,t)),null}function Cu(e,t){do{Tu()}while(null!==Ki);if(0!=(48&Ni))throw Error(o(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,l=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var i=e.eventTimes,u=e.expirationTimes;0<l;){var s=31-Vt(l),c=1<<s;a[s]=0,i[s]=-1,u[s]=-1,l&=~c}if(null!==Gi&&0==(24&r)&&Gi.has(e)&&Gi.delete(e),e===Ci&&(Pi=Ci=null,Ti=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=Ni,Ni|=32,xi.current=null,Fr=Kt,pr(i=dr())){if("selectionStart"in i)u={start:i.selectionStart,end:i.selectionEnd};else e:if(u=(u=i.ownerDocument)&&u.defaultView||window,(c=u.getSelection&&u.getSelection())&&0!==c.rangeCount){u=c.anchorNode,l=c.anchorOffset,s=c.focusNode,c=c.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,m=0,h=0,v=i,g=null;t:for(;;){for(var y;v!==u||0!==l&&3!==v.nodeType||(d=f+l),v!==s||0!==c&&3!==v.nodeType||(p=f+c),3===v.nodeType&&(f+=v.nodeValue.length),null!==(y=v.firstChild);)g=v,v=y;for(;;){if(v===i)break t;if(g===u&&++m===l&&(d=f),g===s&&++h===c&&(p=f),null!==(y=v.nextSibling))break;g=(v=g).parentNode}v=y}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Dr={focusedElem:i,selectionRange:u},Kt=!1,au=null,lu=!1,Vi=r;do{try{Pu()}catch(e){if(null===Vi)throw Error(o(330));zu(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);au=null,Vi=r;do{try{for(i=e;null!==Vi;){var b=Vi.flags;if(16&b&&ge(Vi.stateNode,""),128&b){var w=Vi.alternate;if(null!==w){var E=w.ref;null!==E&&("function"==typeof E?E(null):E.current=null)}}switch(1038&b){case 2:vi(Vi),Vi.flags&=-3;break;case 6:vi(Vi),Vi.flags&=-3,wi(Vi.alternate,Vi);break;case 1024:Vi.flags&=-1025;break;case 1028:Vi.flags&=-1025,wi(Vi.alternate,Vi);break;case 4:wi(Vi.alternate,Vi);break;case 8:bi(i,u=Vi);var k=u.alternate;mi(u),null!==k&&mi(k)}Vi=Vi.nextEffect}}catch(e){if(null===Vi)throw Error(o(330));zu(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);if(E=Dr,w=dr(),b=E.focusedElem,i=E.selectionRange,w!==b&&b&&b.ownerDocument&&fr(b.ownerDocument.documentElement,b)){null!==i&&pr(b)&&(w=i.start,void 0===(E=i.end)&&(E=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(E,b.value.length)):(E=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(E=E.getSelection(),u=b.textContent.length,k=Math.min(i.start,u),i=void 0===i.end?k:Math.min(i.end,u),!E.extend&&k>i&&(u=i,i=k,k=u),u=cr(b,k),l=cr(b,i),u&&l&&(1!==E.rangeCount||E.anchorNode!==u.node||E.anchorOffset!==u.offset||E.focusNode!==l.node||E.focusOffset!==l.offset)&&((w=w.createRange()).setStart(u.node,u.offset),E.removeAllRanges(),k>i?(E.addRange(w),E.extend(l.node,l.offset)):(w.setEnd(l.node,l.offset),E.addRange(w))))),w=[];for(E=b;E=E.parentNode;)1===E.nodeType&&w.push({element:E,left:E.scrollLeft,top:E.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(E=w[b]).element.scrollLeft=E.left,E.element.scrollTop=E.top}Kt=!!Fr,Dr=Fr=null,e.current=n,Vi=r;do{try{for(b=e;null!==Vi;){var _=Vi.flags;if(36&_&&fi(b,Vi.alternate,Vi),128&_){w=void 0;var S=Vi.ref;if(null!==S){var x=Vi.stateNode;switch(Vi.tag){case 5:w=x;break;default:w=x}"function"==typeof S?S(w):S.current=w}}Vi=Vi.nextEffect}}catch(e){if(null===Vi)throw Error(o(330));zu(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);Vi=null,za(),Ni=a}else e.current=n;if(qi)qi=!1,Ki=e,Yi=t;else for(Vi=r;null!==Vi;)t=Vi.nextEffect,Vi.nextEffect=null,8&Vi.flags&&((_=Vi).sibling=null,_.stateNode=null),Vi=t;if(0===(r=e.pendingLanes)&&(Qi=null),1===r?e===eu?Ji++:(Ji=0,eu=e):Ji=0,n=n.stateNode,wa&&"function"==typeof wa.onCommitFiberRoot)try{wa.onCommitFiberRoot(ba,n,void 0,64==(64&n.current.flags))}catch(e){}if(cu(e,ja()),Hi)throw Hi=!1,e=Wi,Wi=null,e;return 0!=(8&Ni)||Ha(),null}function Pu(){for(;null!==Vi;){var e=Vi.alternate;lu||null===au||(0!=(8&Vi.flags)?Je(Vi,au)&&(lu=!0):13===Vi.tag&&ki(e,Vi)&&Je(Vi,au)&&(lu=!0));var t=Vi.flags;0!=(256&t)&&ci(e,Vi),0==(512&t)||qi||(qi=!0,Va(97,(function(){return Tu(),null}))),Vi=Vi.nextEffect}}function Tu(){if(90!==Yi){var e=97<Yi?97:Yi;return Yi=90,Ba(e,Ru)}return!1}function Lu(e,t){Xi.push(t,e),qi||(qi=!0,Va(97,(function(){return Tu(),null})))}function Ou(e,t){Zi.push(t,e),qi||(qi=!0,Va(97,(function(){return Tu(),null})))}function Ru(){if(null===Ki)return!1;var e=Ki;if(Ki=null,0!=(48&Ni))throw Error(o(331));var t=Ni;Ni|=32;var n=Zi;Zi=[];for(var r=0;r<n.length;r+=2){var a=n[r],l=n[r+1],i=a.destroy;if(a.destroy=void 0,"function"==typeof i)try{i()}catch(e){if(null===l)throw Error(o(330));zu(l,e)}}for(n=Xi,Xi=[],r=0;r<n.length;r+=2){a=n[r],l=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===l)throw Error(o(330));zu(l,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Ni=t,Ha(),!0}function Mu(e,t,n){il(e,t=oi(0,t=ri(n,t),1)),t=ou(),null!==(e=su(e,1))&&(Bt(e,1,t),cu(e,t))}function zu(e,t){if(3===e.tag)Mu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Mu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Qi||!Qi.has(r))){var a=ii(n,e=ri(t,e),1);if(il(n,a),a=ou(),null!==(n=su(n,1)))Bt(n,1,a),cu(n,a);else if("function"==typeof r.componentDidCatch&&(null===Qi||!Qi.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Au(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ou(),e.pingedLanes|=e.suspendedLanes&n,Ci===e&&(Ti&n)===n&&(4===Ri||3===Ri&&(62914560&Ti)===Ti&&500>ja()-ji?yu(e,0):Fi|=n),cu(e,t)}function Iu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Ua()?1:2:(0===nu&&(nu=zi),0===(t=Ut(62914560&~nu))&&(t=4194304))),n=ou(),null!==(e=su(e,t))&&(Bt(e,t,n),cu(e,n))}function Fu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Du(e,t,n,r){return new Fu(e,t,n,r)}function ju(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Uu(e,t){var n=e.alternate;return null===n?((n=Du(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function $u(e,t,n,r,a,l){var i=2;if(r=e,"function"==typeof e)ju(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case S:return Bu(n.children,a,l,t);case I:i=8,a|=16;break;case x:i=8,a|=1;break;case N:return(e=Du(12,n,t,8|a)).elementType=N,e.type=N,e.lanes=l,e;case L:return(e=Du(13,n,t,a)).type=L,e.elementType=L,e.lanes=l,e;case O:return(e=Du(19,n,t,a)).elementType=O,e.lanes=l,e;case F:return Vu(n,a,l,t);case D:return(e=Du(24,n,t,a)).elementType=D,e.lanes=l,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case C:i=10;break e;case P:i=9;break e;case T:i=11;break e;case R:i=14;break e;case M:i=16,r=null;break e;case z:i=22;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=Du(i,n,t,a)).elementType=e,t.type=r,t.lanes=l,t}function Bu(e,t,n,r){return(e=Du(7,e,r,t)).lanes=n,e}function Vu(e,t,n,r){return(e=Du(23,e,r,t)).elementType=F,e.lanes=n,e}function Hu(e,t,n){return(e=Du(6,e,null,t)).lanes=n,e}function Wu(e,t,n){return(t=Du(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Qu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=$t(0),this.expirationTimes=$t(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=$t(0),this.mutableSourceEagerHydrationData=null}function qu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:_,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Ku(e,t,n,r){var a=t.current,l=ou(),i=iu(a);e:if(n){t:{if(Ye(n=n._reactInternals)!==n||1!==n.tag)throw Error(o(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(pa(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(o(171))}if(1===n.tag){var s=n.type;if(pa(s)){n=va(n,s,u);break e}}n=u}else n=ua;return null===t.context?t.context=n:t.pendingContext=n,(t=ol(l,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),il(a,t),uu(a,i,l),i}function Yu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Xu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Zu(e,t){Xu(e,t),(e=e.alternate)&&Xu(e,t)}function Gu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Qu(e,t,null!=n&&!0===n.hydrate),t=Du(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,al(t),e[Xr]=n.current,Pr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Ju(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function es(e,t,n,r,a){var l=n._reactRootContainer;if(l){var o=l._internalRoot;if("function"==typeof a){var i=a;a=function(){var e=Yu(o);i.call(e)}}Ku(t,o,e,a)}else{if(l=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Gu(e,0,t?{hydrate:!0}:void 0)}(n,r),o=l._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Yu(o);u.call(e)}}hu((function(){Ku(t,o,e,a)}))}return Yu(o)}function ts(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ju(t))throw Error(o(200));return qu(e,t,null,n)}Bi=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||ca.current)Mo=!0;else{if(0==(n&r)){switch(Mo=!1,t.tag){case 3:Vo(t),Vl();break;case 5:Ol(t);break;case 1:pa(t.type)&&ga(t);break;case 4:Tl(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;ia(Ka,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Ko(e,t,n):(ia(Ml,1&Ml.current),null!==(t=Jo(e,t,n))?t.sibling:null);ia(Ml,1&Ml.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Go(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ia(Ml,Ml.current),r)break;return null;case 23:case 24:return t.lanes=0,Do(e,t,n)}return Jo(e,t,n)}Mo=0!=(16384&e.flags)}else Mo=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=da(t,sa.current),tl(t,n),a=no(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,pa(r)){var l=!0;ga(t)}else l=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,al(t);var i=r.getDerivedStateFromProps;"function"==typeof i&&dl(t,r,i,e),a.updater=pl,t.stateNode=a,a._reactInternals=t,gl(t,r,e,n),t=Bo(null,t,r,!0,l,n)}else t.tag=0,zo(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(l=a._init)(a._payload),t.type=a,l=t.tag=function(e){if("function"==typeof e)return ju(e)?1:0;if(null!=e){if((e=e.$$typeof)===T)return 11;if(e===R)return 14}return 2}(a),e=qa(a,e),l){case 0:t=Uo(null,t,a,e,n);break e;case 1:t=$o(null,t,a,e,n);break e;case 11:t=Ao(null,t,a,e,n);break e;case 14:t=Io(null,t,a,qa(a.type,e),r,n);break e}throw Error(o(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Uo(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 1:return r=t.type,a=t.pendingProps,$o(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 3:if(Vo(t),r=t.updateQueue,null===e||null===r)throw Error(o(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,ll(e,t),sl(t,r,null,n),(r=t.memoizedState.element)===a)Vl(),t=Jo(e,t,n);else{if((l=(a=t.stateNode).hydrate)&&(Il=Hr(t.stateNode.containerInfo.firstChild),Al=t,l=Fl=!0),l){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(l=e[a])._workInProgressVersionPrimary=e[a+1],Hl.push(l);for(n=_l(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else zo(e,t,r,n),Vl();t=t.child}return t;case 5:return Ol(t),null===e&&Ul(t),r=t.type,a=t.pendingProps,l=null!==e?e.memoizedProps:null,i=a.children,Ur(r,a)?i=null:null!==l&&Ur(r,l)&&(t.flags|=16),jo(e,t),zo(e,t,i,n),t.child;case 6:return null===e&&Ul(t),null;case 13:return Ko(e,t,n);case 4:return Tl(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=kl(t,null,r,n):zo(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Ao(e,t,r,a=t.elementType===r?a:qa(r,a),n);case 7:return zo(e,t,t.pendingProps,n),t.child;case 8:case 12:return zo(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,i=t.memoizedProps,l=a.value;var u=t.type._context;if(ia(Ka,u._currentValue),u._currentValue=l,null!==i)if(u=i.value,0==(l=or(u,l)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,l):1073741823))){if(i.children===a.children&&!ca.current){t=Jo(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){i=u.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&l)){1===u.tag&&((c=ol(-1,n&-n)).tag=2,il(u,c)),u.lanes|=n,null!==(c=u.alternate)&&(c.lanes|=n),el(u.return,n),s.lanes|=n;break}c=c.next}}else i=10===u.tag&&u.type===t.type?null:u.child;if(null!==i)i.return=u;else for(i=u;null!==i;){if(i===t){i=null;break}if(null!==(u=i.sibling)){u.return=i.return,i=u;break}i=i.return}u=i}zo(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(l=t.pendingProps).children,tl(t,n),r=r(a=nl(a,l.unstable_observedBits)),t.flags|=1,zo(e,t,r,n),t.child;case 14:return l=qa(a=t.type,t.pendingProps),Io(e,t,a,l=qa(a.type,l),r,n);case 15:return Fo(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:qa(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,pa(r)?(e=!0,ga(t)):e=!1,tl(t,n),hl(t,r,a),gl(t,r,a,n),Bo(null,t,r,!0,e,n);case 19:return Go(e,t,n);case 23:case 24:return Do(e,t,n)}throw Error(o(156,t.tag))},Gu.prototype.render=function(e){Ku(e,this._internalRoot,null,null)},Gu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ku(null,e,null,(function(){t[Xr]=null}))},et=function(e){13===e.tag&&(uu(e,4,ou()),Zu(e,4))},tt=function(e){13===e.tag&&(uu(e,67108864,ou()),Zu(e,67108864))},nt=function(e){if(13===e.tag){var t=ou(),n=iu(e);uu(e,n,t),Zu(e,n)}},rt=function(e,t){return t()},Ne=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ta(r);if(!a)throw Error(o(90));Z(r),ne(r,a)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&oe(e,!!n.multiple,t,!1)}},Re=mu,Me=function(e,t,n,r,a){var l=Ni;Ni|=4;try{return Ba(98,e.bind(null,t,n,r,a))}finally{0===(Ni=l)&&($i(),Ha())}},ze=function(){0==(49&Ni)&&(function(){if(null!==Gi){var e=Gi;Gi=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,cu(e,ja())}))}Ha()}(),Tu())},Ae=function(e,t){var n=Ni;Ni|=2;try{return e(t)}finally{0===(Ni=n)&&($i(),Ha())}};var ns={Events:[Jr,ea,ta,Le,Oe,Tu,{current:!1}]},rs={findFiberByHostInstance:Gr,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},as={bundleType:rs.bundleType,version:rs.version,rendererPackageName:rs.rendererPackageName,rendererConfig:rs.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:E.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ge(e))?null:e.stateNode},findFiberByHostInstance:rs.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ls=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ls.isDisabled&&ls.supportsFiber)try{ba=ls.inject(as),wa=ls}catch(he){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ns,t.createPortal=ts,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw Error(o(268,Object.keys(e)))}return null===(e=Ge(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Ni;if(0!=(48&n))return e(t);Ni|=1;try{if(e)return Ba(99,e.bind(null,t))}finally{Ni=n,Ha()}},t.hydrate=function(e,t,n){if(!Ju(t))throw Error(o(200));return es(null,e,t,!0,n)},t.render=function(e,t,n){if(!Ju(t))throw Error(o(200));return es(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ju(e))throw Error(o(40));return!!e._reactRootContainer&&(hu((function(){es(null,null,e,!1,(function(){e._reactRootContainer=null,e[Xr]=null}))})),!0)},t.unstable_batchedUpdates=mu,t.unstable_createPortal=function(e,t){return ts(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Ju(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return es(e,t,n,!1,r)},t.version="17.0.2"},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,l=n?Symbol.for("react.fragment"):60107,o=n?Symbol.for("react.strict_mode"):60108,i=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,s=n?Symbol.for("react.context"):60110,c=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,m=n?Symbol.for("react.suspense_list"):60120,h=n?Symbol.for("react.memo"):60115,v=n?Symbol.for("react.lazy"):60116,g=n?Symbol.for("react.block"):60121,y=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function E(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case c:case f:case l:case i:case o:case p:return e;default:switch(e=e&&e.$$typeof){case s:case d:case v:case h:case u:return e;default:return t}}case a:return t}}}function k(e){return E(e)===f}t.AsyncMode=c,t.ConcurrentMode=f,t.ContextConsumer=s,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=l,t.Lazy=v,t.Memo=h,t.Portal=a,t.Profiler=i,t.StrictMode=o,t.Suspense=p,t.isAsyncMode=function(e){return k(e)||E(e)===c},t.isConcurrentMode=k,t.isContextConsumer=function(e){return E(e)===s},t.isContextProvider=function(e){return E(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return E(e)===d},t.isFragment=function(e){return E(e)===l},t.isLazy=function(e){return E(e)===v},t.isMemo=function(e){return E(e)===h},t.isPortal=function(e){return E(e)===a},t.isProfiler=function(e){return E(e)===i},t.isStrictMode=function(e){return E(e)===o},t.isSuspense=function(e){return E(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===l||e===f||e===i||e===o||e===p||e===m||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===h||e.$$typeof===u||e.$$typeof===s||e.$$typeof===d||e.$$typeof===y||e.$$typeof===b||e.$$typeof===w||e.$$typeof===g)},t.typeOf=E},864:(e,t,n)=>{"use strict";e.exports=n(921)},585:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},658:(e,t,n)=>{var r=n(585);e.exports=function e(t,n,a){return r(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return c(e,t)}(t,n):r(t)?function(t,n,r){for(var a=[],l=0;l<t.length;l++)a.push(e(t[l],n,r).source);return c(new RegExp("(?:"+a.join("|")+")",f(r)),n)}(t,n,a):function(e,t,n){return d(l(e,n),t,n)}(t,n,a)},e.exports.parse=l,e.exports.compile=function(e,t){return i(l(e,t),t)},e.exports.tokensToFunction=i,e.exports.tokensToRegExp=d;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function l(e,t){for(var n,r=[],l=0,o=0,i="",c=t&&t.delimiter||"/";null!=(n=a.exec(e));){var f=n[0],d=n[1],p=n.index;if(i+=e.slice(o,p),o=p+f.length,d)i+=d[1];else{var m=e[o],h=n[2],v=n[3],g=n[4],y=n[5],b=n[6],w=n[7];i&&(r.push(i),i="");var E=null!=h&&null!=m&&m!==h,k="+"===b||"*"===b,_="?"===b||"*"===b,S=n[2]||c,x=g||y;r.push({name:v||l++,prefix:h||"",delimiter:S,optional:_,repeat:k,partial:E,asterisk:!!w,pattern:x?s(x):w?".*":"[^"+u(S)+"]+?"})}}return o<e.length&&(i+=e.substr(o)),i&&r.push(i),r}function o(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function i(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",f(t)));return function(t,a){for(var l="",i=t||{},u=(a||{}).pretty?o:encodeURIComponent,s=0;s<e.length;s++){var c=e[s];if("string"!=typeof c){var f,d=i[c.name];if(null==d){if(c.optional){c.partial&&(l+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(r(d)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[s].test(f))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(f)+"`");l+=(0===p?c.prefix:c.delimiter)+f}}else{if(f=c.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[s].test(f))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+f+'"');l+=c.prefix+f}}else l+=c}return l}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,l=!1!==n.end,o="",i=0;i<e.length;i++){var s=e[i];if("string"==typeof s)o+=u(s);else{var d=u(s.prefix),p="(?:"+s.pattern+")";t.push(s),s.repeat&&(p+="(?:"+d+p+")*"),o+=p=s.optional?s.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var m=u(n.delimiter||"/"),h=o.slice(-m.length)===m;return a||(o=(h?o.slice(0,-m.length):o)+"(?:"+m+"(?=$))?"),o+=l?"$":a&&h?"":"(?="+m+"|$)",c(new RegExp("^"+o,f(n)),t)}},408:(e,t,n)=>{"use strict";var r=n(418),a=60103,l=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var o=60109,i=60110,u=60112;t.Suspense=60113;var s=60115,c=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),l=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),o=f("react.provider"),i=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),s=f("react.memo"),c=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h={};function v(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||m}function g(){}function y(e,t,n){this.props=e,this.context=t,this.refs=h,this.updater=n||m}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},g.prototype=v.prototype;var b=y.prototype=new g;b.constructor=y,r(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},E=Object.prototype.hasOwnProperty,k={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var r,l={},o=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)E.call(t,r)&&!k.hasOwnProperty(r)&&(l[r]=t[r]);var u=arguments.length-2;if(1===u)l.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];l.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===l[r]&&(l[r]=u[r]);return{$$typeof:a,type:e,key:o,ref:i,props:l,_owner:w.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var x=/\/+/g;function N(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function C(e,t,n,r,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case l:u=!0}}if(u)return o=o(u=e),e=""===r?"."+N(u,0):r,Array.isArray(o)?(n="",null!=e&&(n=e.replace(x,"$&/")+"/"),C(o,t,n,"",(function(e){return e}))):null!=o&&(S(o)&&(o=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,n+(!o.key||u&&u.key===o.key?"":(""+o.key).replace(x,"$&/")+"/")+e)),t.push(o)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var c=r+N(i=e[s],s);u+=C(i,t,n,c,o)}else if("function"==typeof(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=c.call(e),s=0;!(i=e.next()).done;)u+=C(i=i.value,t,n,c=r+N(i,s++),o);else if("object"===i)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function P(e,t,n){if(null==e)return e;var r=[],a=0;return C(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function T(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var L={current:null};function O(){var e=L.current;if(null===e)throw Error(p(321));return e}var R={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:P,forEach:function(e,t,n){P(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return P(e,(function(){t++})),t},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var l=r({},e.props),o=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=w.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)E.call(t,c)&&!k.hasOwnProperty(c)&&(l[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)l.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];l.children=s}return{$$typeof:a,type:e.type,key:o,ref:i,props:l,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=_,t.createFactory=function(e){var t=_.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:c,_payload:{_status:-1,_result:e},_init:T}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return O().useCallback(e,t)},t.useContext=function(e,t){return O().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return O().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return O().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return O().useLayoutEffect(e,t)},t.useMemo=function(e,t){return O().useMemo(e,t)},t.useReducer=function(e,t,n){return O().useReducer(e,t,n)},t.useRef=function(e){return O().useRef(e)},t.useState=function(e){return O().useState(e)},t.version="17.0.2"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";var n,r,a,l;if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,c=null,f=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(f,0))},r=function(e,t){c=setTimeout(e,t)},a=function(){clearTimeout(c)},t.unstable_shouldYield=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var m=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof m&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var h=!1,v=null,g=-1,y=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):y=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,E=w.port2;w.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();b=e+y;try{v(!0,e)?E.postMessage(null):(h=!1,v=null)}catch(e){throw E.postMessage(null),e}}else h=!1},n=function(e){v=e,h||(h=!0,E.postMessage(null))},r=function(e,n){g=d((function(){e(t.unstable_now())}),n)},a=function(){p(g),g=-1}}function k(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<x(a,t)))break e;e[r]=t,e[n]=a,n=r}}function _(e){return void 0===(e=e[0])?null:e}function S(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var l=2*(r+1)-1,o=e[l],i=l+1,u=e[i];if(void 0!==o&&0>x(o,n))void 0!==u&&0>x(u,o)?(e[r]=u,e[i]=n,r=i):(e[r]=o,e[l]=n,r=l);else{if(!(void 0!==u&&0>x(u,n)))break e;e[r]=u,e[i]=n,r=i}}}return t}return null}function x(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var N=[],C=[],P=1,T=null,L=3,O=!1,R=!1,M=!1;function z(e){for(var t=_(C);null!==t;){if(null===t.callback)S(C);else{if(!(t.startTime<=e))break;S(C),t.sortIndex=t.expirationTime,k(N,t)}t=_(C)}}function A(e){if(M=!1,z(e),!R)if(null!==_(N))R=!0,n(I);else{var t=_(C);null!==t&&r(A,t.startTime-e)}}function I(e,n){R=!1,M&&(M=!1,a()),O=!0;var l=L;try{for(z(n),T=_(N);null!==T&&(!(T.expirationTime>n)||e&&!t.unstable_shouldYield());){var o=T.callback;if("function"==typeof o){T.callback=null,L=T.priorityLevel;var i=o(T.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?T.callback=i:T===_(N)&&S(N),z(n)}else S(N);T=_(N)}if(null!==T)var u=!0;else{var s=_(C);null!==s&&r(A,s.startTime-n),u=!1}return u}finally{T=null,L=l,O=!1}}var F=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){R||O||(R=!0,n(I))},t.unstable_getCurrentPriorityLevel=function(){return L},t.unstable_getFirstCallbackNode=function(){return _(N)},t.unstable_next=function(e){switch(L){case 1:case 2:case 3:var t=3;break;default:t=L}var n=L;L=t;try{return e()}finally{L=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=F,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=L;L=e;try{return t()}finally{L=n}},t.unstable_scheduleCallback=function(e,l,o){var i=t.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?i+o:i,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:P++,callback:l,priorityLevel:e,startTime:o,expirationTime:u=o+u,sortIndex:-1},o>i?(e.sortIndex=o,k(C,e),null===_(N)&&e===_(C)&&(M?a():M=!0,r(A,o-i))):(e.sortIndex=u,k(N,e),R||O||(R=!0,n(I))),e},t.unstable_wrapCallback=function(e){var t=L;return function(){var n=L;L=t;try{return e.apply(this,arguments)}finally{L=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var l={},o=[],i=0;i<e.length;i++){var u=e[i],s=r.base?u[0]+r.base:u[0],c=l[s]||0,f="".concat(s," ").concat(c);l[s]=c+1;var d=n(f),p={css:u[1],media:u[2],sourceMap:u[3]};-1!==d?(t[d].references++,t[d].updater(p)):t.push({identifier:f,updater:a(p,r),references:1}),o.push(f)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var l=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<l.length;o++){var i=n(l[o]);t[i].references--}for(var u=r(e,a),s=0;s<l.length;s++){var c=n(l[s]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}l=u}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r=n.css,a=n.media,l=n.sourceMap;a?e.setAttribute("media",a):e.removeAttribute("media"),l&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(l))))," */")),t.styleTagTransform(r,e)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},166:(e,t,n)=>{"use strict";var r=n(294),a=n(935);function l(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var o=n(697),i=n.n(o);function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function s(e){return"/"===e.charAt(0)}function c(e,t){for(var n=t,r=n+1,a=e.length;r<a;n+=1,r+=1)e[n]=e[r];e.pop()}const f=function(e,t){if(!e)throw new Error("Invariant failed")};function d(e){return"/"===e.charAt(0)?e:"/"+e}function p(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function m(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function h(e){var t=e.pathname,n=e.search,r=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function v(e,t,n,r){var a;"string"==typeof e?(a=function(e){var t=e||"/",n="",r="",a=t.indexOf("#");-1!==a&&(r=t.substr(a),t=t.substr(0,a));var l=t.indexOf("?");return-1!==l&&(n=t.substr(l),t=t.substr(0,l)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(a=u({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==t&&void 0===a.state&&(a.state=t));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(a.key=n),r?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],a=t&&t.split("/")||[],l=e&&s(e),o=t&&s(t),i=l||o;if(e&&s(e)?a=r:r.length&&(a.pop(),a=a.concat(r)),!a.length)return"/";if(a.length){var u=a[a.length-1];n="."===u||".."===u||""===u}else n=!1;for(var f=0,d=a.length;d>=0;d--){var p=a[d];"."===p?c(a,d):".."===p?(c(a,d),f++):f&&(c(a,d),f--)}if(!i)for(;f--;f)a.unshift("..");!i||""===a[0]||a[0]&&s(a[0])||a.unshift("");var m=a.join("/");return n&&"/"!==m.substr(-1)&&(m+="/"),m}(a.pathname,r.pathname)):a.pathname=r.pathname:a.pathname||(a.pathname="/"),a}function g(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,a){if(null!=e){var l="function"==typeof e?e(t,n):e;"string"==typeof l?"function"==typeof r?r(l,a):a(!0):a(!1!==l)}else a(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var y=!("undefined"==typeof window||!window.document||!window.document.createElement);function b(e,t){t(window.confirm(e))}var w="popstate",E="hashchange";function k(){try{return window.history.state||{}}catch(e){return{}}}function _(e){void 0===e&&(e={}),y||f(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,a=!(-1===window.navigator.userAgent.indexOf("Trident")),l=e,o=l.forceRefresh,i=void 0!==o&&o,s=l.getUserConfirmation,c=void 0===s?b:s,_=l.keyLength,S=void 0===_?6:_,x=e.basename?m(d(e.basename)):"";function N(e){var t=e||{},n=t.key,r=t.state,a=window.location,l=a.pathname+a.search+a.hash;return x&&(l=p(l,x)),v(l,r,n)}function C(){return Math.random().toString(36).substr(2,S)}var P=g();function T(e){u($,e),$.length=n.length,P.notifyListeners($.location,$.action)}function L(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||M(N(e.state))}function O(){M(N(k()))}var R=!1;function M(e){R?(R=!1,T()):P.confirmTransitionTo(e,"POP",c,(function(t){t?T({action:"POP",location:e}):function(e){var t=$.location,n=A.indexOf(t.key);-1===n&&(n=0);var r=A.indexOf(e.key);-1===r&&(r=0);var a=n-r;a&&(R=!0,F(a))}(e)}))}var z=N(k()),A=[z.key];function I(e){return x+h(e)}function F(e){n.go(e)}var D=0;function j(e){1===(D+=e)&&1===e?(window.addEventListener(w,L),a&&window.addEventListener(E,O)):0===D&&(window.removeEventListener(w,L),a&&window.removeEventListener(E,O))}var U=!1,$={length:n.length,action:"POP",location:z,createHref:I,push:function(e,t){var a="PUSH",l=v(e,t,C(),$.location);P.confirmTransitionTo(l,a,c,(function(e){if(e){var t=I(l),o=l.key,u=l.state;if(r)if(n.pushState({key:o,state:u},null,t),i)window.location.href=t;else{var s=A.indexOf($.location.key),c=A.slice(0,s+1);c.push(l.key),A=c,T({action:a,location:l})}else window.location.href=t}}))},replace:function(e,t){var a="REPLACE",l=v(e,t,C(),$.location);P.confirmTransitionTo(l,a,c,(function(e){if(e){var t=I(l),o=l.key,u=l.state;if(r)if(n.replaceState({key:o,state:u},null,t),i)window.location.replace(t);else{var s=A.indexOf($.location.key);-1!==s&&(A[s]=l.key),T({action:a,location:l})}else window.location.replace(t)}}))},go:F,goBack:function(){F(-1)},goForward:function(){F(1)},block:function(e){void 0===e&&(e=!1);var t=P.setPrompt(e);return U||(j(1),U=!0),function(){return U&&(U=!1,j(-1)),t()}},listen:function(e){var t=P.appendListener(e);return j(1),function(){j(-1),t()}}};return $}function S(e,t){return(S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function x(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,S(e,t)}var N=1073741823,C="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function P(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const T=r.createContext||function(e,t){var n,a,l,o="__create-react-context-"+((C[l="__global_unique_id__"]=(C[l]||0)+1)+"__"),u=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).emitter=P(t.props.value),t}x(n,e);var r=n.prototype;return r.getChildContext=function(){var e;return(e={})[o]=this.emitter,e},r.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var n,r=this.props.value,a=e.value;((l=r)===(o=a)?0!==l||1/l==1/o:l!=l&&o!=o)?n=0:(n="function"==typeof t?t(r,a):N,0!=(n|=0)&&this.emitter.set(e.value,n))}var l,o},r.render=function(){return this.props.children},n}(r.Component);u.childContextTypes=((n={})[o]=i().object.isRequired,n);var s=function(t){function n(){var e;return(e=t.apply(this,arguments)||this).state={value:e.getValue()},e.onUpdate=function(t,n){0!=((0|e.observedBits)&n)&&e.setState({value:e.getValue()})},e}x(n,t);var r=n.prototype;return r.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?N:t},r.componentDidMount=function(){this.context[o]&&this.context[o].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?N:e},r.componentWillUnmount=function(){this.context[o]&&this.context[o].off(this.onUpdate)},r.getValue=function(){return this.context[o]?this.context[o].get():e},r.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(r.Component);return s.contextTypes=((a={})[o]=i().object,a),{Provider:u,Consumer:s}};var L=n(658),O=n.n(L);function R(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n(864);var M=n(679),z=n.n(M),A=function(e){var t=T();return t.displayName="Router-History",t}(),I=function(e){var t=T();return t.displayName="Router",t}(),F=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={location:t.history.location},n._isMounted=!1,n._pendingLocation=null,t.staticContext||(n.unlisten=t.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}l(t,e),t.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var n=t.prototype;return n.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},n.componentWillUnmount=function(){this.unlisten&&this.unlisten()},n.render=function(){return r.createElement(I.Provider,{value:{history:this.props.history,location:this.state.location,match:t.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},r.createElement(A.Provider,{children:this.props.children||null,value:this.props.history}))},t}(r.Component);r.Component,r.Component;var D={},j=0;function U(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,a=n.exact,l=void 0!==a&&a,o=n.strict,i=void 0!==o&&o,u=n.sensitive,s=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=D[n]||(D[n]={});if(r[e])return r[e];var a=[],l={regexp:O()(e,a,t),keys:a};return j<1e4&&(r[e]=l,j++),l}(n,{end:l,strict:i,sensitive:s}),a=r.regexp,o=r.keys,u=a.exec(e);if(!u)return null;var c=u[0],f=u.slice(1),d=e===c;return l&&!d?null:{path:n,url:"/"===n&&""===c?"/":c,isExact:d,params:o.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}var $=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return r.createElement(I.Consumer,null,(function(t){t||f(!1);var n=e.props.location||t.location,a=u({},t,{location:n,match:e.props.computedMatch?e.props.computedMatch:e.props.path?U(n.pathname,e.props):t.match}),l=e.props,o=l.children,i=l.component,s=l.render;return Array.isArray(o)&&0===o.length&&(o=null),r.createElement(I.Provider,{value:a},a.match?o?"function"==typeof o?o(a):o:i?r.createElement(i,a):s?s(a):null:"function"==typeof o?o(a):null)}))},t}(r.Component);r.Component;var B=function(e){function t(){return e.apply(this,arguments)||this}return l(t,e),t.prototype.render=function(){var e=this;return r.createElement(I.Consumer,null,(function(t){t||f(!1);var n,a,l=e.props.location||t.location;return r.Children.forEach(e.props.children,(function(e){if(null==a&&r.isValidElement(e)){n=e;var o=e.props.path||e.props.from;a=o?U(l.pathname,u({},e.props,{path:o})):t.match}})),a?r.cloneElement(n,{location:l,computedMatch:a}):null}))},t}(r.Component);r.useContext;var V=function(e){function t(){for(var t,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(t=e.call.apply(e,[this].concat(r))||this).history=_(t.props),t}return l(t,e),t.prototype.render=function(){return r.createElement(F,{history:this.history,children:this.props.children})},t}(r.Component);r.Component;var H=function(e,t){return"function"==typeof e?e(t):e},W=function(e,t){return"string"==typeof e?v(e,null,null,t):e},Q=function(e){return e},q=r.forwardRef;void 0===q&&(q=Q);var K=q((function(e,t){var n=e.innerRef,a=e.navigate,l=e.onClick,o=R(e,["innerRef","navigate","onClick"]),i=o.target,s=u({},o,{onClick:function(e){try{l&&l(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||i&&"_self"!==i||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),a())}});return s.ref=Q!==q&&t||n,r.createElement("a",s)})),Y=q((function(e,t){var n=e.component,a=void 0===n?K:n,l=e.replace,o=e.to,i=e.innerRef,s=R(e,["component","replace","to","innerRef"]);return r.createElement(I.Consumer,null,(function(e){e||f(!1);var n=e.history,c=W(H(o,e.location),e.location),d=c?n.createHref(c):"",p=u({},s,{href:d,navigate:function(){var t=H(o,e.location);(l?n.replace:n.push)(t)}});return Q!==q?p.ref=t||i:p.innerRef=i,r.createElement(a,p)}))})),X=function(e){return e},Z=r.forwardRef;void 0===Z&&(Z=X),Z((function(e,t){var n=e["aria-current"],a=void 0===n?"page":n,l=e.activeClassName,o=void 0===l?"active":l,i=e.activeStyle,s=e.className,c=e.exact,d=e.isActive,p=e.location,m=e.sensitive,h=e.strict,v=e.style,g=e.to,y=e.innerRef,b=R(e,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return r.createElement(I.Consumer,null,(function(e){e||f(!1);var n=p||e.location,l=W(H(g,n),n),w=l.pathname,E=w&&w.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),k=E?U(n.pathname,{path:E,exact:c,sensitive:m,strict:h}):null,_=!!(d?d(k,n):k),S=_?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(s,o):s,x=_?u({},v,{},i):v,N=u({"aria-current":_&&a||null,className:S,style:x,to:l},b);return X!==Z?N.ref=t||y:N.innerRef=y,r.createElement(Y,N)}))}));const G=()=>{const[e,t]=(0,r.useState)(!1),[n,a]=(0,r.useState)(!1);return r.createElement("header",{id:"masthead-black-bar",className:"clearfix masthead-black-bar | ebi-header-footer vf-content vf-u-fullbleed"},r.createElement("div",null,r.createElement("nav",{id:"embl-bar",className:"embl-bar global-masthead-interactive-banner "+(e?"active":"")},r.createElement("div",{className:"row padding-bottom-medium"},r.createElement("div",{className:"columns padding-top-medium"},r.createElement("button",{className:"close-button","aria-label":"Close alert",type:"button",onClick:()=>t(!1)},r.createElement("span",{"aria-hidden":"true"},"×"))),r.createElement("div",{className:"columns medium-7"},r.createElement("div",{className:"large-10 medium-12"},r.createElement("div",{className:"margin-bottom-large padding-top-xsmall margin-top-large"},r.createElement("h3",{className:"no-underline inline",style:{lineHeight:"1rem"}},r.createElement("a",{href:"//embl.org"},"EMBL"))," ","was set up in 1974 as Europe’s flagship laboratory for the life sciences – an intergovernmental organisation with more than 80 independent research groups covering the spectrum of molecular biology:")),r.createElement("div",{className:"row large-up-3 medium-up-3 small-up-2 no-underline medium-11"},r.createElement("div",{className:"column padding-bottom-medium"},r.createElement("a",{className:"",href:"https://www.embl.de/research/index.php"},r.createElement("h5",{className:"inline underline"},"Research:")," perform basic research in molecular biology")),r.createElement("div",{className:"column padding-bottom-medium"},r.createElement("a",{className:"",href:"https://www.embl.de/services/index.html"},r.createElement("h5",{className:"inline underline"},"Services:")," offer vital services to scientists in the member states")),r.createElement("div",{className:"column padding-bottom-medium"},r.createElement("a",{className:"",href:"https://www.embl.de/training/index.php"},r.createElement("h5",{className:"inline underline"},"Training")," scientists, students and visitors at all levels")),r.createElement("div",{className:"column padding-bottom-medium"},r.createElement("a",{className:"",href:"https://www.embl.de/research/tech_transfer/index.html"},r.createElement("h5",{className:"inline underline"},"Transfer")," and development of technology")),r.createElement("div",{className:"column padding-bottom-medium"},r.createElement("h5",{className:"inline underline"},"Develop")," new instruments and methods"),r.createElement("div",{className:"column padding-bottom-medium"},r.createElement("h5",{className:"inline underline"},"Integrating")," life science research in Europe")),r.createElement("div",{className:"margin-top-xlarge no-underline"},r.createElement("h3",null,r.createElement("a",{href:"//embl.org",className:"readmore"},"More about EMBL")))),r.createElement("div",{className:"columns medium-5"},r.createElement("div",{className:"large-10 medium-12"},r.createElement("h3",{className:"inline"},"Six sites"),r.createElement("p",null,"represent EMBL in Europe.")),r.createElement("div",{className:"row medium-up-2 small-up-2"},r.createElement("div",{className:"column"},r.createElement("h5",{className:"inline"},r.createElement("a",{href:"//www.embl.es/"},"Barcelona")),r.createElement("p",{className:""},"Tissue biology and disease modelling")),r.createElement("div",{className:"column"},r.createElement("h5",{className:"inline"},r.createElement("a",{href:"//www.embl.fr/"},"Grenoble")),r.createElement("p",{className:""},"Structural biology")),r.createElement("div",{className:"column"},r.createElement("h5",{className:"inline"},r.createElement("a",{href:"//www.embl-hamburg.de/"},"Hamburg")),r.createElement("p",{className:""},"Structural biology")),r.createElement("div",{className:"column"},r.createElement("h5",{className:"inline"},r.createElement("a",{href:"//www.embl.de/"},"Heidelberg")),r.createElement("p",{className:""},"Main laboratory")),r.createElement("div",{className:"column"},r.createElement("h5",{className:"inline"},r.createElement("a",{href:"https://www.ebi.ac.uk/"},"Hinxton")),r.createElement("p",{className:"margin-bottom-none"},"EMBL-EBI: European Bioinformatics Institute")),r.createElement("div",{className:"column"},r.createElement("h5",{className:"inline"},r.createElement("a",{href:"//www.embl.it/"},"Rome")),r.createElement("p",{className:""},"Epigenetics and neurobiology"))))))),r.createElement("div",null,r.createElement("nav",{id:"search-bar",className:"search-bar global-masthead-interactive-banner "+(n?"active":"")},r.createElement("div",{className:"row padding-bottom-medium"},r.createElement("div",{className:"columns padding-top-medium"},r.createElement("button",{className:"close-button","aria-label":"Close alert",type:"button",onClick:()=>a(!1)},r.createElement("span",{"aria-hidden":"true"},"×")))),r.createElement("div",{className:"row"},r.createElement("form",{id:"global-search",name:"global-search",action:"/ebisearch/search.ebi",method:"GET",className:""},r.createElement("fieldset",null,r.createElement("div",{className:"input-group"},r.createElement("input",{type:"text",name:"query",id:"global-searchbox",className:"input-group-field",placeholder:"Search all of EMBL-EBI"}),r.createElement("div",{className:"input-group-button"},r.createElement("input",{type:"submit",name:"submit",value:"Search",className:"button"}),r.createElement("input",{type:"hidden",name:"db",value:"allebi",defaultChecked:!0}),r.createElement("input",{type:"hidden",name:"requestFrom",value:"masthead-black-bar",defaultChecked:!0})))))))),r.createElement("div",null,r.createElement("nav",{className:"row"},r.createElement("ul",{id:"global-nav",className:"menu global-nav text-right"},r.createElement("li",{className:"home-mobile"},r.createElement("a",{href:"https://www.ebi.ac.uk"}," ")),r.createElement("li",{className:"where embl hide"},r.createElement("a",{href:"http://www.embl.org"},"EMBL")),r.createElement("li",{className:"where barcelona hide"},r.createElement("a",{href:"#"},"Barcelona")),r.createElement("li",{className:"where hamburg hide"},r.createElement("a",{href:"#"},"Hamburg")),r.createElement("li",{className:"where grenoble hide"},r.createElement("a",{href:"#"},"Heidelberg")),r.createElement("li",{className:"where grenoble hide"},r.createElement("a",{href:"#"},"Grenoble")),r.createElement("li",{className:"where rome hide"},r.createElement("a",{href:"#"},"Rome")),r.createElement("li",{id:"embl-selector",className:"float-right show-for-medium embl-selector embl-ebi "+(e?"active":"")},r.createElement("button",{type:"button",className:"button float-right",onClick:()=>t(!e)}," ")),r.createElement("li",{className:"float-right search"},r.createElement("a",{href:"#",className:"inline-block collpased float-left search-toggle",onClick:()=>a(!n)},r.createElement("span",{className:"show-for-small-only"},"Search"))),r.createElement("li",{className:"what about"},r.createElement("a",{href:"https://www.ebi.ac.uk/about"},"About us")),r.createElement("li",{className:"what training"},r.createElement("a",{href:"https://www.ebi.ac.uk/training"},"Training")),r.createElement("li",{className:"what research"},r.createElement("a",{href:"https://www.ebi.ac.uk/research"},"Research")),r.createElement("li",{className:"what services"},r.createElement("a",{href:"https://www.ebi.ac.uk/services"},"Services")),r.createElement("li",{className:"where ebi"},r.createElement("a",{href:"https://www.ebi.ac.uk"},"EMBL-EBI"))))))};var J=n(379),ee=n.n(J),te=n(795),ne=n.n(te),re=n(569),ae=n.n(re),le=n(565),oe=n.n(le),ie=n(216),ue=n.n(ie),se=n(589),ce=n.n(se),fe=n(141),de={};de.styleTagTransform=ce(),de.setAttributes=oe(),de.insert=ae().bind(null,"head"),de.domAPI=ne(),de.insertStyleElement=ue(),ee()(fe.Z,de),fe.Z&&fe.Z.locals&&fe.Z.locals;var pe=n(838);const me=()=>r.createElement("section",{className:"vf-hero vf-hero--400 | vf-u-fullbleed"},r.createElement("div",{className:"vf-hero__content | vf-box | vf-stack vf-stack--400"},r.createElement("img",{src:pe,alt:"MGnify Logo",style:{height:"4em"}}),r.createElement("p",{className:"vf-hero__subheading"},"Submit, analyse, discover and compare microbiome data"))),he=()=>r.createElement("footer",{className:"vf-footer","data-vf-google-analytics-region":"embl-footer"},r.createElement("div",{className:"vf-footer__inner"},r.createElement("p",{className:"vf-footer__notice"},r.createElement("a",{className:"vf-footer__link",href:"//www.ebi.ac.uk/about/our-impact"},"EMBL-EBI is the home for big data in biology. We help scientists exploit complex information to make discoveries that benefit humankind.")),r.createElement("div",{className:"vf-footer__links-group | vf-grid"},r.createElement("div",{className:"vf-links"},r.createElement("h4",{className:"vf-links__heading"},r.createElement("a",{className:"vf-heading__link",href:"//www.ebi.ac.uk/services"},"Services")),r.createElement("ul",{className:"vf-links__list | vf-list"},r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/services",className:"vf-list__link"},"By topic")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/services/all",className:"vf-list__link"},"By name (A-Z)")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/support",className:"vf-list__link"},"Help & Support")))),r.createElement("div",{className:"vf-links"},r.createElement("h4",{className:"vf-links__heading"},r.createElement("a",{className:"vf-heading__link",href:"//www.ebi.ac.uk/research"},"Research")),r.createElement("ul",{className:"vf-links__list | vf-list"},r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/research/publications",className:"vf-list__link"},"Publications")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/research/groups",className:"vf-list__link"},"Research groups")),r.createElement("li",{className:"vf-list__item vf-footer__notice"},r.createElement("a",{href:"//www.ebi.ac.uk/research/postdocs",className:"vf-list__link"},"Postdocs"),"&",r.createElement("a",{href:"//www.ebi.ac.uk/research/eipp",className:"vf-list__link"},"PhDs")))),r.createElement("div",{className:"vf-links"},r.createElement("h4",{className:"vf-links__heading"},r.createElement("a",{className:"vf-heading__link",href:"//www.ebi.ac.uk/training"},"Training")),r.createElement("ul",{className:"vf-links__list | vf-list"},r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/training/live-events",className:"vf-list__link"},"Live training")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/training/on-demand",className:"vf-list__link"},"On-demand training")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/training/trainer-support",className:"vf-list__link"},"Support for trainers")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/training/contact-us",className:"vf-list__link"},"Contact organisers")))),r.createElement("div",{className:"vf-links"},r.createElement("h4",{className:"vf-links__heading"},r.createElement("a",{className:"vf-heading__link",href:"//www.ebi.ac.uk/industry"},"Industry")),r.createElement("ul",{className:"vf-links__list | vf-list"},r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/industry/private",className:"vf-list__link"},"Members Area")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/industry/workshops",className:"vf-list__link"},"Workshops")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/industry/sme-forum",className:"vf-list__link"},"SME Forum")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/industry/contact",className:"vf-list__link"},"Contact Industry programme")))),r.createElement("div",{className:"vf-links"},r.createElement("h4",{className:"vf-links__heading"},r.createElement("a",{className:"vf-heading__link",href:"//www.ebi.ac.uk/about"},"About")),r.createElement("ul",{className:"vf-links__list | vf-list"},r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/about/contact",className:"vf-list__link"},"Contact us")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/about/events",className:"vf-list__link"},"Events")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/about/jobs",className:"vf-list__link"},"Jobs")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/about/news",className:"vf-list__link"},"News")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//www.ebi.ac.uk/about/people",className:"vf-list__link"},"People & groups")),r.createElement("li",{className:"vf-list__item"},r.createElement("a",{href:"//intranet.ebi.ac.uk",className:"vf-list__link"},"Intranet for staff"))))),r.createElement("p",{className:"vf-footer__legal"},r.createElement("span",{className:"vf-footer__legal-text"},r.createElement("a",{className:"vf-footer__link",href:"https://www.google.co.uk/maps/place/Hinxton,+Saffron+Walden+CB10+1SD/@52.0815334,0.1891518,17z/data=!3m1!4b1!4m5!3m4!1s0x47d87ccbfbd2538b:0x7bbdb4cde2779ff3!8m2!3d52.0800838!4d0.186415"},"EMBL-EBI, Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, UK.")),r.createElement("span",{className:"vf-footer__legal-text"},r.createElement("a",{className:"vf-footer__link",href:"tel:00441223494444"},"Tel: +44 (0)1223 49 44 44")),r.createElement("span",{className:"vf-footer__legal-text"},r.createElement("a",{className:"vf-footer__link",href:"//www.ebi.ac.uk/about/contact"},"Full contact details"))),r.createElement("p",{className:"vf-footer__legal"},r.createElement("span",{className:"vf-footer__legal-text"},"Copyright © EMBL 2021"),r.createElement("span",{className:"vf-footer__legal-text"},"EMBL-EBI is part of the",r.createElement("a",{className:"vf-footer__link",href:"//www.embl.org"},"European Molecular Biology Laboratory")),r.createElement("span",{className:"vf-footer__legal-text"},r.createElement("a",{className:"vf-footer__link",href:"//www.ebi.ac.uk/about/terms-of-use"},"Terms of use"))))),ve=JSON.parse('{"CF":"http://localhost:9000/"}'),ge=()=>{const[e,t]=(0,r.useState)(!!document&&!(document.cookie.match(/cookies-accepted=(true)/i)||[])[1]);return e?r.createElement("div",{className:"vf-banner vf-banner--fixed vf-banner--bottom vf-banner--notice","data-vf-js-banner":"","data-vf-js-banner-state":"dismissible","data-vf-js-banner-button-text":"NaN","data-vf-js-banner-cookie-name":"NaN","data-vf-js-banner-cookie-version":"NaN","data-vf-js-banner-auto-accept":"false","data-vf-js-banner-id":"6303666"},r.createElement("div",{className:"vf-banner__content | vf-grid","data-vf-js-banner-text":""},r.createElement("p",{className:"vf-banner__text vf-banner__text--lg"},"This website uses cookies, and the limiting processing of your personal data to function. By using the site you are agreeing to this as outlined in our"," ",r.createElement("a",{className:"vf-banner__link",href:"https://www.ebi.ac.uk/data-protection/privacy-notice/embl-ebi-public-website"},"Privacy Notice")," ","and"," ",r.createElement("a",{className:"vf-banner__link",href:"https://www.ebi.ac.uk/about/terms-of-use"},"Terms Of Use"),"."),r.createElement("button",{className:"vf-button vf-button--primary","data-vf-js-banner-close":"",onClick:()=>{const e=new Date;e.setFullYear(e.getFullYear()+1),document.cookie=`cookies-accepted=true;expires=${e.toUTCString()};path=${ve.CF}`,t(!1)},type:"button"},"Accept"))):null},ye=[{label:"Overview",path:"/"},{label:"About",path:"/about"},{label:"Help",path:"/help"}],be=(Ee="withRouter("+((we=({location:e})=>r.createElement("nav",{className:"vf-navigation vf-navigation--main | vf-cluster"},r.createElement("ul",{className:"vf-navigation__list | vf-list | vf-cluster__inner"},ye.map((({label:t,path:n})=>r.createElement("li",{className:"vf-navigation__item",key:n},r.createElement(Y,{className:"vf-navigation__link","aria-current":e.pathname===n?"page":void 0,to:n},t))))))).displayName||we.name)+")",(ke=function(e){var t=e.wrappedComponentRef,n=R(e,["wrappedComponentRef"]);return r.createElement(I.Consumer,null,(function(e){return e||f(!1),r.createElement(we,u({},n,e,{ref:t}))}))}).displayName=Ee,ke.WrappedComponent=we,z()(ke,we));var we,Ee,ke,_e=n(87),Se={};Se.styleTagTransform=ce(),Se.setAttributes=oe(),Se.insert=ae().bind(null,"head"),Se.domAPI=ne(),Se.insertStyleElement=ue(),ee()(_e.Z,Se),_e.Z&&_e.Z.locals&&_e.Z.locals;const xe=(0,r.lazy)((()=>n.e(40).then(n.bind(n,40)))),Ne=(0,r.lazy)((()=>n.e(778).then(n.bind(n,778)))),Ce=(0,r.lazy)((()=>n.e(343).then(n.bind(n,343))));a.render(r.createElement(V,null,r.createElement((()=>r.createElement(r.Fragment,null,r.createElement(G,null),r.createElement(be,null),r.createElement(me,null),r.createElement(r.Suspense,{fallback:()=>r.createElement("div",null,"Loading")},r.createElement(B,null,r.createElement($,{path:"/about"},r.createElement(Ne,null)),r.createElement($,{path:"/help"},r.createElement(Ce,null)),r.createElement($,{path:"/"},r.createElement(xe,null)))),r.createElement(he,null),r.createElement(ge,null))),null)),document.getElementById("root"))},806:(e,t,n)=>{"use strict";e.exports=n.p+"static/396a2f9d8cb242d865db.jpg"},838:(e,t,n)=>{"use strict";e.exports=n.p+"static/c05a06c72992d4960e37.svg"}},r={};function a(e){var t=r[e];if(void 0!==t)return t.exports;var l=r[e]={id:e,exports:{}};return n[e](l,l.exports,a),l.exports}a.m=n,a.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return a.d(t,{a:t}),t},a.d=(e,t)=>{for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce(((t,n)=>(a.f[n](e,t),t)),[])),a.u=e=>e+".mgnify_bundle.js",a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="mgportalv2:",a.l=(n,r,l,o)=>{if(e[n])e[n].push(r);else{var i,u;if(void 0!==l)for(var s=document.getElementsByTagName("script"),c=0;c<s.length;c++){var f=s[c];if(f.getAttribute("src")==n||f.getAttribute("data-webpack")==t+l){i=f;break}}i||(u=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,a.nc&&i.setAttribute("nonce",a.nc),i.setAttribute("data-webpack",t+l),i.src=n),e[n]=[r];var d=(t,r)=>{i.onerror=i.onload=null,clearTimeout(p);var a=e[n];if(delete e[n],i.parentNode&&i.parentNode.removeChild(i),a&&a.forEach((e=>e(r))),t)return t(r)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=d.bind(null,i.onerror),i.onload=d.bind(null,i.onload),u&&document.head.appendChild(i)}},a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;a.g.importScripts&&(e=a.g.location+"");var t=a.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=e})(),(()=>{a.b=document.baseURI||self.location.href;var e={179:0};a.f.j=(t,n)=>{var r=a.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var l=new Promise(((n,a)=>r=e[t]=[n,a]));n.push(r[2]=l);var o=a.p+a.u(t),i=new Error;a.l(o,(n=>{if(a.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var l=n&&("load"===n.type?"missing":n.type),o=n&&n.target&&n.target.src;i.message="Loading chunk "+t+" failed.\n("+l+": "+o+")",i.name="ChunkLoadError",i.type=l,i.request=o,r[1](i)}}),"chunk-"+t,t)}};var t=(t,n)=>{var r,l,[o,i,u]=n,s=0;for(r in i)a.o(i,r)&&(a.m[r]=i[r]);for(u&&u(a),t&&t(n);s<o.length;s++)l=o[s],a.o(e,l)&&e[l]&&e[l][0](),e[o[s]]=0},n=self.webpackChunkmgportalv2=self.webpackChunkmgportalv2||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),a(166)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,